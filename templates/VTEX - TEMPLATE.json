{
    "openapi": "Insert here the openapi version.",
    "info": {
        "version": "Insert documented file version.",
        "title": "Insert here the API file title. ",
        "description": "Insert here the API description.",
        "license": {
            "name": "MIT"
        }
    },
    "servers": [
        {
            "url": "Insert here the URL of the server used in this API. If more than one server is used in the same API, it's necessary to create a file for each server.",
            "description": "Describe here what is the server.",
            "variables": { //"Declare here the variables that make up the server for this API. Each variable must be declared as follows."
                "variable1": {
                    "default": "{variable1}",
                    "description": "Description of variable1"
                },
                "variable2": {
                    "default": "{variable2}",
                    "description": "Description of variable2"
                }
            }
        }
    ],
    "paths": { //Here you declare all API paths that use the above server.
        "/exemple": { //Here you will declare the methods that have this path as part. Each method is declared as an object as below.
            "get": {
                "summary": "Insert endpoint name.",
                "operationId": "REVIEW",
                "tags": [
                    "Enter the name of the category under which the endpoint will be grouped."
                ],
                "parameters": [ //Declare the variables used in the endpoint path to perform the call.
                    {
                        "name": "Parameter name.",
                        "in": "What type is the parameter.",
                        "description": "Parameter description.",
                        "required": "Inform if the parameter is mandatory or not.",
                        
                        "schema": {
                            "type": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An paged array of pets",
                        "headers": {
                            "x-next": {
                                "description": "A link to the next page of responses",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pets"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a pet",
                "operationId": "createPets",
                "tags": [
                    "pets"
                ],
                "responses": {
                    "201": {
                        "description": "Null response"
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/pets/{petId}": {
            "get": {
                "summary": "Info for a specific pet",
                "operationId": "showPetById",
                "tags": [
                    "pets"
                ],
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the pet to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pets"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "appKey": [],
            "appToken": []
        }
    ],
    "components": {
        "securitySchemes": {
            "appKey": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppKey"
            },
            "appToken": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppToken"
            }
        },
        "schemas": {
            "Pet": {
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    }
                }
            },
            "Pets": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Pet"
                }
            },
            "Error": {
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    }
}