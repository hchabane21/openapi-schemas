{
  "_": {
    "postman_id": "8c49105a-a95f-4b71-862c-7e9549ae023b"
  },
  "item": [
    {
      "id": "928ae5fc-6c27-40f0-96f3-f665aa3c36a9",
      "name": "Session",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b2e345b4-077a-4f95-9519-9cf87ee8ffa5",
          "name": "Create new session",
          "request": {
            "name": "Create new session",
            "description": {
              "content": "Creates a new session and returns a session token and a segment token. Also stores `vtex_session` and `vtex_segment` cookies, with the same values returned in the response.\n\r\n\rAll parameters in the body that are not within the public namespace will be ignored. Query string items will automatically be added to the public namespace.\n\r\n\r>⚠️ The Session Manager API uses the `vtex_session` and `vtex_segment` cookies to store the data required to identify the user and the session. These cookies are stored in the user's browser when the session is created and sent automatically in every request to that domain. You will have to reproduce that by sending these cookies as headers in other requests to Session Manager API in order for it to work outside of a browser environment.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [authentication](https://developers.vtex.com/docs/guides/authentication) or [permissions](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sessions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL. (This can only be one of vtexcommercestable)",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"public\": {\n    \"variable1\": {\n      \"value\": \"value1\"\n    },\n    \"variable2\": {\n      \"value\": \"value2\"\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8ae1d3de-51c2-4ef2-8840-c0e6bc82b79a",
              "name": "Created",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sessions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL. (This can only be one of vtexcommercestable)",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"public\": {\n    \"variable1\": {\n      \"value\": \"value1\"\n    },\n    \"variable2\": {\n      \"value\": \"value2\"\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"sessionToken\": \"eyJhbGciOiJFUzI1NiIsImtpZCI6IjM5MEI4MTM1RDUzQ0MwMUY0RjA4N0YwMzA2RjhDODMzNzBDMjY4M0UiLCJ0eXAiOiJqd3QifQ.eyJhY2NvdW50LmlkIjoiYThiMjdmYjQtNjUxNi00Y2MwLTgyYjYtYTVmMmIwMTFlNmUyIiwiaWQiOiIyNmQyY2I2Yy0yMTNlLTQ5MzYtOWUyYS0xZDFlMjk5ZWMzM2IiLCJ2ZXJzaW9uIjoyLCJzdWIiOiJzZXNzaW9uIiwiYWNjb3VudCI6InNlc3Npb24iLCJleHAiOjE2OTM1Nzg5NzYsImlhdCI6MTY5Mjg4Nzc3NiwiaXNzIjoidG9rZW4tZW1pdHRlciIsImp0aSI6IjhiYWU2NzdmLWE0NTAtNGI0OC05YTBkLTViMzAwYjNiY2NkOCJ9.Ak1bn2xEA1A5dVN4qR6RI8vnZpSpLXyVxFCthMoVjmWn0HlP5BqMHEMYApDj8TPPhyxT0hGT0vkmvMQa2Mprrw\",\n  \"segmentToken\": \"eyJjYW1wYWlnbnMiOm51bGwsImNoYW5uZWwiOiIxIiwicHJpY2VUYWJsZXMiOm51bGwsInJlZ2lvbklkIjpudWxsLCJ1dG1fY2FtcGFpZ24iOm51bGwsInV0bV9zb3VyY2UiOm51bGwsInV0bWlfY2FtcGFpZ24iOm51bGwsImN1cnJlbmN5Q29kZSI6IkJSTCIsImN1cnJlbmN5U3ltYm9sIjoiUiQiLCJjb3VudHJ5Q29kZSI6IkJSQSIsImN1bHR1cmVJbmZvIjoiZW4tVVMiLCJjaGFubmVsUHJpdmFjeSI6InB1YmxpYyJ9\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cfddbf6c-c5bb-4581-a0e6-a68dad1bd4bb",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/sessions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/sessions - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/sessions - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Object containing session token and segment token.\",\"properties\":{\"sessionToken\":{\"type\":\"string\",\"description\":\"Token that identifies the user's individual session.\"},\"segmentToken\":{\"type\":\"string\",\"description\":\"Token that identifies the user's segment, shared with other users with similar navigation parameters.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/sessions - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "56f2e673-dff5-43c8-b6a0-800e76dfadc5",
          "name": "Get session",
          "request": {
            "name": "Get session",
            "description": {
              "content": "Retrieves information from a previously created sesssion.\n\r\n\r>⚠️ The Session Manager API uses the `vtex_session` and `vtex_segment` cookies to store the data required to identify the user and the session. These cookies are stored in the user's browser when the session is created and sent automatically in every request to that domain. You will have to reproduce that by sending these cookies as headers to Session Manager API in order for it to work outside of a browser environment.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [authentication](https://developers.vtex.com/docs/guides/authentication) or [permissions](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sessions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Items are the keys of the values you wish to get. They follow the format `namespace1.key1,namespace2.key2`.\n\r\n\rIf you wish to recover the data sent on [Create new session](https://developers.vtex.com/docs/api-reference/session-manager-api#post-/api/sessions), it should be `public.{key}`, replacing `{key}` with the name of the custom property you created. Following the example request presented in [Create new session](https://developers.vtex.com/docs/api-reference/session-manager-api#post-/api/sessions), it would be `public.variable1,public.variable2`.\n\r\n\rIf you want to retrieve all keys from Session Manager, you can use the wildcard operator (`*`) as a value for this query parameter.",
                    "type": "text/plain"
                  },
                  "key": "items",
                  "value": "*"
                }
              ],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL. (This can only be one of vtexcommercestable)",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "type": "any",
                  "value": "vtex_session",
                  "key": "key"
                },
                {
                  "type": "any",
                  "value": "{{apiKey}}",
                  "key": "value"
                },
                {
                  "type": "any",
                  "value": "header",
                  "key": "in"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f76a94cf-26f8-439a-96ea-11cd4aa693da",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sessions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "items",
                      "value": "*"
                    }
                  ],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL. (This can only be one of vtexcommercestable)",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "vtex_session",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"26d2cb6c-213e-4936-9e2a-1d1e299ec33b\",\n  \"namespaces\": {\n    \"account\": {\n      \"id\": {\n        \"value\": \"a8b27fb4-6516-4cc0-82b6-a5f2b011e6e2\",\n        \"keepAlive\": true\n      },\n      \"accountName\": {\n        \"value\": \"apiexamples\"\n      }\n    },\n    \"store\": {\n      \"channel\": {\n        \"value\": \"1\"\n      },\n      \"countryCode\": {\n        \"value\": \"BRA\"\n      },\n      \"cultureInfo\": {\n        \"value\": \"en-US\"\n      },\n      \"currencyCode\": {\n        \"value\": \"BRL\"\n      },\n      \"currencySymbol\": {\n        \"value\": \"R$\"\n      },\n      \"channelPrivacy\": {\n        \"value\": \"public\"\n      }\n    },\n    \"public\": {\n      \"variable1\": {\n        \"value\": \"value1\"\n      },\n      \"variable2\": {\n        \"value\": \"value2\"\n      }\n    },\n    \"checkout\": {\n      \"regionId\": {\n        \"value\": \"v2.1BB18CE648B5111D0933734ED83EC783\"\n      }\n    }\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5209ab4a-0f29-4ca6-8548-edeb363cf522",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/sessions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/sessions - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/sessions - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Session information.\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Session ID.\"},\"namespaces\":{\"type\":\"object\",\"description\":\"Object with namespaces, each containing a set of information about the session.\",\"properties\":{\"account\":{\"type\":\"object\",\"description\":\"Account information related to the session.\",\"properties\":{\"id\":{\"type\":\"object\",\"description\":\"VTEX account ID.\",\"properties\":{\"value\":{\"type\":\"string\",\"description\":\"Value of the VTEX account ID.\"},\"keepAlive\":{\"type\":\"boolean\",\"description\":\"Determines whether or not the connection should be kept alive.\"}}},\"accountName\":{\"type\":\"object\",\"description\":\"VTEX account name.\",\"properties\":{\"value\":{\"type\":\"string\",\"description\":\"Value of the VTEX account name.\"}}}}},\"store\":{\"type\":\"object\",\"description\":\"Store information related to the session.\",\"properties\":{\"channel\":{\"type\":\"object\",\"description\":\"[Trade policy](https://help.vtex.com/en/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV) ID.\",\"properties\":{\"value\":{\"type\":\"string\",\"description\":\"Value of the [Trade policy](https://help.vtex.com/en/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV) ID.\"}}},\"countryCode\":{\"type\":\"object\",\"description\":\"Country code.\",\"properties\":{\"value\":{\"type\":\"string\",\"description\":\"Value of the country code.\"}}},\"cultureInfo\":{\"type\":\"object\",\"description\":\"Locale that provides culture-specific information, such as the language, sublanguage, country/region, calendar, and conventions associated with a particular culture. Read [this documentation](https://learn.microsoft.com/en-us/dotnet/api/system.globalization.cultureinfo?view=net-7.0#culture-names-and-identifiers) for more details.\",\"properties\":{\"value\":{\"type\":\"string\",\"description\":\"Value of the `cultureInfo` property.\"}}},\"currencyCode\":{\"type\":\"object\",\"description\":\"Currency code.\",\"properties\":{\"value\":{\"type\":\"string\",\"description\":\"Value of the currency code.\"}}},\"currencySymbol\":{\"type\":\"object\",\"description\":\"Currency symbol.\",\"properties\":{\"value\":{\"type\":\"string\",\"description\":\"Value of the currency symbol.\"}}},\"channelPrivacy\":{\"type\":\"object\",\"description\":\"Defines whether or not the channel is private.\",\"properties\":{\"value\":{\"type\":\"string\",\"description\":\"Value containing the channel's privacy option.\"}}}}},\"public\":{\"type\":\"object\",\"description\":\"Public and editable information related to the session.\",\"additionalProperties\":{\"type\":\"object\",\"description\":\"Custom property.\",\"properties\":{\"value\":{\"type\":\"string\",\"description\":\"Value of the custom property.\"}}}},\"checkout\":{\"type\":\"object\",\"description\":\"Checkout information related to the session.\",\"properties\":{\"regionId\":{\"type\":\"object\",\"description\":\"ID of the session's region.\",\"properties\":{\"value\":{\"type\":\"string\",\"description\":\"Value of the Region ID.\"}}}}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/sessions - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bb70cc4f-7c13-42bb-8e37-244897dd78de",
          "name": "Edit session",
          "request": {
            "name": "Edit session",
            "description": {
              "content": "Edits information from a previously created sesssion.\n\r\n\rThis endpoint works the same way as the [Create new session](https://developers.vtex.com/docs/api-reference/session-manager-api#post-/api/sessions) endpoint, but when the request is sent with a `vtex_session` and the `vtex_segment` cookies in the header, it retrieves the session first and then applies the changes instead of generating a new one.\n\r\n\rOnly keys inside the `public` namespace in the request body are considered, and query parameters are automatically added to the public namespace.\n\r\n\r>⚠️ The Session Manager API uses the `vtex_session` and `vtex_segment` cookies to store the data required to identify the user and the session. These cookies are stored in the user's browser when the session is created and sent automatically in every request to that domain. You will have to reproduce that by sending these cookies as headers to Session Manager API in order for it to work outside of a browser environment.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [authentication](https://developers.vtex.com/docs/guides/authentication) or [permissions](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "sessions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL. (This can only be one of vtexcommercestable)",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"public\": {\n    \"variable2\": {\n      \"value\": \"value2_patched\"\n    },\n    \"variable3\": {\n      \"value\": \"value3\"\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "type": "any",
                  "value": "vtex_session",
                  "key": "key"
                },
                {
                  "type": "any",
                  "value": "{{apiKey}}",
                  "key": "value"
                },
                {
                  "type": "any",
                  "value": "header",
                  "key": "in"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0480dbef-09c3-4e16-9f5a-9e81dde4177f",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "sessions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL. (This can only be one of vtexcommercestable)",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "vtex_session",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"public\": {\n    \"variable2\": {\n      \"value\": \"value2_patched\"\n    },\n    \"variable3\": {\n      \"value\": \"value3\"\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"sessionToken\": \"eyJhbGciOiJFUzI1NiIsImtpZCI6IjM5MEI4MTM1RDUzQ0MwMUY0RjA4N0YwMzA2RjhDODMzNzBDMjY4M0UiLCJ0eXAiOiJqd3QifQ.eyJhY2NvdW50LmlkIjoiYThiMjdmYjQtNjUxNi00Y2MwLTgyYjYtYTVmMmIwMTFlNmUyIiwiaWQiOiIyNmQyY2I2Yy0yMTNlLTQ5MzYtOWUyYS0xZDFlMjk5ZWMzM2IiLCJ2ZXJzaW9uIjoyLCJzdWIiOiJzZXNzaW9uIiwiYWNjb3VudCI6InNlc3Npb24iLCJleHAiOjE2OTM1Nzg5NzYsImlhdCI6MTY5Mjg4Nzc3NiwiaXNzIjoidG9rZW4tZW1pdHRlciIsImp0aSI6IjhiYWU2NzdmLWE0NTAtNGI0OC05YTBkLTViMzAwYjNiY2NkOCJ9.Ak1bn2xEA1A5dVN4qR6RI8vnZpSpLXyVxFCthMoVjmWn0HlP5BqMHEMYApDj8TPPhyxT0hGT0vkmvMQa2Mprrw\",\n  \"segmentToken\": \"eyJjYW1wYWlnbnMiOm51bGwsImNoYW5uZWwiOiIxIiwicHJpY2VUYWJsZXMiOm51bGwsInJlZ2lvbklkIjpudWxsLCJ1dG1fY2FtcGFpZ24iOm51bGwsInV0bV9zb3VyY2UiOm51bGwsInV0bWlfY2FtcGFpZ24iOm51bGwsImN1cnJlbmN5Q29kZSI6IkJSTCIsImN1cnJlbmN5U3ltYm9sIjoiUiQiLCJjb3VudHJ5Q29kZSI6IkJSQSIsImN1bHR1cmVJbmZvIjoiZW4tVVMiLCJjaGFubmVsUHJpdmFjeSI6InB1YmxpYyJ9\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "adbc2612-b416-40b5-9215-966a63383bed",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/api/sessions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/api/sessions - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/api/sessions - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Object containing session token and segment token.\",\"properties\":{\"sessionToken\":{\"type\":\"string\",\"description\":\"Token that identifies the user's individual session.\"},\"segmentToken\":{\"type\":\"string\",\"description\":\"Token that identifies the user's segment, shared with other users with similar navigation parameters.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/api/sessions - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "a3ad5a0f-d704-4438-ba06-74b09dd6d752",
      "name": "Segment",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1b7f3448-fad7-4599-a8c3-b13d750baad9",
          "name": "Get segment",
          "request": {
            "name": "Get segment",
            "description": {
              "content": "Retrieves information about the segment, which contains additional data related to the session's context.\n\r\n\rYou can add certain public fields as the query string and the system will attempt to fulfill it. Values such as `cultureInfo` and `utm` are overwriteable, just keep in mind such changes will not be reflected in the client's session.\n\r\n\rIf you wish to change the value on the session (and thus be reflected on the segment without special query strings), then use the [Edit session](https://developers.vtex.com/docs/api-reference/session-manager-api#patch-/api/sessions) endpoint.\r\n\r\n## Permissions\r\n\r\nThis endpoint does not require [authentication](https://developers.vtex.com/docs/guides/authentication) or [permissions](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "segments"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "description": {
                    "content": "Environment to use. Used as part of the URL. (This can only be one of vtexcommercestable)",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{environment}}",
                  "key": "environment"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "type": "any",
                  "value": "vtex_session",
                  "key": "key"
                },
                {
                  "type": "any",
                  "value": "{{apiKey}}",
                  "key": "value"
                },
                {
                  "type": "any",
                  "value": "header",
                  "key": "in"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1dd288fb-49e4-40e9-90ed-65d2d54c97f6",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "segments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "description": {
                        "content": "Environment to use. Used as part of the URL. (This can only be one of vtexcommercestable)",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{environment}}",
                      "key": "environment"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "vtex_session",
                    "value": "<API Key>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"campaigns\": null,\n  \"channel\": \"1\",\n  \"priceTables\": null,\n  \"regionId\": \"v2.1BB18CE648B5111D0933734ED83EC783\",\n  \"utm_campaign\": null,\n  \"utm_source\": null,\n  \"utmi_campaign\": null,\n  \"currencyCode\": \"BRL\",\n  \"currencySymbol\": \"R$\",\n  \"countryCode\": \"BRA\",\n  \"cultureInfo\": \"en-US\",\n  \"channelPrivacy\": \"public\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4a449f3-500a-4140-aea5-710632ed17f3",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/segments - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/segments - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/segments - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Object containing information about the segment.\",\"properties\":{\"campaigns\":{\"type\":[\"string\",\"null\"],\"description\":\"Campaigns associated with the session.\"},\"channel\":{\"type\":\"string\",\"description\":\"[Trade policy](https://help.vtex.com/en/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV) ID.\"},\"priceTables\":{\"type\":\"string\",\"description\":\"Price tables associated with the session.\"},\"regionId\":{\"type\":\"string\",\"description\":\"ID of the session's region.\"},\"utm_campaign\":{\"type\":\"string\",\"description\":\"UTM campaign code.\"},\"utm_source\":{\"type\":\"string\",\"description\":\"UTM source code.\"},\"utmi_campaign\":{\"type\":\"string\",\"description\":\"UTMI campaign code.\"},\"currencyCode\":{\"type\":\"string\",\"description\":\"Currency code.\"},\"currencySymbol\":{\"type\":\"string\",\"description\":\"Currency symbol.\"},\"countryCode\":{\"type\":\"string\",\"description\":\"Country code.\"},\"cultureInfo\":{\"type\":\"string\",\"description\":\"Locale that provides culture-specific information, such as the language, sublanguage, country/region, calendar, and conventions associated with a particular culture. Read [this documentation](https://learn.microsoft.com/en-us/dotnet/api/system.globalization.cultureinfo?view=net-7.0#culture-names-and-identifiers) for more details.\"},\"channelPrivacy\":{\"type\":\"string\",\"description\":\"Defines whether or not the channel is private.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/segments - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "description": {
        "content": "Name of the VTEX account. Used as part of the URL",
        "type": "text/plain"
      },
      "type": "any",
      "value": "apiexamples",
      "key": "accountName"
    },
    {
      "description": {
        "content": "Environment to use. Used as part of the URL. (This can only be one of vtexcommercestable)",
        "type": "text/plain"
      },
      "type": "any",
      "value": "vtexcommercestable",
      "key": "environment"
    },
    {
      "type": "string",
      "value": "https://{{accountName}}.{{environment}}.com.br",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "8c49105a-a95f-4b71-862c-7e9549ae023b",
    "name": "Session Manager API",
    "version": {},
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Session Manager tracks the current browsing sessions of all customers on the VTEX platform. Important session information is automatically captured and stored in a secure and easily accessible location. This includes data such as relevant cookies, query strings, authentication credentials, current profile and pricing information, if applicable. Session Manager API allows developers to retrieve and manage information about sessions. No authentication is required.\r\n\r\nFor more information, read the [Session Manager guide](https://developers.vtex.com/docs/guides/session-manager).\r\n\r\n## Index\r\n\r\n### Sessions\r\n\r\n- `POST` [Create new session](https://developers.vtex.com/docs/api-reference/session-manager-api#post-/api/sessions)\r\n- `GET` [Get session](https://developers.vtex.com/docs/api-reference/session-manager-api#get-/api/sessions)\r\n- `PATCH` [Edit session](https://developers.vtex.com/docs/api-reference/session-manager-api#patch-/api/sessions)\r\n\r\n### Segment\r\n\r\n- `GET` [Get segment](https://developers.vtex.com/docs/api-reference/session-manager-api#get-/api/segments)",
      "type": "text/plain"
    }
  }
}