{
  "_": {
    "postman_id": "5304c950-e919-4770-9a4b-75d2f6784f70"
  },
  "item": [
    {
      "id": "288864bf-03ec-4f8c-9204-58d20e1a822a",
      "name": "Get Suggestions",
      "description": {
        "content": "Search and filter all suggestions using specific criteria",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "8efffb62-535a-4d53-986d-02e60d7f6038",
          "name": "Get all SKU suggestions",
          "request": {
            "name": "Get all SKU suggestions",
            "description": {
              "content": "This endpoint retrieves a list of all SKUs sent by the seller for the Marketplace's approval. Marketplace operators should use this endpoint whenever they want to check the full list of received SKUs and their  information. \n\nNote that all the information sent by the seller will be in the [content] object. All remaining information in this endpoint's response is given by the Matcher. \n\nMatcher rates received SKUs by correlating the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been: \n\n`Approved`: score equal to or greater than 80 points. \n\n`Pending`: from 31 to 79 points.\n\n`Denied`: from 0 to 30 points. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "This field allows you to customize your search. You can fill in this query param if you want to narrow down your search using the available filters on Received SKU modules.",
                    "type": "text/plain"
                  },
                  "key": "q",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "This field allows users to filter SKU suggestions, by searching only the new suggestions that were just sent, and suggestions that have already been sent, but were updated. Possible values for this field include `new` and `update`.",
                    "type": "text/plain"
                  },
                  "key": "type",
                  "value": "new"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller so it can call this endpoint.",
                    "type": "text/plain"
                  },
                  "key": "seller",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Narrow down you search, filtering by status. Values allowed on this field include: `accepted`, `pending` and `denied.`",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "accepted"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "This field allows you to filter SKUs that have mapping or not. Insert `true` to filter SKUs that have mapping, or `false` to retrieve SKUs that aren't mapped.",
                    "type": "text/plain"
                  },
                  "key": "hasmapping",
                  "value": "true"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                    "type": "text/plain"
                  },
                  "key": "matcherid",
                  "value": "vtex-matcher"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Define your pagination range, by adding the pagination starting value. Values should be bigger than 0, with a maximum of 50 records per page.",
                    "type": "text/plain"
                  },
                  "key": "_from",
                  "value": "1"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Define your pagination range, by adding the pagination ending value. Values should be bigger than 0, with a maximum of 50 records per page.",
                    "type": "text/plain"
                  },
                  "key": "_to",
                  "value": "50"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "12e947ef-b47b-426c-b633-952c4ac9b7d7",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "q",
                      "value": ""
                    },
                    {
                      "key": "type",
                      "value": "new"
                    },
                    {
                      "key": "seller",
                      "value": ""
                    },
                    {
                      "key": "status",
                      "value": "accepted"
                    },
                    {
                      "key": "hasmapping",
                      "value": "true"
                    },
                    {
                      "key": "matcherid",
                      "value": "vtex-matcher"
                    },
                    {
                      "key": "_from",
                      "value": "1"
                    },
                    {
                      "key": "_to",
                      "value": "50"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f78a7515-23e9-4bae-b67a-b06dd4465884",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/suggestions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1e00a61c-b010-40d2-ae04-8e93f7240f57",
          "name": "Get SKU Suggestion by ID",
          "request": {
            "name": "Get SKU Suggestion by ID",
            "description": {
              "content": "This endpoint retrieves the data of a specific SKU sent by the seller, to the marketplace. Marketplaces or external matchers can call this endpoint when they want to check the information about a single SKU. \n\nNote that all the information sent by the seller will be in the [content] object. All remaining information in this endpoint's response is given by the Matcher. \n\nMatcher rates received SKUs by correlating the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been: \n\n`Approved`: score equal to or greater than 80 points. \n\n`Pending`: from 31 to 79 points.\n\n`Denied`: from 0 to 30 points. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions",
                ":sellerId",
                ":sellerSkuId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "seller123",
                  "key": "sellerId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1234",
                  "key": "sellerSkuId"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "3f11acf2-b116-4b7b-9737-c662d2015cf1",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions",
                    ":sellerId",
                    ":sellerSkuId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "seller123",
                      "key": "sellerId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1234",
                      "key": "sellerSkuId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0e621e56-a22d-469e-ae4f-3ed41d103c64",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/suggestions/:sellerId/:sellerSkuId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "0b192868-4eca-42f8-b013-4129e9b567aa",
      "name": "Manage Suggestions",
      "description": {
        "content": "Send or delete SKU suggestions from the seller to marketplace",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d7e7fb50-ce4f-470e-946b-9c961cfa1cb0",
          "name": "Send SKU Suggestion",
          "request": {
            "name": "Send SKU Suggestion",
            "description": {
              "content": "This request is used by the seller when it wants to suggest that one of their SKUs is sold in the marketplace.\n\nBefore using this request, the seller should always use the [Change Notification](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-seller-sku-notification) request in order to check if the SKU already exists in the marketplace. If it doesn't, then this is the next call in the SKU integration flow.\n\nIn the Send Suggestion request, the seller must send information about the SKU, such as the product and SKU name, the seller ID, and the image URL. All parameters are explained below. ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions",
                ":sellerId",
                ":sellerSkuId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account to which the seller wants to suggest a new SKU. It is used as part of the request URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "seller123",
                  "key": "sellerId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the SKU in the seller. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1234",
                  "key": "sellerSkuId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ProductId\": \"321\",\n  \"ProductName\": \"Product sample\",\n  \"NameComplete\": \"Complete product name\",\n  \"ProductDescription\": \"sample\",\n  \"BrandName\": \"Brand 1\",\n  \"SkuName\": \"Sku sample\",\n  \"SellerId\": \"string\",\n  \"Height\": 1,\n  \"Width\": 1,\n  \"Length\": 1,\n  \"Weight\": 1,\n  \"Updated\": null,\n  \"RefId\": \"REFID123\",\n  \"SellerStockKeepingUnitId\": 567,\n  \"CategoryFullPath\": \"Category 1\",\n  \"Images\": [\n    {\n      \"imageName\": \"Principal\",\n      \"imageUrl\": \"https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg\"\n    }\n  ],\n  \"ProductSpecifications\": [\n    {\n      \"fieldName\": \"Fabric\",\n      \"fieldValues\": [\n        \"Cotton\",\n        \"Velvet\"\n      ]\n    }\n  ],\n  \"SkuSpecifications\": [\n    {\n      \"fieldName\": \"Color\",\n      \"fieldValues\": [\n        \"Red\",\n        \"Blue\"\n      ]\n    }\n  ],\n  \"EAN\": \"EAN123\",\n  \"MeasurementUnit\": \"un\",\n  \"UnitMultiplier\": 1,\n  \"AvailableQuantity\": 111,\n  \"Pricing\": {\n    \"Currency\": \"BRL\",\n    \"SalePrice\": 399,\n    \"CurrencySymbol\": \"R$\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "a9286732-84c9-4e5d-ace3-07b797b5c34b",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions",
                    ":sellerId",
                    ":sellerSkuId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account to which the seller wants to suggest a new SKU. It is used as part of the request URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "seller123",
                      "key": "sellerId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A string that identifies the SKU in the seller. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1234",
                      "key": "sellerSkuId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.suggestion.v0+json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ProductId\": \"321\",\n  \"ProductName\": \"Product sample\",\n  \"NameComplete\": \"Complete product name\",\n  \"ProductDescription\": \"sample\",\n  \"BrandName\": \"Brand 1\",\n  \"SkuName\": \"Sku sample\",\n  \"SellerId\": \"string\",\n  \"Height\": 1,\n  \"Width\": 1,\n  \"Length\": 1,\n  \"Weight\": 1,\n  \"Updated\": null,\n  \"RefId\": \"REFID123\",\n  \"SellerStockKeepingUnitId\": 567,\n  \"CategoryFullPath\": \"Category 1\",\n  \"Images\": [\n    {\n      \"imageName\": \"Principal\",\n      \"imageUrl\": \"https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg\"\n    }\n  ],\n  \"ProductSpecifications\": [\n    {\n      \"fieldName\": \"Fabric\",\n      \"fieldValues\": [\n        \"Cotton\",\n        \"Velvet\"\n      ]\n    }\n  ],\n  \"SkuSpecifications\": [\n    {\n      \"fieldName\": \"Color\",\n      \"fieldValues\": [\n        \"Red\",\n        \"Blue\"\n      ]\n    }\n  ],\n  \"EAN\": \"EAN123\",\n  \"MeasurementUnit\": \"un\",\n  \"UnitMultiplier\": 1,\n  \"AvailableQuantity\": 111,\n  \"Pricing\": {\n    \"Currency\": \"BRL\",\n    \"SalePrice\": 399,\n    \"CurrencySymbol\": \"R$\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "09e25f2f-49f1-48b0-99e8-c9711d0765a0",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/suggestions/:sellerId/:sellerSkuId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fcd5c98f-4c88-47ae-b7d2-ea6af891b934",
          "name": "Delete SKU Suggestion",
          "request": {
            "name": "Delete SKU Suggestion",
            "description": {
              "content": "This endpoint deletes a chosen SKU suggestion. Only one SKU should be deleted per request. This request cannot be undone. A workaround to revert its action, is to send the suggestion again, through the Send Suggestion API.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions",
                ":sellerId",
                ":sellerSkuId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as part of the URL.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "seller123",
                  "key": "sellerId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1234",
                  "key": "sellerSkuId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "40bb39f2-8ee4-44ac-be61-e3e0e068fce9",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions",
                    ":sellerId",
                    ":sellerSkuId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account. Used as part of the URL.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "seller123",
                      "key": "sellerId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1234",
                      "key": "sellerSkuId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a849ed61-3685-464a-bcf8-8450c4213c39",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/suggestions/:sellerId/:sellerSkuId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "7914c569-0526-4175-a906-8a39c3767b1c",
      "name": "Get Versions",
      "description": {
        "content": "Search and filter all versions of suggestions, using specific criteria",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "96ee821e-57eb-44cf-b6a3-e3226a3979bf",
          "name": "Get all Versions",
          "request": {
            "name": "Get all Versions",
            "description": {
              "content": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. \n\nThis endpoint retrieves the data of *all* previous and latest versions of a specific SKU suggestion, sent by the seller. Whenever an SKU is updated, it is important to map previous versions, to compare and identify changes. \n\nThe response's object [latestversion] provides the information of the most recent version of that SKU suggestion.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions",
                ":sellerId",
                ":sellerskuid",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "seller123",
                  "key": "sellerId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1234",
                  "key": "sellerskuid"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "cfc7c843-fc32-4912-9168-d5316569bb36",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions",
                    ":sellerId",
                    ":sellerskuid",
                    "versions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "seller123",
                      "key": "sellerId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1234",
                      "key": "sellerskuid"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fcc72187-7d24-4743-ab35-3772234b8901",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/suggestions/:sellerId/:sellerskuid/versions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "679cbd88-bc7b-4308-a391-c5ad6f49b118",
          "name": "Get Version by ID",
          "request": {
            "name": "Get Version by ID",
            "description": {
              "content": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. \n\nThis endpoint retrieves a specific *version* of a chosen SKU sent by the seller. Add the Seller's ID, Seller's SKU ID, and version ID in the path to detail your search.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions",
                ":sellerId",
                ":sellerskuid",
                "versions",
                ":version"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "seller123",
                  "key": "sellerId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1234",
                  "key": "sellerskuid"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the `versionId` associated to the version you choose to search for. You can get this field's value through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). through the `latestVersionId` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "09072021142808277",
                  "key": "version"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "3f5a7937-2482-4397-8968-b27cc8b9f2c5",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions",
                    ":sellerId",
                    ":sellerskuid",
                    "versions",
                    ":version"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "seller123",
                      "key": "sellerId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1234",
                      "key": "sellerskuid"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the `versionId` associated to the version you choose to search for. You can get this field's value through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). through the `latestVersionId` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "09072021142808277",
                      "key": "version"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "da451999-3c98-4d9d-bb8d-695a19df5dc7",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/suggestions/:sellerId/:sellerskuid/versions/:version - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "34c2ce9f-667d-4d9e-a49c-7755bb8c672f",
      "name": "SKU Approval Settings",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "cdf70c99-f063-4794-b8fd-41319e44b5a9",
          "name": "Get autoApprove Status in Account Settings",
          "request": {
            "name": "Get autoApprove Status in Account Settings",
            "description": {
              "content": "This endpoint can be used to check whether the autoapprove setting is active or not, for a specific seller. \n\nIf the response is `true`, the autoapprove setting is active. If the response is `false`, it is inactive.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions",
                "configuration",
                "autoapproval",
                "toggle"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                    "type": "text/plain"
                  },
                  "key": "sellerId",
                  "value": "seller123"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ef09f90d-5c10-4e43-9342-4a75244f528f",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions",
                    "configuration",
                    "autoapproval",
                    "toggle"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "sellerId",
                      "value": "seller123"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Enabled\": false\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c9114246-695e-4176-a952-58a0f1500edd",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/suggestions/configuration/autoapproval/toggle - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/suggestions/configuration/autoapproval/toggle - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/suggestions/configuration/autoapproval/toggle - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"Enabled\":{\"type\":\"boolean\",\"description\":\"If the auto-approve setting is active for a given seller (`true`) or not (`false`).\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/suggestions/configuration/autoapproval/toggle - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9e4302e2-3f3f-4abf-81d3-1908549a8b5b",
          "name": "Activate autoApprove in Marketplace's Account",
          "request": {
            "name": "Activate autoApprove in Marketplace's Account",
            "description": {
              "content": "This endpoint enables the autoapprove rule to a marketplace's whole Received SKUs module. Once enabling the rule, received SKUs will be automatically approved on your store, regardless of the seller. \n\n For the autoapprove rule to work as expected, the approval [Matcher score](https://help.vtex.com/en/tutorial/entendendo-a-pontuacao-do-vtex-matcher--tutorials_424) should be set up as 80 (default value), but you can configure a different number through the field `Score` in [Save Account's Approval Settings](https://developers.vtex.com/vtex-rest-api/reference/saveaccountconfig).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions",
                "configuration",
                "autoapproval",
                "toggle"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"Enabled\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "04a0a935-a910-43cc-8c1d-28ecd3f28d58",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions",
                    "configuration",
                    "autoapproval",
                    "toggle"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"Enabled\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Enabled\": false\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e548547-6352-4582-9367-31f951a8eb81",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/suggestions/configuration/autoapproval/toggle - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/suggestions/configuration/autoapproval/toggle - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/suggestions/configuration/autoapproval/toggle - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"Enabled\":{\"type\":\"boolean\",\"description\":\"If the auto-approve setting is active (`true`) or not (`false`).\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/suggestions/configuration/autoapproval/toggle - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "372e4275-63c0-4be7-838e-5e7e9da015d3",
          "name": "Get Account's Approval Settings",
          "request": {
            "name": "Get Account's Approval Settings",
            "description": {
              "content": "This endpoint retrieves the current approval settings of a marketplace's Received SKUs module. Its response includes: \n\n- `Score`: Matcher scores for approving and rejecting SKUs received from sellers. \n\n- `Matchers`: All Matchers configured on the marketplace, and their respective details. \n\n- `SpecificationsMapping`: Mapping of product and SKU specifications, per seller. \n\n- `MatchFlux`: This field determines the type of approval configuration applied to SKUs received from a seller. \n\nThe possible values include: \n\n-`default`, where the Matcher reviews the SKU, and approves it based on its score. \n\n-`manual`, for manual approvals through the Received SKU UI, or Match API. \n\n-`autoApprove`, for every SKU received from a given seller to be approved automatically, regardless of their Matcher Score.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions",
                "configuration"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8896d4fa-f6da-4c9a-afec-0e18c1e3a483",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions",
                    "configuration"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Score\": {\n    \"Approve\": 80,\n    \"Reject\": 30\n  },\n  \"Matchers\": [\n    {\n      \"MatcherId\": \"vtex-matcher\",\n      \"hook-base-address\": \"http://portal.vtexinternal.com/api/ssm/hooks\",\n      \"IsActive\": true,\n      \"UpdatesNotificationEndpoint\": null,\n      \"Description\": null\n    }\n  ],\n  \"Rules\": {\n    \"Item\": [],\n    \"Product\": []\n  },\n  \"SpecificationsMapping\": [],\n  \"MatchFlux\": \"Default\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5ca33327-0677-407a-a21a-5973b950635e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/suggestions/configuration - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/suggestions/configuration - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/suggestions/configuration - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"Score\":{\"type\":\"object\",\"description\":\"Matcher scores for approving and rejecting SKUs received from sellers.\"},\"Matchers\":{\"type\":\"array\",\"description\":\"All Matchers configured on the marketplace, and their respective details.\"},\"Rules\":{\"type\":\"object\",\"description\":\"Items and products.\"},\"SpecificationsMapping\":{\"type\":\"array\",\"description\":\"Mapping of product and SKU specifications, per seller.\"},\"MatchFlux\":{\"type\":\"string\",\"description\":\"This field determines the type of approval configuration applied to SKUs received from a seller.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/suggestions/configuration - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e87a0cbd-b437-42f2-b91d-2678002eb7f9",
          "name": "Save Account's Approval Settings",
          "request": {
            "name": "Save Account's Approval Settings",
            "description": {
              "content": "Marketplaces use this endpoint to create or update approval settings on their Received SKUs module. \n\nThe request includes all the details necessary to implement the chosen approval settings.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions",
                "configuration"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"Score\": {\n    \"Approve\": 80,\n    \"Reject\": 30\n  },\n  \"Matchers\": [\n    {\n      \"MatcherId\": \"vtex-matcher\",\n      \"hook-base-address\": \"http://simple-suggestion-matcher.vtex.com.br\",\n      \"IsActive\": true,\n      \"UpdatesNotificationEndpoint\": null,\n      \"Description\": null\n    }\n  ],\n  \"SpecificationsMapping\": [],\n  \"MatchFlux\": \"AutoApprove\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4c7075a7-f36b-4c94-b64f-ccc1cb3ebd41",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions",
                    "configuration"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"Score\": {\n    \"Approve\": 80,\n    \"Reject\": 30\n  },\n  \"Matchers\": [\n    {\n      \"MatcherId\": \"vtex-matcher\",\n      \"hook-base-address\": \"http://simple-suggestion-matcher.vtex.com.br\",\n      \"IsActive\": true,\n      \"UpdatesNotificationEndpoint\": null,\n      \"Description\": null\n    },\n    {\n      \"MatcherId\": \"vtex-matcher\",\n      \"hook-base-address\": \"http://simple-suggestion-matcher.vtex.com.br\",\n      \"IsActive\": true,\n      \"UpdatesNotificationEndpoint\": null,\n      \"Description\": null\n    }\n  ],\n  \"SpecificationsMapping\": [\n    \"                    \\\"SellerId\\\": \\\"sellerID\\\",\\n                    \\\"Mapping\\\": {\\n                        \\\"Choose voltage\\\": \\\"Voltage\\\",\\n                        \\\"Choose size\\\": \\\"Size\\\",\\n                        \\\"Choose volume\\\": \\\"Volume\\\",\\n                        \\\"Choose type\\\": \\\"Type\\\"\\n                    }\",\n    \"                    \\\"SellerId\\\": \\\"sellerID\\\",\\n                    \\\"Mapping\\\": {\\n                        \\\"Choose voltage\\\": \\\"Voltage\\\",\\n                        \\\"Choose size\\\": \\\"Size\\\",\\n                        \\\"Choose volume\\\": \\\"Volume\\\",\\n                        \\\"Choose type\\\": \\\"Type\\\"\\n                    }\"\n  ],\n  \"MatchFlux\": \"autoApprove\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Score\": {\n    \"Approve\": 80,\n    \"Reject\": 30\n  },\n  \"Matchers\": {\n    \"MatcherId\": \"ex veniam exercitation voluptate nostrud\",\n    \"hook-base-address\": \"amet adipisici\",\n    \"IsActive\": false,\n    \"UpdatesNotificationEndpoint\": \"aliqua\",\n    \"Description\": \"aliquip officia sed fugiat\"\n  },\n  \"Rules\": {\n    \"Item\": [\n      -91301743,\n      -24223821\n    ],\n    \"Product\": [\n      \"in incididunt\",\n      \"in ad\"\n    ]\n  },\n  \"SpecificationsMapping\": {\n    \"SellerId\": \"minim dolore Lorem\",\n    \"Mapping\": {}\n  },\n  \"MatchFlux\": \"exercitation Ut sint\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "50694739-82f8-45dc-bc0d-ca18a5c06011",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/suggestions/configuration - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/suggestions/configuration - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/suggestions/configuration - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"example\":{\"Score\":{\"Approve\":80,\"Reject\":30},\"Matchers\":[{\"MatcherId\":\"vtex-matcher\",\"hook-base-address\":\"http://simple-suggestion-matcher.vtex.com.br\",\"IsActive\":true,\"UpdatesNotificationEndpoint\":\"notification.endpoint\",\"Description\":\"Note\"}],\"Rules\":{\"Item\":[1],\"Product\":[\"Shirt\"]},\"SpecificationsMapping\":[{\"SellerId\":\"Store1\",\"Mapping\":{\"Yellow\":\"Light yellow\"}}],\"MatchFlux\":\"AutoApprove\"},\"properties\":{\"Score\":{\"type\":\"object\",\"description\":\"[Matcher's rates](https://help.vtex.com/en/tutorial/understanding-vtex-matcher-scoring) to approve or reject [received SKUs](https://help.vtex.com/en/tutorial/cataloging-received-skus--tutorials_396) sent by sellers.\",\"properties\":{\"Approve\":{\"type\":\"integer\",\"description\":\"Score to approve SKUs sent by sellers.\"},\"Reject\":{\"type\":\"integer\",\"description\":\"Score to reject SKUs sent by sellers.\"}},\"example\":{\"Approve\":80,\"Reject\":30}},\"Matchers\":{\"type\":\"object\",\"description\":\"[Matchers](https://help.vtex.com/en/tutorial/understanding-vtex-matcher-scoring) configurations for approving and rejecting [received SKUs](https://help.vtex.com/en/tutorial/cataloging-received-skus--tutorials_396) sent by sellers.\",\"properties\":{\"MatcherId\":{\"type\":\"string\",\"description\":\"Identifies the matching entity. It can be either [VTEX's matcher](https://help.vtex.com/en/tutorial/understanding-vtex-matcher-scoring), or an external matcher.\"},\"hook-base-address\":{\"type\":\"string\",\"description\":\"The given Matcher's URL.\"},\"IsActive\":{\"type\":\"boolean\",\"description\":\"Whether the matcher is active in the account (`true`), or not (`false`).\"},\"UpdatesNotificationEndpoint\":{\"type\":\"string\",\"description\":\"The [received SKUs](https://help.vtex.com/en/tutorial/cataloging-received-skus--tutorials_396) module calls this endpoint for matcher's suggestions updates.\"},\"Description\":{\"type\":\"string\",\"description\":\"The note inserted on the request body.\"}}},\"Rules\":{\"type\":\"object\",\"description\":\"Items and products that belong to sellers.\",\"properties\":{\"Item\":{\"type\":\"array\",\"description\":\"SKUs' ID.\",\"items\":{\"type\":\"integer\",\"description\":\"SKU ID.\"}},\"Product\":{\"type\":\"array\",\"description\":\"Product's name.\",\"items\":{\"type\":\"string\",\"description\":\"Product name.\"}}}},\"SpecificationsMapping\":{\"type\":\"object\",\"description\":\"This attribute maps product and SKU's specifications between the marketplace and the seller.\",\"properties\":{\"SellerId\":{\"type\":\"string\",\"description\":\"The Seller ID.\"},\"Mapping\":{\"type\":\"object\",\"description\":\"The attributes and values mapped between the marketplace and the seller.\"}}},\"MatchFlux\":{\"type\":\"string\",\"description\":\"Type of approval configuration that apply to received SKUs sent by sellers. The possible values are: \\n\\n`default`: the matcher approves the SKU. \\n\\n`manual`: manual SKU's approvals. \\n\\n`AutoApprove`: automatic SKU's approvals.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/suggestions/configuration - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5b1a9924-d889-4421-9737-f112a3f2cb6d",
          "name": "Get Account's Matcher Settings",
          "request": {
            "name": "Get Account's Matcher Settings",
            "description": {
              "content": "This endpoint will be used by the marketplace to query the matcher's current approval settings on their incoming SKUs module. If the account has no matcher configured, the response will be `404 Not Found`. \n\nFor account approval configuration information, with response including specification information, see [Get Account Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis- suggestions#get-/suggestions /configuration) terminal. \n\nThe [VTEX matcher](https://help.vtex.com/pt/tutorial/entendendo-a-punctuacao-do-vtex-matcher--tutorials_424) is a tool used by marketplaces to evaluate SKUs corresponding to information from an advertisement of the seller, with those of items already present in the marketplace catalog.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions",
                "configuration",
                "account",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "87668c88-f233-4f8e-8038-0b4cfb0cfd73",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions",
                    "configuration",
                    "account",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"score\": {\n    \"approve\": 85,\n    \"pending\": 31,\n    \"reject\": 30\n  },\n  \"matchers\": [\n    {\n      \"matcherId\": \"example-matcher\",\n      \"hook-base-address\": \"http://portal.vtexinternal.com.br/api/u90/hooks\",\n      \"isActive\": true,\n      \"updatesNotificationEndpoint\": null,\n      \"description\": null\n    }\n  ],\n  \"rules\": {\n    \"item\": [],\n    \"product\": []\n  },\n  \"specificationsMapping\": [],\n  \"matchFlux\": \"Default\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8f2720a3-eb84-47cb-b175-68a5b9dc38c8",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/suggestions/configuration/account/config - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/suggestions/configuration/account/config - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/suggestions/configuration/account/config - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"GetAccountsMatcherSettings\",\"description\":\"Response from Get Account's Matcher Settings endpoint with information about current matcher score setting, rules, spec mapping, and matchFlux.\",\"type\":\"object\",\"properties\":{\"score\":{\"description\":\"[Matcher](https://help.vtex.com/pt/tutorial/entendendo-a-pontuacao-do-vtex-matcher--tutorials_424) rates received SKUs by comparing the data sent by sellers to existing fields in the marketplace. The calculation of these scores determines whether the product has been: `Approved`, `Pending` or `Denied`.\",\"type\":\"object\",\"properties\":{\"approve\":{\"type\":\"integer\",\"description\":\"Minimum approval score set by the marketplace.\",\"default\":\"80\"},\"pending\":{\"type\":\"integer\",\"description\":\"Minimum value for the ad to be pending.\",\"default\":\"31\"},\"reject\":{\"type\":\"integer\",\"description\":\"Bounce score set by marketplace.\",\"default\":\"30\"}}},\"matchers\":{\"description\":\"Array of objects that presents a list of matchers configured in the marketplace. If the marketplace has more than one matcher configured in the account, an array will be displayed for each matcher.\\n\\n By default, the VTEX Matcher is set up automatically in VTEX account.\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"matcherId\":{\"type\":\"string\",\"description\":\"The Matcher Id.\"},\"hook-base-address\":{\"type\":\"string\",\"description\":\"The base address of the Matcher hook.\"},\"isActive\":{\"type\":\"boolean\",\"description\":\"Indicates if Matcher is active or not. `TRUE` = Matcher is active or `FALSE` = Matcher is inactive.\",\"default\":true}}}},\"rules\":{\"description\":\"Arrays object that contains the rules defined for product approval.\",\"type\":\"object\",\"properties\":{\"item\":{\"type\":\"array\",\"description\":\"A list of rules for items.\"},\"product\":{\"type\":\"array\",\"description\":\"A list of rules for products.\"}}},\"specificationsMapping\":{\"type\":\"array\",\"description\":\"This field will show a list of which product specs and SKU are configured to be mapped.\"},\"matchFlux\":{\"type\":\"string\",\"description\":\"This field shows what type of approval setting is being applied to SKUs received from a seller. \\n\\nPossible values include: \\n\\n-`default`: where Matcher reviews the SKU and approves it based on its score. \\n\\n-`manual`: for manual approvals via incoming SKU UI or mailing API. \\n\\n-`autoApprove`: so that every SKU received from a given seller is automatically approved, regardless of its Matcher Score.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/suggestions/configuration/account/config - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "882adc12-f7cf-4980-9082-9ade127bab8e",
          "name": "Get Seller's Approval Settings",
          "request": {
            "name": "Get Seller's Approval Settings",
            "description": {
              "content": "This endpoint retrieves the current Received SKUs approval settings applied to a specific seller. Its response includes: \n\n- `sellerId`: A string that identifies the seller in the marketplace. \n\n- `accountId`: Marketplace’s account ID. \n\n- `accountName`: Marketplace’s account name. \n\n- `mapping`: Mapping of SKU and product Specifications. \n\n- `matchFlux`: This field determines the type of approval configuration applied to SKUs received  from a seller. \n\nThe possible values include:  \n\n-`default`, where the Matcher reviews the SKU, and approves it based on its score. \n\n-`manual`, for manual approvals through the Received SKU UI and Match API. \n\n-`autoApprove`, for every SKU received from a given seller to be approved automatically                                                   , regardless of the Matcher Score.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions",
                "configuration",
                "seller",
                ":sellerId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "seller123",
                  "key": "sellerId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3b82c098-6227-40db-9186-49e8cdc40c08",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions",
                    "configuration",
                    "seller",
                    ":sellerId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "seller123",
                      "key": "sellerId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"sellerId\": \"sellerexample\",\n  \"accountId\": \"d74dau71f-325a-4463-bd53-ae8b0453186ca\",\n  \"accountName\": \"marketplaceexample\",\n  \"mapping\": {\n    \"defaultColor\": \"white /black\",\n    \"searchColor\": \"color1, color2\",\n    \"color1\": \"black\",\n    \"color2\": \"white\",\n    \"color\": \"black\",\n    \"size\": \"EUR44\"\n  },\n  \"matchFlux\": \"default\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c12473d0-0f6b-4845-929d-326dd399188d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/suggestions/configuration/seller/:sellerId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/suggestions/configuration/seller/:sellerId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/suggestions/configuration/seller/:sellerId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"GetSellersApprovalSettings\",\"type\":\"object\",\"properties\":{\"sellerId\":{\"type\":\"string\",\"description\":\"A string that identifies the seller in the marketplace.\",\"example\":\"sellerexample\"},\"accountId\":{\"type\":\"string\",\"description\":\"Marketplace’s account ID.\",\"example\":\"d74daf1f-355a-4463-bdc7-ae8b045311c\"},\"accountName\":{\"type\":\"string\",\"description\":\"Marketplace’s account name.\",\"example\":\"marketplaceexample\"},\"mapping\":{\"type\":\"object\",\"default\":{},\"description\":\"SKU Mapping Information and Product [Specifications](https://developers.vtex.com/docs/guides/catalog-overview#configuring-initial-settings-mandatory).\\n\\n The properties included within `mapping` can change according to the product type, the `color` specification and its variations described in this example are just one of the possibilities. The values received in this call's payload for those properties depend on the seller's catalog architecture, and are not default. \\n\\nSee some examples of specifications: \\n\\n- Voltage \\n\\n- Power \\n\\n- Size \\n\\n- Height \\n\\n- Width\",\"properties\":{\"defaultColor\":{\"type\":\"string\",\"description\":\"The field will indicate the default color predefined by the seller in cases where specific product colors are not defined. This field is neither mandatory nor default, it will depend on the architecture of the seller's catalog. \",\"example\":\"white /black\"},\"searchColor\":{\"type\":\"string\",\"description\":\"Field that provides the available colors to filter searches. This field is neither mandatory nor default, it will depend on the architecture of the seller's catalog.\",\"example\":\"color1, color2\"},\"color1\":{\"type\":\"string\",\"description\":\"`color1` available for search filter. This field is neither mandatory nor default, it will depend on the architecture of the seller's catalog.\",\"example\":\"black\"},\"color2\":{\"type\":\"string\",\"description\":\"`color2` available for search filter. This field is neither mandatory nor default, it will depend on the architecture of the seller's catalog.\",\"example\":\"white\"},\"color\":{\"type\":\"string\",\"description\":\"Indicates the predominant or main color of the product. This field is neither mandatory nor default, it will depend on the architecture of the seller's catalog.\",\"example\":\"black\"},\"size\":{\"type\":\"string\",\"description\":\"Indicates the size of the product.This field is neither mandatory nor default, it will depend on the architecture of the seller's catalog.\",\"example\":\"EUR44\"}}},\"matchFlux\":{\"type\":\"string\",\"description\":\"This field determines the type of [approval configuration applied to SKUs received from a seller](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/seller/-sellerId-). \\n\\nThe possible values include:  \\n\\n-`default`, where the Matcher reviews the SKU, and approves it based on its score. \\n\\n-`manual`, for manual approvals through the Received SKU UI and Match API. \\n\\n-`autoApprove`, for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.\",\"example\":\"default\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/suggestions/configuration/seller/:sellerId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4815860e-1f1e-4e64-8f6a-68b63f967601",
          "name": "Save Seller's Approval Settings",
          "request": {
            "name": "Save Seller's Approval Settings",
            "description": {
              "content": "Marketplaces use this endpoint to create or update approval settings to a specific seller, on the Received SKUs module. \n\nThe request includes all the details necessary to implement the chosen approval settings.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions",
                "configuration",
                "seller",
                ":sellerId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "seller123",
                  "key": "sellerId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sellerId\": \"1a\",\n  \"mapping\": null,\n  \"matchFlux\": \"Default\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "20b3c5f2-15c8-4358-a003-3b84fa3e08ff",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions",
                    "configuration",
                    "seller",
                    ":sellerId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "seller123",
                      "key": "sellerId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"sellerId\": \"1a\",\n  \"mapping\": null,\n  \"matchFlux\": \"Default\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "eea44ea3-6fbd-47c9-8966-b894859632e0",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/suggestions/configuration/seller/:sellerId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4bfb69f8-68b3-4a81-8624-9df0757b565c",
          "name": "Activate autoApprove Setting for a Seller",
          "request": {
            "name": "Activate autoApprove Setting for a Seller",
            "description": {
              "content": "This endpoint enables the auto approve setting to received SKUs from a specific seller. Be aware that once enabling the rule through this request, all received SKUs from that seller will be automatically approved on your store, regardless of the Matcher Score.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions",
                "configuration",
                "autoapproval",
                "toggle",
                "seller",
                ":sellerId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "seller123",
                  "key": "sellerId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"Enabled\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "f0b6bcbc-859d-49f4-aa63-75656275e39e",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions",
                    "configuration",
                    "autoapproval",
                    "toggle",
                    "seller",
                    ":sellerId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "seller123",
                      "key": "sellerId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"Enabled\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2966f4fa-82af-468a-a4ec-7f412ea6df23",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/suggestions/configuration/autoapproval/toggle/seller/:sellerId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "042140a2-3729-451f-b849-dcb3c2afd722",
      "name": "Match Received SKUs",
      "description": {
        "content": "Match SKU suggestions received in the marketplace",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "175216f5-cd41-4757-ba6e-e60cb18f9dd7",
          "name": "Match Received SKUs individually",
          "request": {
            "name": "Match Received SKUs individually",
            "description": {
              "content": "All SKUs sent from a seller to a marketplace must be reviewed and matched. Actions in the matching process are added in the request body through the [matchType] object. Match type actions include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `itemMatch`: associate the received SKU to an existing SKU. \n\n3. `productMatch`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU. \n\n5. `pending`: the received SKU requires attention. \n\n6. `incomplete`: the received SKU is lacking information to be matched. \n\n7. `insufficientScore`: the score given by the Matcher to this received SKU doesn't qualify it to be matched. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions",
                ":sellerId",
                ":sellerskuid",
                "versions",
                ":version",
                "matches",
                ":matchid"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "seller123",
                  "key": "sellerId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1234",
                  "key": "sellerskuid"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the versionId associated to the version you choose to search for. You can get this field's value through the[Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). through the `latestVersionId` field.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "09072021142808277",
                  "key": "version"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Whenever an SKU suggestion is matched, it is associated to a unique ID. Fill in this field with the matchId you wish to filter by. The `matchId`'s value can be obtained through the *[Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "anim adipisicing sunt veniam",
                  "key": "matchid"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"matcherId\": \"{{matcherid}}\",\n  \"matchType\": \"itemMatch\",\n  \"score\": \"{{score}} (must be decimal)\",\n  \"skuRef\": \"{{skuid}}(should be specifed when match is a sku match)\",\n  \"productRef\": \"{{productRef}}(should be specified when match is a product match)\",\n  \"product\": {\n    \"name\": \"Book A\",\n    \"description\": \"Book description\",\n    \"categoryId\": 12,\n    \"brandId\": 1234567,\n    \"matchType\": \"itemMatch\",\n    \"specifications\": null\n  },\n  \"sku\": {\n    \"name\": \"Sku exemplo\",\n    \"eans\": [\n      \"12345678901213\"\n    ],\n    \"refId\": null,\n    \"height\": 1,\n    \"width\": 1,\n    \"length\": 1,\n    \"weight\": 1,\n    \"images\": [\n      {\n        \"imagem1.jpg\": {\n          \"imagem1.jpg\": \"https://imageurl.example\"\n        }\n      }\n    ],\n    \"unitMultiplier\": 1,\n    \"measurementUnit\": \"un\",\n    \"specifications\": {\n      \"Embalagem\": \"3 k   g\"\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "517f5622-2d0d-41b3-8a6a-ec5931d9d6c6",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions",
                    ":sellerId",
                    ":sellerskuid",
                    "versions",
                    ":version",
                    "matches",
                    ":matchid"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "seller123",
                      "key": "sellerId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "1234",
                      "key": "sellerskuid"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the versionId associated to the version you choose to search for. You can get this field's value through the[Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). through the `latestVersionId` field.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "09072021142808277",
                      "key": "version"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Whenever an SKU suggestion is matched, it is associated to a unique ID. Fill in this field with the matchId you wish to filter by. The `matchId`'s value can be obtained through the *[Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "anim adipisicing sunt veniam",
                      "key": "matchid"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"matcherId\": \"{{matcherid}}\",\n  \"matchType\": \"itemMatch\",\n  \"score\": \"{{score}} (must be decimal)\",\n  \"skuRef\": \"{{skuid}}(should be specifed when match is a sku match)\",\n  \"productRef\": \"{{productRef}}(should be specified when match is a product match)\",\n  \"product\": {\n    \"name\": \"Book A\",\n    \"description\": \"Book description\",\n    \"categoryId\": 12,\n    \"brandId\": 1234567,\n    \"matchType\": \"itemMatch\",\n    \"specifications\": null\n  },\n  \"sku\": {\n    \"name\": \"Sku exemplo\",\n    \"eans\": [\n      \"12345678901213\"\n    ],\n    \"refId\": null,\n    \"height\": 1,\n    \"width\": 1,\n    \"length\": 1,\n    \"weight\": 1,\n    \"images\": [\n      {\n        \"imagem1.jpg\": {\n          \"imagem1.jpg\": \"https://imageurl.example\"\n        }\n      }\n    ],\n    \"unitMultiplier\": 1,\n    \"measurementUnit\": \"un\",\n    \"specifications\": {\n      \"Embalagem\": \"3 k   g\"\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ffcb3635-2d55-492d-b8bc-30ee72047aed",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/suggestions/:sellerId/:sellerskuid/versions/:version/matches/:matchid - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "19b629a7-99a9-4bc5-bb3c-e1473d25cc0d",
          "name": "Match Multiple Received SKUs",
          "request": {
            "name": "Match Multiple Received SKUs",
            "description": {
              "content": "> ⚠ The Match Multiple Received SKUs API is under maintenance.\r\nDuring this period, you must use the [Match Received SKUs individually](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerskuid-/versions/-version-/matches/-matchid-) API to approve new products.\r\n\r\n This endpoint allows the user to bulk approve, deny, or associate received SKUs. In a single request, you can match up to 25 received SKUs from your sellers.\n\nThrough the `actionName` attribute you can select the operation you want to apply to the received SKU. \n\nActions include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `skuassociation`: associate the received SKU to an existing SKU. \n\n3. `productassociation`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "suggestions",
                "matches",
                "action",
                ":actionName"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the VTEX account. Used as part of the URL",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "{{accountName}}",
                  "key": "accountName"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) This field refers to the operation you choose to apply to received SKUs. Values include: newproduct, skuassociation, productassociation or deny.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "newprodcut",
                  "key": "actionName"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "314f0829-0e34-4562-a2ad-ed6bd63dba8d",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "suggestions",
                    "matches",
                    "action",
                    ":actionName"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Name of the VTEX account. Used as part of the URL",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "{{accountName}}",
                      "key": "accountName"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) This field refers to the operation you choose to apply to received SKUs. Values include: newproduct, skuassociation, productassociation or deny.",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "newprodcut",
                      "key": "actionName"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Describes the type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "732501ab-b762-4ec8-81c2-2e71eca680e3",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/suggestions/matches/action/:actionName - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "X-VTEX-API-AppKey",
        "key": "key"
      },
      {
        "type": "any",
        "value": "{{apiKey}}",
        "key": "value"
      },
      {
        "type": "any",
        "value": "header",
        "key": "in"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "description": {
        "content": "Name of the VTEX account. Used as part of the URL.",
        "type": "text/plain"
      },
      "type": "any",
      "value": "{accountName}",
      "key": "accountName"
    },
    {
      "type": "string",
      "value": "https://api.vtex.com/{{accountName}}",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "5304c950-e919-4770-9a4b-75d2f6784f70",
    "name": "Suggestions",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "\r\nThe **Marketplace API** enables marketplaces and sellers hosted on VTEX to perform their collaborative operations.  \r\n\r\n>⚠️ The marketplace must [create an appKey and appToken](https://developers.vtex.com/docs/guides/getting-started-authentication) for each non-VTEX seller that will use this API.\r\n\r\n## Index\r\n\r\n### Notification\r\n\r\nEndpoints used by sellers to notify marketplaces that the price or inventory language has changed for one of their SKUs.\r\n\r\n`POST` [Notify marketplace of price update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/price)\r\n\r\n`POST` [Notify marketplace of inventory update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/inventory)\r\n\r\n\r\n### Suggestions\r\n\r\n#### Get Suggestions\r\n\r\nSearch and filter all suggestions using specific criteria.\r\n\r\n`GET` [Get all SKU Suggestions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions)\r\n\r\n`GET` [Get SKU Suggestion by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerSkuId-)\r\n\r\n\r\n#### Manage Suggestions\r\n\r\nSend or delete SKU suggestions from the seller to marketplace.\r\n\r\n`PUT` [Send SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerSkuId-)\r\n\r\n`DELETE` [Delete SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#delete-/suggestions/-sellerId-/-sellerSkuId-)\r\n\r\n\r\n#### Get Versions\r\n\r\nSearch and filter all versions of suggestions, using specific criteria.\r\n\r\n`GET` [Get all versions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions)\r\n\r\n`GET` [Get version by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions/-version-)\r\n\r\n\r\n#### Match Received SKUs\r\n\r\nMatch SKU suggestions received in the marketplace.\r\n\r\n`PUT` [Match Received SKUs individually](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerskuid-/versions/-version-/matches/-matchid-)\r\n\r\n`PUT` [Match Multiple Received SKUs](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/matches/action/-actionName-)\r\n\r\n\r\n#### SKU Approval Settings\r\n\r\nAllows marketplaces to configure rules for automatically and manually approving SKUs received from sellers.\r\n\r\n`GET`[Get autoApprove Status in Account Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/autoapproval/toggle)  \r\n\r\n`PUT`[Activate autoApprove in Marketplace's Account](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle)  \r\n\r\n`GET`[Get Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration)\r\n\r\n`PUT`[Save Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration)\r\n\r\n`GET`[Get Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/seller/-sellerId-)\r\n\r\n`PUT`[Save Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/seller/-sellerId-)\r\n\r\n`PUT`[Activate autoApprove Setting for a Seller](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle/seller/-sellerId-)   \r\n\r\n\r\n### Matched Offers\r\n\r\nOffers are seller products and SKUs that were sent to the marketplace, and already have their price and inventory level configured.\r\n\r\n`GET`[Get Matched Offers List](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/offers)\r\n\r\n`GET`[Get Matched Offer's Data by SKU ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-/sku/-skuId-)  \r\n\r\n`GET`[Get Matched Offer's Data by Product ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-)\r\n",
      "type": "text/plain"
    }
  }
}