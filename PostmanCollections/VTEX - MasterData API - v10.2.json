{
  "_": {
    "postman_id": "2b832c77-819b-4d7a-86e4-7f0dcde9d8a6"
  },
  "item": [
    {
      "id": "74944ec6-441e-4202-baa0-53d646bbeb06",
      "name": "Data Entities",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "17163f2e-76cf-4cdf-a5f2-0663683876f3",
          "name": "List data entities",
          "request": {
            "name": "List data entities",
            "description": {
              "content": "Retrieves the list of existing data entities in the store. \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n| Dynamic Storage | Data entity | **List data entity** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9ab70bee-bc8d-471b-b4af-881c86d3ad07",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"acronym\": \"SP\",\n    \"name\": \"Sample\",\n    \"primaryKeyType\": \"GUID\",\n    \"allowGetAll\": false\n  },\n  {\n    \"acronym\": \"AD\",\n    \"name\": \"Endereço\",\n    \"primaryKeyType\": \"GUID\",\n    \"allowGetAll\": false\n  },\n  {\n    \"acronym\": \"CL\",\n    \"name\": \"Cliente\",\n    \"primaryKeyType\": \"GUID\",\n    \"allowGetAll\": false\n  }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6fe09959-14d1-4ca0-97ee-a506977d5a9f",
              "name": "Forbidden",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Message\": \"Unauthorized\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1078c77f-74ba-42eb-abfa-754766b158dd",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/dataentities - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/dataentities - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"title\":\"Listdataentity\",\"required\":[\"acronym\",\"name\",\"primaryKeyType\",\"allowGetAll\"],\"type\":\"object\",\"description\":\"Data entity information.\",\"properties\":{\"acronym\":{\"title\":\"acronym\",\"type\":\"string\",\"description\":\"Two-letter string that identifies the data entity.\"},\"name\":{\"title\":\"name\",\"type\":\"string\",\"description\":\"Data entity name.\"},\"primaryKeyType\":{\"title\":\"primaryKeyType\",\"type\":\"string\",\"description\":\"Primary key type.\"},\"allowGetAll\":{\"title\":\"allowGetAll\",\"type\":\"boolean\",\"description\":\"Defines if it will be allowed to retrieve all fields from documents from this data entity at once using the [Get document](https://developers.vtex.com/docs/api-reference/masterdata-api#get-/api/dataentities/-acronym-/documents/-id-) endpoint (`true`) or not (`false`).\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/dataentities - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f72e73a5-ec19-4033-8cd1-0de9c8fec453",
          "name": "Get data entity structure",
          "request": {
            "name": "Get data entity structure",
            "description": {
              "content": "Returns the data entity structure with its respective fields and data type. \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n| Dynamic Storage | Data entity | **View data entity details** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Data entity acronym.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "93d51c12-bfc7-4d94-86a3-5536b6d0d622",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"acronym\": \"SP\",\n  \"name\": \"Sample\",\n  \"primaryKeyType\": \"GUID\",\n  \"allowGetAll\": false,\n  \"fields\": [\n    {\n      \"name\": \"updatedIn\",\n      \"type\": \"Date and Time\",\n      \"displayName\": \"Atualizado em\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": true\n    },\n    {\n      \"name\": \"updatedBy\",\n      \"type\": \"User Login\",\n      \"displayName\": \"Atualizado por\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": true\n    },\n    {\n      \"name\": \"Auto_Increment\",\n      \"type\": \"Auto Increment\",\n      \"displayName\": \"Auto increment\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": false,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"Boolean\",\n      \"type\": \"Boolean\",\n      \"displayName\": \"Boolean\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"createdIn\",\n      \"type\": \"Date and Time\",\n      \"displayName\": \"Criado em\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": true\n    },\n    {\n      \"name\": \"createdBy\",\n      \"type\": \"User Login\",\n      \"displayName\": \"Criado por\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": true\n    },\n    {\n      \"name\": \"Currency\",\n      \"type\": \"Currency\",\n      \"displayName\": \"Currency\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"Date\",\n      \"type\": \"Date\",\n      \"displayName\": \"Date\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"Date_Time\",\n      \"type\": \"Date and Time\",\n      \"displayName\": \"Date and Time\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"Decimal\",\n      \"type\": \"Decimal\",\n      \"displayName\": \"Decimal\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"Email\",\n      \"type\": \"Email\",\n      \"displayName\": \"Email\",\n      \"isNullable\": true,\n      \"isSearchable\": true,\n      \"isFilter\": false,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"dataEntityId\",\n      \"type\": \"Varchar 10\",\n      \"displayName\": \"Entidade de dados\",\n      \"isNullable\": false,\n      \"isSearchable\": true,\n      \"isFilter\": false,\n      \"isInternal\": true\n    },\n    {\n      \"name\": \"File\",\n      \"type\": \"File\",\n      \"displayName\": \"File\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": false,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"auto_filter\",\n      \"type\": \"Text\",\n      \"displayName\": \"Filtro automático\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": false,\n      \"isInternal\": true\n    },\n    {\n      \"name\": \"accountId\",\n      \"type\": \"Varchar 50\",\n      \"displayName\": \"ID da loja\",\n      \"isNullable\": false,\n      \"isSearchable\": false,\n      \"isFilter\": false,\n      \"isInternal\": true\n    },\n    {\n      \"name\": \"id\",\n      \"type\": \"Varchar 100\",\n      \"displayName\": \"Id do documento\",\n      \"isNullable\": false,\n      \"isSearchable\": true,\n      \"isFilter\": false,\n      \"isInternal\": true\n    },\n    {\n      \"name\": \"Integer\",\n      \"type\": \"Integer\",\n      \"displayName\": \"Integer\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"Long\",\n      \"type\": \"Long\",\n      \"displayName\": \"Long\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"accountName\",\n      \"type\": \"Varchar 100\",\n      \"displayName\": \"Nome da loja\",\n      \"isNullable\": false,\n      \"isSearchable\": true,\n      \"isFilter\": false,\n      \"isInternal\": true\n    },\n    {\n      \"name\": \"Percent\",\n      \"type\": \"Percent\",\n      \"displayName\": \"Percent\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"Relationship\",\n      \"type\": \"Relationship\",\n      \"displayName\": \"Relationship\",\n      \"isNullable\": true,\n      \"isSearchable\": true,\n      \"isFilter\": false,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"Score2\",\n      \"type\": \"Score2\",\n      \"displayName\": \"Score2\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"followers\",\n      \"type\": \"Text\",\n      \"displayName\": \"Seguidores\",\n      \"isNullable\": true,\n      \"isSearchable\": true,\n      \"isFilter\": false,\n      \"isInternal\": true\n    },\n    {\n      \"name\": \"tags\",\n      \"type\": \"Text\",\n      \"displayName\": \"Tags\",\n      \"isNullable\": true,\n      \"isSearchable\": true,\n      \"isFilter\": false,\n      \"isInternal\": true\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"Text\",\n      \"displayName\": \"Text\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": false,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"Time\",\n      \"type\": \"Time\",\n      \"displayName\": \"Time\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": false,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"lastInteractionIn\",\n      \"type\": \"Date and Time\",\n      \"displayName\": \"Ultima interação em\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": true\n    },\n    {\n      \"name\": \"lastInteractionBy\",\n      \"type\": \"User Login\",\n      \"displayName\": \"Ultima interação por\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": true\n    },\n    {\n      \"name\": \"URL\",\n      \"type\": \"URL\",\n      \"displayName\": \"URL\",\n      \"isNullable\": true,\n      \"isSearchable\": false,\n      \"isFilter\": true,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"User_Login\",\n      \"type\": \"User Login\",\n      \"displayName\": \"User Login\",\n      \"isNullable\": true,\n      \"isSearchable\": true,\n      \"isFilter\": false,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"Varchar10\",\n      \"type\": \"Varchar 10\",\n      \"displayName\": \"Varchar 10\",\n      \"isNullable\": true,\n      \"isSearchable\": true,\n      \"isFilter\": false,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"Varchar100\",\n      \"type\": \"Varchar 100\",\n      \"displayName\": \"Varchar 100\",\n      \"isNullable\": true,\n      \"isSearchable\": true,\n      \"isFilter\": false,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"Varchar50\",\n      \"type\": \"Varchar 50\",\n      \"displayName\": \"Varchar 50\",\n      \"isNullable\": true,\n      \"isSearchable\": true,\n      \"isFilter\": false,\n      \"isInternal\": false\n    },\n    {\n      \"name\": \"Varchar750\",\n      \"type\": \"Varchar 750\",\n      \"displayName\": \"Varchar 750\",\n      \"isNullable\": true,\n      \"isSearchable\": true,\n      \"isFilter\": false,\n      \"isInternal\": false\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "29005dd8-a915-42f6-b759-3662782ae1d3",
              "name": "Forbidden",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Message\": \"Unauthorized\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f500785f-7103-44cf-928a-a9eac5283866",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:acronym - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/dataentities/:acronym - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/dataentities/:acronym - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"Data entity structure\",\"required\":[\"acronym\",\"name\",\"primaryKeyType\",\"allowGetAll\",\"fields\"],\"type\":\"object\",\"description\":\"Data entity structure.\",\"properties\":{\"acronym\":{\"title\":\"acronym\",\"type\":\"string\",\"description\":\"Two-letter string that identifies the data entity.\"},\"name\":{\"title\":\"name\",\"type\":\"string\",\"description\":\"Data entity name.\"},\"primaryKeyType\":{\"title\":\"primaryKeyType\",\"type\":\"string\",\"description\":\"Primary key type.\"},\"allowGetAll\":{\"title\":\"allowGetAll\",\"type\":\"boolean\",\"description\":\"Defines if it will be allowed to retrieve all fields from documents from this data entity at once using the [Get document](https://developers.vtex.com/docs/api-reference/masterdata-api#get-/api/dataentities/-acronym-/documents/-id-) endpoint (`true`) or not (`false`).\"},\"fields\":{\"title\":\"fields\",\"type\":\"array\",\"description\":\"List of fields that documents from the given data entity have.\",\"items\":{\"title\":\"Field\",\"description\":\"Field information.\",\"required\":[\"name\",\"type\",\"displayName\",\"isNullable\",\"isSearchable\",\"isFilter\",\"isInternal\"],\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"Field name.\"},\"type\":{\"type\":\"string\",\"description\":\"Field type.\"},\"displayName\":{\"type\":\"string\",\"description\":\"Field display name.\"},\"isNullable\":{\"type\":\"boolean\",\"description\":\"Defines whether the field is nullable (`true`) or not (`false`).\"},\"isSearchable\":{\"type\":\"boolean\",\"description\":\"Defines whether the field is searchable (`true`) or not (`false`).\"},\"isFilter\":{\"type\":\"boolean\",\"description\":\"Defines whether the field is a filter (`true`) or not (`false`).\"},\"isInternal\":{\"type\":\"boolean\",\"description\":\"Defines whether the field is for internal use only (`true`) or not (`false`).\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/dataentities/:acronym - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "bedd00be-658b-40b4-b3be-02b1068d93ab",
      "name": "Documents",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5267634b-165e-4be2-8717-b65030417973",
          "name": "Create new document",
          "request": {
            "name": "Create new document",
            "description": {
              "content": "Creates a new document with an ID automatically generated by VTEX, corresponding to a given data entity. The request body is a JSON object where the key is the name of the field.\r\n\r\n>ℹ️ You can use this request to create documents in any given data entity. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for each document you wish to update.\r\n\r\n## Custom field types\r\n\r\nThe table below presents the types of custom fields you can use when creating or updating documents in Master Data v1 and example values.\r\n\r\n| Field Type| Example value |\r\n| - | - |\r\n| Boolean | `true` |\r\n| Currency | `2.5` |\r\n| Date | `1992-11-17` |\r\n| Date_Time | `2016-09-14T19:21:01.3163733Z` |\r\n| Decimal | `2.5` |\r\n| Email | `meu@email.com` |\r\n| Integer | `1000000` |\r\n| Long | `1000000000` |\r\n| Percent | `85.42` |\r\n| Time | `23:50` |\r\n| URL | `https://www.vtex.com` |\r\n| Varchar10 | `Lorem ipsu` |\r\n| Varchar50 | `Lorem ipsum dolor sit amet, consectetur adipiscing` |\r\n| Varchar750  | `Lorem ipsum dolor sit amet, consectetur adipiscing elit...` |\r\n| Varchar100  | `Lorem ipsum dolor sit amet, consectetur adipiscing elit...` |\r\n| Relationship | `5eb31afb-7ab0-11e6-94b4-0a44686e393f` |\r\n| Text | `Lorem ipsum dolor sit amet, consectetur adipiscing elit...` |\r\n \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "documents"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"Boolean\": true,\n  \"Currency\": 2.5,\n  \"Date\": \"1992-11-17\",\n  \"Date_Time\": \"2016-09-14T19:21:01.3163733Z\",\n  \"Decimal\": 2.5,\n  \"Email\": \"meu@email.com\",\n  \"Integer\": 1000000,\n  \"Long\": 1000000000,\n  \"Percent\": 85.42,\n  \"Time\": \"23:50\",\n  \"URL\": \"http://www.vtex.com\",\n  \"Varchar10\": \"Lorem ipsu\",\n  \"Varchar50\": \"Lorem ipsum dolor sit amet, consectetur adipiscing\",\n  \"Varchar750\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit...\",\n  \"Varchar100\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit...\",\n  \"Relationship\": \"5eb31afb-7ab0-11e6-94b4-0a44686e393f\",\n  \"Text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit...\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "72c06aa9-8a5f-46c3-b4be-82dab800054b",
              "name": "Created",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"Boolean\": true,\n  \"Currency\": 2.5,\n  \"Date\": \"1992-11-17\",\n  \"Date_Time\": \"2016-09-14T19:21:01.3163733Z\",\n  \"Decimal\": 2.5,\n  \"Email\": \"meu@email.com\",\n  \"Integer\": 1000000,\n  \"Long\": 1000000000,\n  \"Percent\": 85.42,\n  \"Time\": \"23:50\",\n  \"URL\": \"http://www.vtex.com\",\n  \"Varchar10\": \"Lorem ipsu\",\n  \"Varchar50\": \"Lorem ipsum dolor sit amet, consectetur adipiscing\",\n  \"Varchar750\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit...\",\n  \"Varchar100\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit...\",\n  \"Relationship\": \"5eb31afb-7ab0-11e6-94b4-0a44686e393f\",\n  \"Text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit...\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"CL-be30ed0b-78ec-11ee-83ab-0eca8d1868e1\",\n  \"Href\": \"http://apiexamples.vtexcommercestable.com.br/api/dataentities/CL/documents/be30ed0b-78ec-11ee-83ab-0eca8d1868e1\",\n  \"DocumentId\": \"be30ed0b-78ec-11ee-83ab-0eca8d1868e1\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "68542302-7a7e-4e43-8adb-5bf07442df74",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/dataentities/:acronym/documents - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/dataentities/:acronym/documents - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/dataentities/:acronym/documents - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Document information.\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created, with data entity prefix.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"},\"DocumentId\":{\"type\":\"string\",\"description\":\"Unique identifier of the document.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/dataentities/:acronym/documents - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e68aad93-d678-493e-9d91-0153a1aa311d",
          "name": "Create partial document",
          "request": {
            "name": "Create partial document",
            "description": {
              "content": "Creates a partial document, sending only some of the fields.\r\n\r\n> You can use this request to create documents in any given data entity. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for each document you wish to update. \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "documents"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"4e4c55ac-e491-11e6-94f4-0ac138d2d42e\",\n  \"addressName\": \"4726026151251\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a38426d8-8fad-407d-b92d-60c0c38621ae",
              "name": "Created",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"4e4c55ac-e491-11e6-94f4-0ac138d2d42e\",\n  \"addressName\": \"4726026151251\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"CL-be30ed0b-78ec-11ee-83ab-0eca8d1868e1\",\n  \"Href\": \"http://apiexamples.vtexcommercestable.com.br/api/dataentities/CL/documents/be30ed0b-78ec-11ee-83ab-0eca8d1868e1\",\n  \"DocumentId\": \"be30ed0b-78ec-11ee-83ab-0eca8d1868e1\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "39d1adae-2503-4695-8192-99230ee46e78",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/api/dataentities/:acronym/documents - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/api/dataentities/:acronym/documents - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/api/dataentities/:acronym/documents - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Document information.\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created, with data entity prefix.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"},\"DocumentId\":{\"type\":\"string\",\"description\":\"Unique identifier of the document.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/api/dataentities/:acronym/documents - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3f560bf7-a494-4156-81f8-42332d24c6b2",
          "name": "Get document",
          "request": {
            "name": "Get document",
            "description": {
              "content": "Retrieves a document.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Read only documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "description": {
                    "content": "Names of the fields that will be returned per document, separated by a comma `,`. It is possible to fetch all fields using `_all` as the value of this query parameter. However, in order to avoid permission errors, we strongly recommend informing only the names of the exact fields that will be used.",
                    "type": "text/plain"
                  },
                  "key": "_fields",
                  "value": "email,firstName,document"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1cf2f93c-459e-4170-bf75-38c820a94542",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Names of the fields that will be returned per document, separated by a comma `,`. It is possible to fetch all fields using `_all` as the value of this query parameter. However, in order to avoid permission errors, we strongly recommend informing only the names of the exact fields that will be used.",
                        "type": "text/plain"
                      },
                      "key": "_fields",
                      "value": "email,firstName,document"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"2f5dde81-1613-11ea-82ee-12f868feb457\",\n  \"accountId\": \"a8b27fb4-6516-4cc0-82b6-a5f2b011e6e2\",\n  \"accountName\": \"apiexamples\",\n  \"dataEntityId\": \"AS\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7f8aedfa-9682-4ef6-81ac-45ce33fd5235",
              "name": "Forbidden",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Names of the fields that will be returned per document, separated by a comma `,`. It is possible to fetch all fields using `_all` as the value of this query parameter. However, in order to avoid permission errors, we strongly recommend informing only the names of the exact fields that will be used.",
                        "type": "text/plain"
                      },
                      "key": "_fields",
                      "value": "email,firstName,document"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Message\": \"Cannot read private fields\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "643e4043-6089-479d-bc29-6555766e7f3b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:acronym/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/dataentities/:acronym/documents/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/dataentities/:acronym/documents/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"Document\",\"required\":[\"id\",\"dataEntityId\",\"accountId\",\"accountName\"],\"type\":\"object\",\"description\":\"Object representing each document.\",\"properties\":{\"{customProperty}\":{\"type\":\"string\",\"description\":\"Custom property.\"},\"id\":{\"type\":\"string\",\"description\":\"Unique identifier of the document.\"},\"accountId\":{\"type\":\"string\",\"description\":\"Unique identifier of the account.\"},\"accountName\":{\"type\":\"string\",\"description\":\"Account name.\"},\"dataEntityId\":{\"type\":\"string\",\"description\":\"Two-letter string that identifies the data entity.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/dataentities/:acronym/documents/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3a67e6d6-be04-414e-a4ab-810ba6083aed",
          "name": "Create document with custom ID or update entire document",
          "request": {
            "name": "Create document with custom ID or update entire document",
            "description": {
              "content": "Creates a new document with a custom ID, or updates an entire document if there is already a document with the informed ID.\r\n\r\n>ℹ️ You can use this request to create or update documents in any given data entity. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for each document you wish to update.\r\n\r\n## Custom field types\r\n\r\nThe table below presents the types of custom fields you can use when creating or updating documents in Master Data v1 and example values.\r\n\r\n| Field Type| Example value |\r\n| - | - |\r\n| Boolean | `true` |\r\n| Currency | `2.5` |\r\n| Date | `1992-11-17` |\r\n| Date_Time | `2016-09-14T19:21:01.3163733Z` |\r\n| Decimal | `2.5` |\r\n| Email | `meu@email.com` |\r\n| Integer | `1000000` |\r\n| Long | `1000000000` |\r\n| Percent | `85.42` |\r\n| Time | `23:50` |\r\n| URL | `https://www.vtex.com` |\r\n| Varchar10 | `Lorem ipsu` |\r\n| Varchar50 | `Lorem ipsum dolor sit amet, consectetur adipiscing` |\r\n| Varchar750  | `Lorem ipsum dolor sit amet, consectetur adipiscing elit...` |\r\n| Varchar100  | `Lorem ipsum dolor sit amet, consectetur adipiscing elit...` |\r\n| Relationship | `5eb31afb-7ab0-11e6-94b4-0a44686e393f` |\r\n| Text | `Lorem ipsum dolor sit amet, consectetur adipiscing elit...` |\r\n \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"Boolean\": true,\n  \"Currency\": 2.5,\n  \"Date\": \"1992-11-17\",\n  \"Date_Time\": \"2016-09-14T19:21:01.3163733Z\",\n  \"Decimal\": 2.5,\n  \"Email\": \"meu@email.com\",\n  \"Integer\": 1000000,\n  \"Long\": 1000000000,\n  \"Percent\": 85.42,\n  \"Time\": \"23:50\",\n  \"URL\": \"http://www.vtex.com\",\n  \"Varchar10\": \"Lorem ipsu\",\n  \"Varchar50\": \"Lorem ipsum dolor sit amet, consectetur adipiscing\",\n  \"Varchar750\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit...\",\n  \"Varchar100\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit...\",\n  \"Relationship\": \"5eb31afb-7ab0-11e6-94b4-0a44686e393f\",\n  \"Text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit...\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5188042a-83d4-419f-a825-f6355c1bf878",
              "name": "No Content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"Boolean\": true,\n  \"Currency\": 2.5,\n  \"Date\": \"1992-11-17\",\n  \"Date_Time\": \"2016-09-14T19:21:01.3163733Z\",\n  \"Decimal\": 2.5,\n  \"Email\": \"meu@email.com\",\n  \"Integer\": 1000000,\n  \"Long\": 1000000000,\n  \"Percent\": 85.42,\n  \"Time\": \"23:50\",\n  \"URL\": \"http://www.vtex.com\",\n  \"Varchar10\": \"Lorem ipsu\",\n  \"Varchar50\": \"Lorem ipsum dolor sit amet, consectetur adipiscing\",\n  \"Varchar750\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit...\",\n  \"Varchar100\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit...\",\n  \"Relationship\": \"5eb31afb-7ab0-11e6-94b4-0a44686e393f\",\n  \"Text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit...\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "No Content",
              "code": 204,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1c46b17e-1aa0-4a42-8c6d-9388214bf67c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/dataentities/:acronym/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[PUT]::/api/dataentities/:acronym/documents/:id - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4fe9ae86-f51a-45c4-b3c6-2690034f7f67",
          "name": "Update partial document",
          "request": {
            "name": "Update partial document",
            "description": {
              "content": "Updates a subset of fields of a document, without impacting the other fields.\r\n\r\n>ℹ️ You can use this request to update documents in any given data entity. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for each document you wish to update. \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"addressName\": \"4726026151253\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b5e9a1ff-87ee-492e-827d-b13bcbeee550",
              "name": "No Content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"addressName\": \"4726026151253\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "No Content",
              "code": 204,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aefe13bf-0d32-4402-8e3f-7a72cfac7119",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/api/dataentities/:acronym/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[PATCH]::/api/dataentities/:acronym/documents/:id - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9d8c4e10-c431-4549-a748-1a51a2c47a7e",
          "name": "Delete document",
          "request": {
            "name": "Delete document",
            "description": {
              "content": "Deletes a document. \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              }
            ],
            "method": "DELETE",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "f802affb-9440-43b3-aed5-b3830aaabe02",
              "name": "No Content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "No Content",
              "code": 204,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5b0be576-a12f-432f-9d36-714159b261c6",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/dataentities/:acronym/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[DELETE]::/api/dataentities/:acronym/documents/:id - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "ff51a888-e783-4337-860d-718f3c690d2e",
      "name": "Customer profiles",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d03b896f-7a58-4b66-99e1-22955907c3c4",
          "name": "Create new customer profile",
          "request": {
            "name": "Create new customer profile",
            "description": {
              "content": "Creates new customer profile.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                "CL",
                "documents"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "description": {
                    "content": "Name of the [schema](https://developers.vtex.com/docs/guides/master-data-schema-lifecycle) that the document complies with.  This field is required when using `_where` or `_fields` query parameters.",
                    "type": "text/plain"
                  },
                  "key": "_schema",
                  "value": "schema"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"clark.kent@examplemail.com\",\n  \"firstName\": \"Clark\",\n  \"lastName\": \"Kent\",\n  \"phone\": \"+12025550195\",\n  \"documentType\": \"CPF\",\n  \"document\": \"12345678900\",\n  \"isCorporate\": false,\n  \"isNewsletterOptIn\": false,\n  \"localeDefault\": \"en-US\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0814d9cb-25cf-45d6-9458-41760a689714",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    "CL",
                    "documents"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Name of the [schema](https://developers.vtex.com/docs/guides/master-data-schema-lifecycle) that the document complies with.  This field is required when using `_where` or `_fields` query parameters.",
                        "type": "text/plain"
                      },
                      "key": "_schema",
                      "value": "schema"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"clark.kent@examplemail.com\",\n  \"firstName\": \"Clark\",\n  \"lastName\": \"Kent\",\n  \"phone\": \"+12025550195\",\n  \"documentType\": \"CPF\",\n  \"document\": \"12345678900\",\n  \"isCorporate\": false,\n  \"isNewsletterOptIn\": false,\n  \"localeDefault\": \"en-US\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"CL-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://api.vtex.com/my-store-name/dataentities/CL/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4cab2f25-445e-44f3-b69d-dd22e5428fa1",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/dataentities/CL/documents - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/dataentities/CL/documents - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/dataentities/CL/documents - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"description\":\"Response body object.\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created or updated.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/dataentities/CL/documents - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3d80ab70-541e-4994-adb7-eebcb7d278a3",
          "name": "Update customer profile",
          "request": {
            "name": "Update customer profile",
            "description": {
              "content": "Partially updates a customer profile.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                "CL",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "description": {
                    "content": "Name of the [schema](https://developers.vtex.com/docs/guides/master-data-schema-lifecycle) that the document complies with.  This field is required when using `_where` or `_fields` query parameters.",
                    "type": "text/plain"
                  },
                  "key": "_schema",
                  "value": "schema"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"clark.kent@examplemail.com\",\n  \"firstName\": \"Clark\",\n  \"lastName\": \"Kent\",\n  \"phone\": \"+12025550195\",\n  \"documentType\": \"CPF\",\n  \"document\": \"12345678900\",\n  \"isCorporate\": false,\n  \"isNewsletterOptIn\": false,\n  \"localeDefault\": \"en-US\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "00e12f71-e69a-47f2-8e26-0e4bde8bc5bd",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    "CL",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Name of the [schema](https://developers.vtex.com/docs/guides/master-data-schema-lifecycle) that the document complies with.  This field is required when using `_where` or `_fields` query parameters.",
                        "type": "text/plain"
                      },
                      "key": "_schema",
                      "value": "schema"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"clark.kent@examplemail.com\",\n  \"firstName\": \"Clark\",\n  \"lastName\": \"Kent\",\n  \"phone\": \"+12025550195\",\n  \"documentType\": \"CPF\",\n  \"document\": \"12345678900\",\n  \"isCorporate\": false,\n  \"isNewsletterOptIn\": false,\n  \"localeDefault\": \"en-US\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"CL-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://api.vtex.com/my-store-name/dataentities/CL/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d3e209b5-fcfb-40fc-a8fd-def36a0c74c4",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/api/dataentities/CL/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/api/dataentities/CL/documents/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/api/dataentities/CL/documents/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"description\":\"Response body object.\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created or updated.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/api/dataentities/CL/documents/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "43b46f26-c67f-411b-b206-eab6643c3736",
          "name": "Delete customer profile",
          "request": {
            "name": "Delete customer profile",
            "description": {
              "content": "Deletes a customer profile. \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                "CL",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              }
            ],
            "method": "DELETE",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4dbd48a4-679e-4af0-91c4-71bf659416dc",
              "name": "No Content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    "CL",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "No Content",
              "code": 204,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6c587359-a969-448d-ac1b-d542e9bb344d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/dataentities/CL/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[DELETE]::/api/dataentities/CL/documents/:id - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "b040c63c-bf3b-434f-867b-0162b62a8d89",
      "name": "Addresses",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6d3c2a46-01d3-46eb-be8f-9ec31c3e9b8b",
          "name": "Create new customer address",
          "request": {
            "name": "Create new customer address",
            "description": {
              "content": "Creates new customer address. \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                "AD",
                "documents"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "description": {
                    "content": "Name of the [schema](https://developers.vtex.com/docs/guides/master-data-schema-lifecycle) that the document complies with.  This field is required when using `_where` or `_fields` query parameters.",
                    "type": "text/plain"
                  },
                  "key": "_schema",
                  "value": "schema"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"addressName\": \"My house\",\n  \"addressType\": \"residential\",\n  \"receiverName\": \"Clark Kent.\",\n  \"city\": \"Rio de Janeiro\",\n  \"state\": \"Rio de Janeiro\",\n  \"country\": \"BRA\",\n  \"postalCode\": \"12345-000\",\n  \"street\": \"Praia de Botafogo\",\n  \"number\": \"300\",\n  \"neighborhood\": \"Botafogo\",\n  \"complement\": \"3rd floor\",\n  \"reference\": \"Grey building\",\n  \"userId\": \"7e03m794-a33a-11e9-84rt6-0adfa64s5a8e\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1483d933-b386-4e7b-88b4-3a5298e9fe54",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    "AD",
                    "documents"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Name of the [schema](https://developers.vtex.com/docs/guides/master-data-schema-lifecycle) that the document complies with.  This field is required when using `_where` or `_fields` query parameters.",
                        "type": "text/plain"
                      },
                      "key": "_schema",
                      "value": "schema"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"addressName\": \"My house\",\n  \"addressType\": \"residential\",\n  \"receiverName\": \"Clark Kent.\",\n  \"city\": \"Rio de Janeiro\",\n  \"state\": \"Rio de Janeiro\",\n  \"country\": \"BRA\",\n  \"postalCode\": \"12345-000\",\n  \"street\": \"Praia de Botafogo\",\n  \"number\": \"300\",\n  \"neighborhood\": \"Botafogo\",\n  \"complement\": \"3rd floor\",\n  \"reference\": \"Grey building\",\n  \"userId\": \"7e03m794-a33a-11e9-84rt6-0adfa64s5a8e\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"AD-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://api.vtex.com/my-store-name/dataentities/AD/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e1d2cb7c-903f-4519-a8ff-d9755d59fcf3",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/dataentities/AD/documents - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/dataentities/AD/documents - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/dataentities/AD/documents - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"description\":\"Response body object.\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created or updated.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/dataentities/AD/documents - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "77a65891-dd7c-4249-8ead-329d527bb8bc",
          "name": "Update customer address",
          "request": {
            "name": "Update customer address",
            "description": {
              "content": "Partially updates a customer address.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                "AD",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "description": {
                    "content": "Name of the [schema](https://developers.vtex.com/docs/guides/master-data-schema-lifecycle) that the document complies with.  This field is required when using `_where` or `_fields` query parameters.",
                    "type": "text/plain"
                  },
                  "key": "_schema",
                  "value": "schema"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"addressName\": \"My house\",\n  \"addressType\": \"residential\",\n  \"receiverName\": \"Clark Kent.\",\n  \"city\": \"Rio de Janeiro\",\n  \"state\": \"Rio de Janeiro\",\n  \"country\": \"BRA\",\n  \"postalCode\": \"12345-000\",\n  \"street\": \"Praia de Botafogo\",\n  \"number\": \"300\",\n  \"neighborhood\": \"Botafogo\",\n  \"complement\": \"3rd floor\",\n  \"reference\": \"Grey building\",\n  \"userId\": \"7e03m794-a33a-11e9-84rt6-0adfa64s5a8e\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c53afe35-1576-44bd-bb83-a12ecb121925",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    "AD",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Name of the [schema](https://developers.vtex.com/docs/guides/master-data-schema-lifecycle) that the document complies with.  This field is required when using `_where` or `_fields` query parameters.",
                        "type": "text/plain"
                      },
                      "key": "_schema",
                      "value": "schema"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"addressName\": \"My house\",\n  \"addressType\": \"residential\",\n  \"receiverName\": \"Clark Kent.\",\n  \"city\": \"Rio de Janeiro\",\n  \"state\": \"Rio de Janeiro\",\n  \"country\": \"BRA\",\n  \"postalCode\": \"12345-000\",\n  \"street\": \"Praia de Botafogo\",\n  \"number\": \"300\",\n  \"neighborhood\": \"Botafogo\",\n  \"complement\": \"3rd floor\",\n  \"reference\": \"Grey building\",\n  \"userId\": \"7e03m794-a33a-11e9-84rt6-0adfa64s5a8e\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"AD-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://api.vtex.com/my-store-name/dataentities/AD/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "25120e1a-c492-4820-af81-f4fba3239838",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/api/dataentities/AD/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/api/dataentities/AD/documents/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/api/dataentities/AD/documents/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"description\":\"Response body object.\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created or updated.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/api/dataentities/AD/documents/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8e9dfed6-a6c7-41db-8848-30b5ea5dbad3",
          "name": "Delete customer address",
          "request": {
            "name": "Delete customer address",
            "description": {
              "content": "Deletes a customer address. \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                "AD",
                "documents",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              }
            ],
            "method": "DELETE",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "a2390193-c565-4ff2-be34-fcdc56850bdb",
              "name": "No Content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    "AD",
                    "documents",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "No Content",
              "code": 204,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cc5300f6-dbc8-4482-b335-30e59763b41f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/dataentities/AD/documents/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[DELETE]::/api/dataentities/AD/documents/:id - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "bc9dcce8-9a58-4a42-bac8-c6a49670ecec",
      "name": "Versions",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4662bf83-cccc-4fd1-9693-d1b7d7945d67",
          "name": "List versions",
          "request": {
            "name": "List versions",
            "description": {
              "content": "Lists all versions of a document. \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Read only documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "documents",
                ":id",
                "versions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "498ce315-005d-4656-9edc-a4797ed5ec18",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents",
                    ":id",
                    "versions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"_EAR0cJ7XB5k5grnmm0zeKGlVvVM9WCPV_\",\n    \"date\": \"2016-10-18T16:53:32+00:00\"\n  },\n  {\n    \"id\": \"_E5SH9WXVvhPBNnbQtYAAGqrIysIeNYhy_\",\n    \"date\": \"2016-09-08T20:11:42+00:00\"\n  },\n  {\n    \"id\": \"_cwVfOG7S6XeAiDBhNpLiJM1cwRiJcvdp_\",\n    \"date\": \"2016-07-14T00:36:36+00:00\"\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a748116b-28c7-42fa-be14-a7cd5cb15e9a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:acronym/documents/:id/versions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/dataentities/:acronym/documents/:id/versions - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/dataentities/:acronym/documents/:id/versions - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"title\":\"Listversion\",\"required\":[\"id\",\"date\"],\"type\":\"object\",\"description\":\"Version information.\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique identifier of the version.\"},\"date\":{\"type\":\"string\",\"description\":\"Date when the version was created, in  ISO 8601 format.\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/dataentities/:acronym/documents/:id/versions - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a2bd3ad6-5749-46f9-9a8e-72095f0a2655",
          "name": "Get version",
          "request": {
            "name": "Get version",
            "description": {
              "content": "Returns the version of a document. \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Read only documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "documents",
                ":id",
                "versions",
                ":versionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the version to retrieve.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "_X58kLameckHYRuBMUbaimlhwqslsrrwT_",
                  "key": "versionId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "16338b9e-bbab-4b77-9458-a99d0443dfe6",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents",
                    ":id",
                    "versions",
                    ":versionId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"version-id\",\n  \"author\": \"user-id\",\n  \"document\": {\n    \"id\": \"2f5dde81-1613-11ea-82ee-12f868feb457\",\n    \"accountId\": \"a8b27fb4-6516-4cc0-82b6-a5f2b011e6e2\",\n    \"accountName\": \"apiexamples\",\n    \"dataEntityId\": \"AS\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bbfa2df0-3863-49ca-8bae-e4780f91a4e2",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:acronym/documents/:id/versions/:versionId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/dataentities/:acronym/documents/:id/versions/:versionId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/dataentities/:acronym/documents/:id/versions/:versionId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"Getversion\",\"required\":[\"id\",\"author\",\"document\"],\"type\":\"object\",\"description\":\"Version information.\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique identifier of the version.\"},\"author\":{\"type\":\"string\",\"description\":\"Unique identifier of the user who created the version.\"},\"document\":{\"title\":\"Document\",\"required\":[\"id\",\"dataEntityId\",\"accountId\",\"accountName\"],\"type\":\"object\",\"description\":\"Object representing each document.\",\"properties\":{\"{customProperty}\":{\"type\":\"string\",\"description\":\"Custom property.\"},\"id\":{\"type\":\"string\",\"description\":\"Unique identifier of the document.\"},\"accountId\":{\"type\":\"string\",\"description\":\"Unique identifier of the account.\"},\"accountName\":{\"type\":\"string\",\"description\":\"Account name.\"},\"dataEntityId\":{\"type\":\"string\",\"description\":\"Two-letter string that identifies the data entity.\"}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/dataentities/:acronym/documents/:id/versions/:versionId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1e3f34e3-2a3b-43be-b898-fc2b9467cf0d",
          "name": "Update version",
          "request": {
            "name": "Update version",
            "description": {
              "content": "Updates the version of a document. \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "documents",
                ":id",
                "versions",
                ":versionId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the version to update.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "_X58kLameckHYRuBMUbaimlhwqslsrrwT_",
                  "key": "versionId"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "fcac87a2-9434-4b4c-8117-05bc48b6494f",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents",
                    ":id",
                    "versions",
                    ":versionId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "PUT",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Id\": \"CL-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n  \"Href\": \"http://{{accountName}}.vtexcommercestable.com.br/api/dataentities/CL/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "3b37e52c-4f70-4cef-a4e3-3fd37edead06",
              "name": "Not modified. This response happens when the `versionId` informed in the path already corresponds to the current version of the document.",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents",
                    ":id",
                    "versions",
                    ":versionId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "PUT",
                "body": {}
              },
              "status": "Not Modified",
              "code": 304,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4afbc025-f8a1-4d03-9dc3-1e9b1f72ee67",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/dataentities/:acronym/documents/:id/versions/:versionId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/api/dataentities/:acronym/documents/:id/versions/:versionId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/api/dataentities/:acronym/documents/:id/versions/:versionId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"IdHref\",\"required\":[\"Id\",\"Href\"],\"type\":\"object\",\"description\":\"Document information.\",\"properties\":{\"Id\":{\"type\":\"string\",\"description\":\"ID of the document that was created, with data entity prefix.\"},\"Href\":{\"type\":\"string\",\"description\":\"Document reference URL.\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/api/dataentities/:acronym/documents/:id/versions/:versionId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "31529e45-f395-48ea-bb67-c7249c3c09ce",
      "name": "Scroll",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "cc2bd675-2992-4db9-9dba-2ec029eba89c",
          "name": "Scroll documents",
          "request": {
            "name": "Scroll documents",
            "description": {
              "content": "Returns a list of documents according to query parameter filters. If you need to query the entire database, or your collection is over 10000 documents, use this endpoint.\r\n\r\nIn the first request, the `X-VTEX-MD-TOKEN` token will be obtained in the response header. This token must be passed to the next request in the `_token` query string parameter. The token expires after 20 minutes of inactivity, and each request made with the token during this time resets the expiration timer.\r\n\r\nAfter the token is obtained, it is no longer necessary to send the filter or document size per page parameters. You only need to resend the token until the document collection is empty.\r\n\r\n### First request example:\r\n```\r\n/dataentities/CL/scroll?isCluster=true&_size=250&_fields=email,firstName\r\n```\r\n\r\nAfter the first request, retrieve the token in the header `X-VTEX-MD-TOKEN` and make the next requests.\r\n\r\n### Example of subsequent requests:\r\n```\r\n/dataentities/CL/scroll?_token={tokenValue}\r\n```\r\n\r\n> To inform the number of documents per request, use the query string parameter `_size`, which has the maximum value of 1000.\r\n\r\n## Query examples\r\n\r\n\r\n| **Filter Type** | **Example** |\r\n|-|-|\r\n| **Simple filter** | `/dataentities/CL/search?email=my@email.com` |\r\n| **Complex filter** | `/dataentities/CL/search?_where=(firstName=Jon OR lastName=Smith) OR (createdIn between 2001-01-01 AND 2016-01-01)` |\r\n| **Date range** | `/dataentities/CL/search?_where=createdIn between 2001-01-01 AND 2016-01-01` |\r\n| **Numeric field range**     | `/dataentities/CL/search?_where=age between 18 AND 25` |\r\n| **Partial filter** | `/dataentities/CL/search?firstName=*Maria*` |\r\n| **Null values** | `/dataentities/CL/search?_where=firstName is null` |\r\n| **Non-null values** | `/dataentities/CL/search?_where=firstName is not null` |\r\n| **Difference** | `/dataentities/CL/search?_where=firstName<>maria` |\r\n| **Greater than** | `/dataentities/CL/search?_where=number>5` |\r\n| **Less than** | `/dataentities/CL/search?_where=date<2001-01-01` |\r\n\r\n>⚠️ Avoid sending too many requests with wildcards (`*`) in the search parameters or that use the `keyword` parameter. This may lead to this endpoint being temporarily blocked for your account. If this happens, you will receive an error with status code `429`.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Read only documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "scroll"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "description": {
                    "content": "Names of the fields that will be returned per document, separated by a comma `,`. It is possible to fetch all fields using `_all` as the value of this query parameter. However, in order to avoid permission errors, we strongly recommend informing only the names of the exact fields that will be used.",
                    "type": "text/plain"
                  },
                  "key": "_fields",
                  "value": "email,firstName,document"
                },
                {
                  "disabled": true,
                  "description": {
                    "content": "Defines a condition the document must comply with. When referring to fields, you can use a nested field up to the first level (e.g. `wishlistProduct.productName`).",
                    "type": "text/plain"
                  },
                  "key": "_where",
                  "value": "firstName is not null"
                },
                {
                  "disabled": true,
                  "description": {
                    "content": "Defines sorting mode in two parts. The first part is the name of the field you want to sort by. It can be a nested field up to the first level (e.g. `wishlistProduct.productName`). In the second part, use `ASC` for ascending order or `DESC` for descending order.",
                    "type": "text/plain"
                  },
                  "key": "_sort",
                  "value": "firstName ASC"
                },
                {
                  "disabled": true,
                  "description": {
                    "content": "Maximum amount of documents returned per request. The maximum value you can set is `1000`.",
                    "type": "text/plain"
                  },
                  "key": "_size",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "description": {
                    "content": "Value of the `X-VTEX-MD-TOKEN` token obtained in the response header of the first request, necessary on subsequent requests to continue scrolling through documents. The token expires after 20 minutes of inactivity, and each request made with the token during this time resets the expiration timer.",
                    "type": "text/plain"
                  },
                  "key": "_token",
                  "value": "123456"
                },
                {
                  "disabled": true,
                  "description": {
                    "content": "Specific page to retrieve. Must be used alongside the `_token` query parameter, after the first request.",
                    "type": "text/plain"
                  },
                  "key": "_page",
                  "value": "2"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "af275960-e2d3-4b76-999d-f1ad10f7bfda",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "scroll"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Names of the fields that will be returned per document, separated by a comma `,`. It is possible to fetch all fields using `_all` as the value of this query parameter. However, in order to avoid permission errors, we strongly recommend informing only the names of the exact fields that will be used.",
                        "type": "text/plain"
                      },
                      "key": "_fields",
                      "value": "email,firstName,document"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Defines a condition the document must comply with. When referring to fields, you can use a nested field up to the first level (e.g. `wishlistProduct.productName`).",
                        "type": "text/plain"
                      },
                      "key": "_where",
                      "value": "firstName is not null"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Defines sorting mode in two parts. The first part is the name of the field you want to sort by. It can be a nested field up to the first level (e.g. `wishlistProduct.productName`). In the second part, use `ASC` for ascending order or `DESC` for descending order.",
                        "type": "text/plain"
                      },
                      "key": "_sort",
                      "value": "firstName ASC"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Maximum amount of documents returned per request. The maximum value you can set is `1000`.",
                        "type": "text/plain"
                      },
                      "key": "_size",
                      "value": "10"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Value of the `X-VTEX-MD-TOKEN` token obtained in the response header of the first request, necessary on subsequent requests to continue scrolling through documents. The token expires after 20 minutes of inactivity, and each request made with the token during this time resets the expiration timer.",
                        "type": "text/plain"
                      },
                      "key": "_token",
                      "value": "123456"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Specific page to retrieve. Must be used alongside the `_token` query parameter, after the first request.",
                        "type": "text/plain"
                      },
                      "key": "_page",
                      "value": "2"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "disabled": true,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-VTEX-MD-TOKEN",
                  "value": "n"
                },
                {
                  "disabled": true,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "REST-Content-Total",
                  "value": "labore sit do"
                }
              ],
              "body": "[\n  {\n    \"id\": \"2f5dde81-1613-11ea-82ee-12f868feb457\",\n    \"accountId\": \"a8b27fb4-6516-4cc0-82b6-a5f2b011e6e2\",\n    \"accountName\": \"apiexamples\",\n    \"dataEntityId\": \"AS\"\n  },\n  {\n    \"id\": \"3b3a3fc9-164b-11ea-82ee-121449f60ecb\",\n    \"accountId\": \"a8b27fb4-6516-4cc0-82b6-a5f2b011e6e2\",\n    \"accountName\": \"apiexamples\",\n    \"dataEntityId\": \"AS\"\n  }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "23504600-3770-4f62-bb7c-4b06a1d3a85e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "scroll"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Names of the fields that will be returned per document, separated by a comma `,`. It is possible to fetch all fields using `_all` as the value of this query parameter. However, in order to avoid permission errors, we strongly recommend informing only the names of the exact fields that will be used.",
                        "type": "text/plain"
                      },
                      "key": "_fields",
                      "value": "email,firstName,document"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Defines a condition the document must comply with. When referring to fields, you can use a nested field up to the first level (e.g. `wishlistProduct.productName`).",
                        "type": "text/plain"
                      },
                      "key": "_where",
                      "value": "firstName is not null"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Defines sorting mode in two parts. The first part is the name of the field you want to sort by. It can be a nested field up to the first level (e.g. `wishlistProduct.productName`). In the second part, use `ASC` for ascending order or `DESC` for descending order.",
                        "type": "text/plain"
                      },
                      "key": "_sort",
                      "value": "firstName ASC"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Maximum amount of documents returned per request. The maximum value you can set is `1000`.",
                        "type": "text/plain"
                      },
                      "key": "_size",
                      "value": "10"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Value of the `X-VTEX-MD-TOKEN` token obtained in the response header of the first request, necessary on subsequent requests to continue scrolling through documents. The token expires after 20 minutes of inactivity, and each request made with the token during this time resets the expiration timer.",
                        "type": "text/plain"
                      },
                      "key": "_token",
                      "value": "123456"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Specific page to retrieve. Must be used alongside the `_token` query parameter, after the first request.",
                        "type": "text/plain"
                      },
                      "key": "_page",
                      "value": "2"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"Message\": \"Maximum simultaneous scrolls rate exceeded (10)\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "17d190af-0eeb-4924-aeea-42cfc834105c",
              "name": "Too Many Requests. Wildcard queries temporarily blocked due to excessive usage. Consider adjusting your code to remove them or reduce the rate of search requests with wildcards (*). This temporary block may also be due to excessive use of requests with the parameter `keyword`.",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "scroll"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Names of the fields that will be returned per document, separated by a comma `,`. It is possible to fetch all fields using `_all` as the value of this query parameter. However, in order to avoid permission errors, we strongly recommend informing only the names of the exact fields that will be used.",
                        "type": "text/plain"
                      },
                      "key": "_fields",
                      "value": "email,firstName,document"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Defines a condition the document must comply with. When referring to fields, you can use a nested field up to the first level (e.g. `wishlistProduct.productName`).",
                        "type": "text/plain"
                      },
                      "key": "_where",
                      "value": "firstName is not null"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Defines sorting mode in two parts. The first part is the name of the field you want to sort by. It can be a nested field up to the first level (e.g. `wishlistProduct.productName`). In the second part, use `ASC` for ascending order or `DESC` for descending order.",
                        "type": "text/plain"
                      },
                      "key": "_sort",
                      "value": "firstName ASC"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Maximum amount of documents returned per request. The maximum value you can set is `1000`.",
                        "type": "text/plain"
                      },
                      "key": "_size",
                      "value": "10"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Value of the `X-VTEX-MD-TOKEN` token obtained in the response header of the first request, necessary on subsequent requests to continue scrolling through documents. The token expires after 20 minutes of inactivity, and each request made with the token during this time resets the expiration timer.",
                        "type": "text/plain"
                      },
                      "key": "_token",
                      "value": "123456"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Specific page to retrieve. Must be used alongside the `_token` query parameter, after the first request.",
                        "type": "text/plain"
                      },
                      "key": "_page",
                      "value": "2"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Too Many Requests",
              "code": 429,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "65b24efa-363b-466d-8f2f-1631489dd464",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:acronym/scroll - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/dataentities/:acronym/scroll - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/dataentities/:acronym/scroll - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"description\":\"List of documents.\",\"items\":{\"type\":\"object\",\"description\":\"Object representing each document.\",\"properties\":{\"additionalProperties\":{\"type\":\"string\",\"description\":\"Custom properties.\"},\"id\":{\"type\":\"string\",\"description\":\"Unique identifier of the document.\"},\"accountId\":{\"type\":\"string\",\"description\":\"Unique identifier of the account.\"},\"accountName\":{\"type\":\"string\",\"description\":\"Account name.\"},\"dataEntityId\":{\"type\":\"string\",\"description\":\"Two-letter string that identifies the data entity.\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/dataentities/:acronym/scroll - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "6c10bbd6-9ecb-4ade-a0e0-58f4d98f2817",
      "name": "Search",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "788244ff-7d4f-476f-8405-87039ccc049d",
          "name": "Search documents",
          "request": {
            "name": "Search documents",
            "description": {
              "content": "Retrieves Master Data v1 documents' information, while choosing which fields will be returned and filtering documents by specific fields.\r\n\r\n> Learn more about [Master Data v1 search queries](https://developers.vtex.com/vtex-rest-api/docs/how-the-queries-in-master-data-v1-work).\r\n\r\n## Query examples\r\n\r\n\r\n| **Filter Type** | **Example** |\r\n|-|-|\r\n| **Simple filter** | `/dataentities/CL/search?email=my@email.com` |\r\n| **Complex filter** | `/dataentities/CL/search?_where=(firstName=Jon OR lastName=Smith) OR (createdIn between 2001-01-01 AND 2016-01-01)` |\r\n| **Date range** | `/dataentities/CL/search?_where=createdIn between 2001-01-01 AND 2016-01-01` |\r\n| **Numeric field range**     | `/dataentities/CL/search?_where=age between 18 AND 25` |\r\n| **Partial filter** | `/dataentities/CL/search?firstName=*Maria*` |\r\n| **Null values** | `/dataentities/CL/search?_where=firstName is null` |\r\n| **Non-null values** | `/dataentities/CL/search?_where=firstName is not null` |\r\n| **Difference** | `/dataentities/CL/search?_where=firstName<>maria` |\r\n| **Greater than** | `/dataentities/CL/search?_where=number>5` |\r\n| **Less than** | `/dataentities/CL/search?_where=date<2001-01-01` |\n\r\n\r>⚠️ Avoid sending too many requests with wildcards (`*`) in the search parameters or that use the `keyword` parameter. This may lead to this endpoint being temporarily blocked for your account. If this happens you will receive an error with status code `503`. \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Read only documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "search"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "description": {
                    "content": "Names of the fields that will be returned per document, separated by a comma `,`. It is possible to fetch all fields using `_all` as the value of this query parameter. However, in order to avoid permission errors, we strongly recommend informing only the names of the exact fields that will be used.",
                    "type": "text/plain"
                  },
                  "key": "_fields",
                  "value": "email,firstName,document"
                },
                {
                  "disabled": true,
                  "description": {
                    "content": "Defines a condition the document must comply with. When referring to fields, you can use a nested field up to the first level (e.g. `wishlistProduct.productName`).",
                    "type": "text/plain"
                  },
                  "key": "_where",
                  "value": "firstName is not null"
                },
                {
                  "disabled": true,
                  "description": {
                    "content": "Defines sorting mode in two parts. The first part is the name of the field you want to sort by. It can be a nested field up to the first level (e.g. `wishlistProduct.productName`). In the second part, use `ASC` for ascending order or `DESC` for descending order.",
                    "type": "text/plain"
                  },
                  "key": "_sort",
                  "value": "firstName ASC"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Specifies the range of documents to be returned in the response. The value should follow the format `resources={x}-{y}`, where:\n* `x`: Index of the first document in the returned array.\n* `y`: Index of the last document in the returned array + 1.\n\nThis field controls pagination by defining the subset of documents to be retrieved. The maximum number of documents returned per query is limited to 100.\nFor example, `resources=0-10` returns the first 10 documents.",
                  "type": "text/plain"
                },
                "key": "REST-Range",
                "value": "resources=0-10"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e52cfb3b-786b-43f2-b12d-dc6ead8d6751",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "search"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Names of the fields that will be returned per document, separated by a comma `,`. It is possible to fetch all fields using `_all` as the value of this query parameter. However, in order to avoid permission errors, we strongly recommend informing only the names of the exact fields that will be used.",
                        "type": "text/plain"
                      },
                      "key": "_fields",
                      "value": "email,firstName,document"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Defines a condition the document must comply with. When referring to fields, you can use a nested field up to the first level (e.g. `wishlistProduct.productName`).",
                        "type": "text/plain"
                      },
                      "key": "_where",
                      "value": "firstName is not null"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Defines sorting mode in two parts. The first part is the name of the field you want to sort by. It can be a nested field up to the first level (e.g. `wishlistProduct.productName`). In the second part, use `ASC` for ascending order or `DESC` for descending order.",
                        "type": "text/plain"
                      },
                      "key": "_sort",
                      "value": "firstName ASC"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Specifies the range of documents to be returned in the response. The value should follow the format `resources={x}-{y}`, where:\n* `x`: Index of the first document in the returned array.\n* `y`: Index of the last document in the returned array + 1.\n\nThis field controls pagination by defining the subset of documents to be retrieved. The maximum number of documents returned per query is limited to 100.\nFor example, `resources=0-10` returns the first 10 documents.",
                      "type": "text/plain"
                    },
                    "key": "REST-Range",
                    "value": "resources=0-10"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "disabled": true,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "REST-Content-Range",
                  "value": "resources=0-10/98"
                }
              ],
              "body": "[\n  {\n    \"id\": \"2f5dde81-1613-11ea-82ee-12f868feb457\",\n    \"accountId\": \"a8b27fb4-6516-4cc0-82b6-a5f2b011e6e2\",\n    \"accountName\": \"apiexamples\",\n    \"dataEntityId\": \"AS\"\n  },\n  {\n    \"id\": \"3b3a3fc9-164b-11ea-82ee-121449f60ecb\",\n    \"accountId\": \"a8b27fb4-6516-4cc0-82b6-a5f2b011e6e2\",\n    \"accountName\": \"apiexamples\",\n    \"dataEntityId\": \"AS\"\n  }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "2a9acff1-bcdb-435e-9de9-2e5cdbd0e22b",
              "name": "Service Unavailable. Wildcard queries temporarily blocked due to excessive usage. Consider adjusting your code to remove them or reduce the rate of search requests with wildcards (*). This temporary block may also be due to excessive use of requests with the parameter `keyword`.",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "search"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Names of the fields that will be returned per document, separated by a comma `,`. It is possible to fetch all fields using `_all` as the value of this query parameter. However, in order to avoid permission errors, we strongly recommend informing only the names of the exact fields that will be used.",
                        "type": "text/plain"
                      },
                      "key": "_fields",
                      "value": "email,firstName,document"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Defines a condition the document must comply with. When referring to fields, you can use a nested field up to the first level (e.g. `wishlistProduct.productName`).",
                        "type": "text/plain"
                      },
                      "key": "_where",
                      "value": "firstName is not null"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Defines sorting mode in two parts. The first part is the name of the field you want to sort by. It can be a nested field up to the first level (e.g. `wishlistProduct.productName`). In the second part, use `ASC` for ascending order or `DESC` for descending order.",
                        "type": "text/plain"
                      },
                      "key": "_sort",
                      "value": "firstName ASC"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Specifies the range of documents to be returned in the response. The value should follow the format `resources={x}-{y}`, where:\n* `x`: Index of the first document in the returned array.\n* `y`: Index of the last document in the returned array + 1.\n\nThis field controls pagination by defining the subset of documents to be retrieved. The maximum number of documents returned per query is limited to 100.\nFor example, `resources=0-10` returns the first 10 documents.",
                      "type": "text/plain"
                    },
                    "key": "REST-Range",
                    "value": "resources=0-10"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Service Unavailable",
              "code": 503,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "68c2b5f6-7b1a-4dff-8397-ed65c4cae0eb",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:acronym/search - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/dataentities/:acronym/search - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/dataentities/:acronym/search - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"description\":\"List of documents.\",\"items\":{\"type\":\"object\",\"description\":\"Object representing each document.\",\"properties\":{\"additionalProperties\":{\"type\":\"string\",\"description\":\"Custom properties.\"},\"id\":{\"type\":\"string\",\"description\":\"Unique identifier of the document.\"},\"accountId\":{\"type\":\"string\",\"description\":\"Unique identifier of the account.\"},\"accountName\":{\"type\":\"string\",\"description\":\"Account name.\"},\"dataEntityId\":{\"type\":\"string\",\"description\":\"Two-letter string that identifies the data entity.\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/dataentities/:acronym/search - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "becd5e5d-4f3b-4c4d-b16b-c14b0ffa1489",
      "name": "Attachments",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "43732afd-35ad-4a51-a8c7-2dd1f58d7e3f",
          "name": "Retrieve attachment",
          "request": {
            "name": "Retrieve attachment",
            "description": {
              "content": "Retrieves a file that had been previously saved in a field of type `File`.\r\n\r\n>⚠️ Make sure to include the file extension in the name, like in this example: `/api/dataentities/CL/documents/123/file/attachments/image.png`. \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Read only documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "documents",
                ":id",
                ":field",
                "attachments",
                ":file-name"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the field where the file is saved, as it appears on VTEX Admin.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "image",
                  "key": "field"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) File name and extension.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "image.png",
                  "key": "file-name"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Accept",
                "value": "image/jpg"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "a608136e-991e-4a49-8e31-af8abbd6020d",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents",
                    ":id",
                    ":field",
                    "attachments",
                    ":file-name"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Accept",
                    "value": "image/jpg"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "image/jpg"
                }
              ],
              "body": "enim",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bfedad2e-6594-460c-b2ee-241216c2f7b7",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/dataentities/:acronym/documents/:id/:field/attachments/:file-name - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/dataentities/:acronym/documents/:id/:field/attachments/:file-name - Content-Type is image/jpg\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"image/jpg\");\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1e6c58f7-a674-4b15-9983-03a70acff6cd",
          "name": "Save attachment",
          "request": {
            "name": "Save attachment",
            "description": {
              "content": "Saves a file in a field of type `File`. Learn more about [Data entity field types](https://help.vtex.com/en/tutorial/creating-data-entity--tutorials_1265#understanding-the-types).`\n\r\n\r> You can upload more than one file. Just add a new field in the `form-data` with type `File`. \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "documents",
                ":id",
                ":field",
                "attachments"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the field to attach the file to, as it appears in VTEX Admin.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "profilePicture",
                  "key": "field"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent. If you are uploading an image, use `image/jpg` or `image/png`. When using JavaScript, use `multipart/form-data`.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "image/jpg"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "(Required) Files to be uploaded.",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "image.jpg,image.jpg",
                  "type": "text"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "64a59fab-29a6-4541-81a4-3703a37bb425",
              "name": "No Content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents",
                    ":id",
                    ":field",
                    "attachments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent. If you are uploading an image, use `image/jpg` or `image/png`. When using JavaScript, use `multipart/form-data`.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "image/jpg"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "(Required) Files to be uploaded.",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "image.jpg,image.jpg",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "No Content",
              "code": 204,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9bd4ab6b-2aed-4d5f-8e56-05f0d39a27ac",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/dataentities/:acronym/documents/:id/:field/attachments - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[POST]::/api/dataentities/:acronym/documents/:id/:field/attachments - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "4249118e-b211-4ab1-bf6e-751c27eb7941",
      "name": "Clusters",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "9c533eb6-f115-4555-91c0-2ebd9592b639",
          "name": "Validate document by clusters",
          "request": {
            "name": "Validate document by clusters",
            "description": {
              "content": "Validate documents by clusters.\n\r\n\r> Learn more about Master Data [clusters](https://help.vtex.com/en/tutorial/how-can-i-create-cluster-of-customers--frequentlyAskedQuestions_1724). \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "documents",
                ":id",
                "clusters"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"name\": \"male\",\n    \"rule\": \"gender=male\"\n  },\n  {\n    \"name\": \"complex\",\n    \"rule\": \"((gender=male AND percent=0.35) AND any is null) AND (name=*go*)\"\n  },\n  {\n    \"name\": \"complex2\",\n    \"rule\": \"((gender=male AND percent=0.35) AND any is not null) OR (name=*go*)\"\n  },\n  {\n    \"name\": \"createdIn\",\n    \"rule\": \"createdIn between 2015-10-28 AND 2015-10-30\"\n  }\n]",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "62e0e478-25a3-4c53-a501-8cec9db82eff",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents",
                    ":id",
                    "clusters"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"name\": \"male\",\n    \"rule\": \"gender=male\"\n  },\n  {\n    \"name\": \"complex\",\n    \"rule\": \"((gender=male AND percent=0.35) AND any is null) AND (name=*go*)\"\n  },\n  {\n    \"name\": \"complex2\",\n    \"rule\": \"((gender=male AND percent=0.35) AND any is not null) OR (name=*go*)\"\n  },\n  {\n    \"name\": \"createdIn\",\n    \"rule\": \"createdIn between 2015-10-28 AND 2015-10-30\"\n  }\n]",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "94a9d152-5bad-4c10-ad6a-02eb9b0c80ef",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/dataentities/:acronym/documents/:id/clusters - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "c6d687f5-bd75-4477-a687-7fecf8b3f8c6",
      "name": "Score",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f74ff33a-dde2-4098-924c-0bac10ea2613",
          "name": "Update scores",
          "request": {
            "name": "Update scores",
            "description": {
              "content": "Updates the score of more than one `Score2` type field and more than one key. Learn more about [Data entity field types](https://help.vtex.com/en/tutorial/creating-data-entity--tutorials_1265#understanding-the-types). \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "documents",
                ":id",
                "score"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"field\": \"carttag\",\n    \"key\": \"Payment\",\n    \"point\": 1,\n    \"until\": \"10m\"\n  },\n  {\n    \"field\": \"scoretest\",\n    \"key\": \"Point 1\",\n    \"point\": 1,\n    \"until\": \"1d\"\n  }\n]",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "8d6148e8-3d12-4761-af6a-7913ee0d142e",
              "name": "No Content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents",
                    ":id",
                    "score"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"field\": \"carttag\",\n    \"key\": \"Payment\",\n    \"point\": 1,\n    \"until\": \"10m\"\n  },\n  {\n    \"field\": \"scoretest\",\n    \"key\": \"Point 1\",\n    \"point\": 1,\n    \"until\": \"1d\"\n  }\n]",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "No Content",
              "code": 204,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b6a08629-fa33-4015-8bf3-7a1d59d80aa6",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/dataentities/:acronym/documents/:id/score - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[PUT]::/api/dataentities/:acronym/documents/:id/score - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "441eb0ca-87a5-4031-aa2b-9b7e48573b0a",
          "name": "Update score by field",
          "request": {
            "name": "Update score by field",
            "description": {
              "content": "Updates the score of a specific `Score2` type field. Learn more about [Data entity field types](https://help.vtex.com/en/tutorial/creating-data-entity--tutorials_1265#understanding-the-types). \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Insert or update document (not remove)** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "documents",
                ":id",
                "score",
                ":field-name"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the field to score.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "carttag",
                  "key": "field-name"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"key\": \"first key\",\n  \"point\": 1,\n  \"until\": \"10m\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "acf8a434-f550-44d9-b82f-6e01148c9f09",
              "name": "No Content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents",
                    ":id",
                    "score",
                    ":field-name"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"key\": \"first key\",\n  \"point\": 1,\n  \"until\": \"10m\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "No Content",
              "code": 204,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "41174163-67eb-4b1c-bde2-3b4aacbf3f29",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/dataentities/:acronym/documents/:id/score/:field-name - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[PUT]::/api/dataentities/:acronym/documents/:id/score/:field-name - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8919cd6d-899a-4aa1-bb66-79d52c121ef9",
          "name": "Delete score by field",
          "request": {
            "name": "Delete score by field",
            "description": {
              "content": "Removes a key from a specific `Score2` type field. Learn more about [Data entity field types](https://help.vtex.com/en/tutorial/creating-data-entity--tutorials_1265#understanding-the-types). \r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Dynamic Storage | Dynamic storage generic resources | **Full access to all documents** |\r\n| Dynamic Storage | Dynamic storage generic resources | **Master Data administrator** |\r\n\r\nThere are no applicable [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) for this resource list. You must [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) and add at least one of the resources above in order to use this endpoint.To learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).\r\n\r\n>❗ To prevent integrations from having excessive permissions, consider the [best practices for managing app keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm) when assigning License Manager roles to integrations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "dataentities",
                ":acronym",
                "documents",
                ":id",
                "score",
                ":field-name"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Two-letter string that identifies the data entity.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP",
                  "key": "acronym"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique identifier of the document.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "SP-b818cbda-e489-11e6-94f4-0ac138d2d42e",
                  "key": "id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Name of the field to remove a key from.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "carttag",
                  "key": "field-name"
                }
              ]
            },
            "header": [
              {
                "disabled": false,
                "description": {
                  "content": "(Required) Type of the content being sent.",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": false,
                "description": {
                  "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/vnd.vtex.ds.v10+json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"key\": \"first key\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "458b12c2-cd04-49c5-b165-fbb282c3d603",
              "name": "No Content",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "dataentities",
                    ":acronym",
                    "documents",
                    ":id",
                    "score",
                    ":field-name"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) Type of the content being sent.",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/vnd.vtex.ds.v10+json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "X-VTEX-API-AppKey",
                    "value": "<API Key>"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"key\": \"first key\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "No Content",
              "code": 204,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7c062023-36ee-4056-ab1a-bd7e64af0c15",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/dataentities/:acronym/documents/:id/score/:field-name - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[DELETE]::/api/dataentities/:acronym/documents/:id/score/:field-name - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "X-VTEX-API-AppKey",
        "key": "key"
      },
      {
        "type": "any",
        "value": "{{apiKey}}",
        "key": "value"
      },
      {
        "type": "any",
        "value": "header",
        "key": "in"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "type": "any",
      "value": "apiexamples",
      "key": "accountName"
    },
    {
      "type": "any",
      "value": "vtexcommercestable",
      "key": "environment"
    },
    {
      "type": "any",
      "value": "https://{{accountName}}.{{environment}}.com.br",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "2b832c77-819b-4d7a-86e4-7f0dcde9d8a6",
    "name": "Master Data API - v1",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Master Data is a highly customizable VTEX database solution, which enables you to create applications. By default, Master Data is used to store and organize Customer data from your store. It features a powerful search engine, allowing you to store, search, expand, and customize data. Learn more about [Master Data v1](https://help.vtex.com/en/tutorial/master-data--4otjBnR27u4WUIciQsmkAw).\r\n\r\n## Index\r\n\r\n### Data Entities\r\n\r\nObtain information about the structure of the data entities.\r\n\r\n- `GET` [List data entities](https://developers.vtex.com/docs/api-reference/masterdata-api#get-/api/dataentities)\r\n- `GET` [Get data entity structure](https://developers.vtex.com/docs/api-reference/masterdata-api#get-/api/dataentities/-acronym-)\r\n\r\n### Documents\r\n\r\nCreate, update and retrieve documents.\r\n\r\n- `POST` [Create new document](https://developers.vtex.com/docs/api-reference/masterdata-api#post-/api/dataentities/-acronym-/documents)\r\n- `PUT` [Create document with custom ID or Update entire document](https://developers.vtex.com/docs/api-reference/masterdata-api#put-/api/dataentities/-acronym-/documents/-id-)\r\n- `PATCH` [Create or update partial document](https://developers.vtex.com/docs/api-reference/masterdata-api#patch-/api/dataentities/-acronym-/documents)\r\n- `GET` [Get document](https://developers.vtex.com/docs/api-reference/masterdata-api#get-/api/dataentities/-acronym-/documents/-id-)\r\n- `PUT` [Update entire document](https://developers.vtex.com/docs/api-reference/masterdata-api#put-/api/dataentities/-acronym-/documents/-id-)\r\n- `PATCH` [Update partial document](https://developers.vtex.com/docs/api-reference/masterdata-api#patch-/api/dataentities/-acronym-/documents/-id-)\r\n- `DELETE` [Delete document](https://developers.vtex.com/docs/api-reference/masterdata-api#delete-/api/dataentities/-acronym-/documents/-id-)\r\n\r\n### Customer profiles\r\n\r\nModify customer profiles in the CL entity.\r\n\r\n- `POST` [Create new customer profile](https://developers.vtex.com/docs/api-reference/masterdata-api#post-/api/dataentities/CL/documents)\r\n- `PATCH` [Update customer profile](https://developers.vtex.com/docs/api-reference/masterdata-api#patch-/api/dataentities/CL/documents/-id-)\r\n- `DELETE` [Delete customer profile](https://developers.vtex.com/docs/api-reference/masterdata-api#delete-/api/dataentities/CL/documents/-id-)\r\n\r\n### Addresses\r\n\r\nModify customer addresses in the AD entity.\r\n\r\n- `POST` [Create new customer address](https://developers.vtex.com/docs/api-reference/masterdata-api#post-/api/dataentities/AD/documents)\r\n- `PATCH` [Update customer address](https://developers.vtex.com/docs/api-reference/masterdata-api#patch-/api/dataentities/AD/documents/-id-)\r\n- `DELETE` [Delete customer address](https://developers.vtex.com/docs/api-reference/masterdata-api#delete-/api/dataentities/AD/documents/-id-)\r\n\r\n### Versions\r\n\r\nMaster Data documents are versioned. This means that, for each change, a new version is generated. The versions endpoints allow you to query the versions and also apply the state of a document to the most current version.\r\n\r\n- `GET` [List versions](https://developers.vtex.com/docs/api-reference/masterdata-api#get-/api/dataentities/-acronym-/documents/-id-/versions)\r\n- `GET` [Get version](https://developers.vtex.com/docs/api-reference/masterdata-api#get-/api/dataentities/-acronym-/documents/-id-/versions/-versionId-)\r\n- `PUT` [Put version](https://developers.vtex.com/docs/api-reference/masterdata-api#put-/api/dataentities/-acronym-/documents/-id-/versions/-versionId-)\r\n\r\n### Scroll\r\n\r\nDeveloped for external integration scenarios. If your collection is over 10.000 documents or you need to query the entire VTEX Master Data database, use these endpoints.\r\n\r\n- `GET` [Scroll documents](https://developers.vtex.com/docs/api-reference/masterdata-api#get-/api/dataentities/-acronym-/scroll)\r\n\r\n### Search\r\n\r\nQuery a collection of documents.\r\n\r\n- `GET` [Search documents](https://developers.vtex.com/docs/api-reference/masterdata-api#get-/api/dataentities/-acronym-/search)\r\n\r\n### Attachments\r\n\r\nUpload and download files.\r\n\r\n- `GET` [Retrieve attachment](https://developers.vtex.com/docs/api-reference/masterdata-api#get-/api/dataentities/-acronym-/documents/-id-/-field-/attachments/-file-name-)\r\n- `POST` [Save attachment](https://developers.vtex.com/docs/api-reference/masterdata-api#post-/api/dataentities/-acronym-/documents/-id-/-field-/attachments)\r\n\r\n### Clusters\r\n\r\nCheck if a particular document is in one or more clusters.\r\n\r\n- `POST` [Validate Document by Clusters](https://developers.vtex.com/docs/api-reference/masterdata-api#post-/api/dataentities/-acronym-/documents/-id-/clusters)\r\n\r\n### Score\r\n\r\nRecord and remove points in `Score2` type fields. Learn more about [Data entity field types](https://help.vtex.com/en/tutorial/creating-data-entity--tutorials_1265#understanding-the-types). \r\n\r\n- `PUT` [Put scores](https://developers.vtex.com/docs/api-reference/masterdata-api#put-/api/dataentities/-acronym-/documents/-id-/score)\r\n- `PUT` [Put score by field](https://developers.vtex.com/docs/api-reference/masterdata-api#put-/api/dataentities/-acronym-/documents/-id-/score/-field-name-)\r\n- `DELETE` [Delete score by field](https://developers.vtex.com/docs/api-reference/masterdata-api#delete-/api/dataentities/-acronym-/documents/-id-/score/-field-name-)\r\n",
      "type": "text/plain"
    }
  }
}