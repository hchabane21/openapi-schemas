{
    "openapi": "3.0.0",
    "info": {
        "title": "Suggestions",
        "description": "The **Marketplace API** enables marketplaces and sellers hosted on VTEX to perform their collaborative operations.  \r\n\r\n>⚠️ The marketplace must [create an appKey and appToken](https://developers.vtex.com/docs/guides/getting-started-authentication) for each non-VTEX seller that will use this API.\r\n\r\n## Index\r\n\r\n### Notification\r\n\r\nEndpoints used by sellers to notify marketplaces that the price or inventory language has changed for one of their SKUs.\r\n\r\n`POST` [Notify marketplace of price update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/price)\r\n\r\n`POST` [Notify marketplace of inventory update](https://developers.vtex.com/docs/api-reference/marketplace-apis#post-/notificator/-sellerId-/changenotification/-skuId-/inventory)\r\n\r\n\r\n### Suggestions\r\n\r\n#### Get Suggestions\r\n\r\nSearch and filter all suggestions using specific criteria.\r\n\r\n`GET` [Get all SKU Suggestions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions)\r\n\r\n`GET` [Get SKU Suggestion by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerSkuId-)\r\n\r\n\r\n#### Manage Suggestions\r\n\r\nSend or delete SKU suggestions from the seller to marketplace.\r\n\r\n`PUT` [Send SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerSkuId-)\r\n\r\n`DELETE` [Delete SKU Suggestion](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#delete-/suggestions/-sellerId-/-sellerSkuId-)\r\n\r\n\r\n#### Get Versions\r\n\r\nSearch and filter all versions of suggestions, using specific criteria.\r\n\r\n`GET` [Get all versions](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions)\r\n\r\n`GET` [Get version by ID](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/-sellerId-/-sellerskuid-/versions/-version-)\r\n\r\n\r\n#### Match Received SKUs\r\n\r\nMatch SKU suggestions received in the marketplace.\r\n\r\n`PUT` [Match Received SKUs individually](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/-sellerId-/-sellerskuid-/versions/-version-/matches/-matchid-)\r\n\r\n`PUT` [Match Multiple Received SKUs](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/matches/action/-actionName-)\r\n\r\n\r\n#### SKU Approval Settings\r\n\r\nAllows marketplaces to configure rules for automatically and manually approving SKUs received from sellers.\r\n\r\n`GET`[Get autoApprove Status in Account Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/autoapproval/toggle)  \r\n\r\n`PUT`[Activate autoApprove in Marketplace's Account](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle)  \r\n\r\n`GET`[Get Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration)\r\n\r\n`PUT`[Save Account's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration)\r\n\r\n`GET`[Get Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration/seller/-sellerId-)\r\n\r\n`PUT`[Save Seller's Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/seller/-sellerId-)\r\n\r\n`PUT`[Activate autoApprove Setting for a Seller](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/autoapproval/toggle/seller/-sellerId-)   \r\n\r\n\r\n### Matched Offers\r\n\r\nOffers are seller products and SKUs that were sent to the marketplace, and already have their price and inventory level configured.\r\n\r\n`GET`[Get Matched Offers List](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/offers)\r\n\r\n`GET`[Get Matched Offer's Data by SKU ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-/sku/-skuId-)  \r\n\r\n`GET`[Get Matched Offer's Data by Product ID](https://developers.vtex.com/docs/api-reference/marketplace-apis#get-/offer-manager/pvt/product/-productId-)\r\n",
        "contact": {},
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://api.vtex.com/{accountName}",
            "description": "Suggestions Server URL.",
            "variables": {
                "accountName": {
                    "description": "Name of the VTEX account. Used as part of the URL.",
                    "default": "apiexamples"
                }
            }
        }
    ],
    "paths": {
        "/suggestions/configuration/autoapproval/toggle": {
            "get": {
                "tags": [
                    "SKU Approval Settings"
                ],
                "summary": "Get autoApprove Status in Account Settings",
                "description": "This endpoint can be used to check whether the automatic approval setting is active or not, for a specific seller. The call does not require a request body. \n\nIf the answer is `true`, the automatic approval setting will be active. If the response is `false`, it is inactive.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Suggestion | Suggestion Resource | **Main Access** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Unrestricted access to all components on the SKUS page received including page data viewing as well as ad approval actions. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Main Access |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "GetautoApprovevaluefromconfig",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/sellerId"
                    },
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/responseautoApproveStatusAccountSettings"
                                },
                                "example": {
                                    "Enabled": false
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "SKU Approval Settings"
                ],
                "summary": "Activate autoApprove in Marketplace's Account",
                "description": "This endpoint enables the autoapprove rule to a marketplace's whole Received SKUs module. Once enabling the rule, received SKUs will be automatically approved on your store, regardless of the seller. \n\n For the autoapprove rule to work as expected, the approval [Matcher score](https://help.vtex.com/en/tutorial/entendendo-a-pontuacao-do-vtex-matcher--tutorials_424) should be set up as 80 (default value), but you can configure a different number through the field `Score` in [Save Account's Approval Settings](https://developers.vtex.com/vtex-rest-api/reference/saveaccountconfig).\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Suggestion | UI resources | **Save Suggestion Rules** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Allows marketplaces to create and change VTEx Matcher rules for the approval of SKUS received. This configuration is made through the API SKU Approval Settings. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Save Suggestion Rules |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "Saveautoapproveforaccount",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaveautoapproveforaccountRequest"
                            },
                            "example": {
                                "Enabled": true
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/responseActivateautoApprove"
                                },
                                "example": {
                                    "Enabled": false
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/configuration": {
            "get": {
                "tags": [
                    "SKU Approval Settings"
                ],
                "summary": "Get Account's Approval Settings",
                "description": "This endpoint retrieves the current approval settings of a marketplace's Received SKUs module. Its response includes: \n\n- `Score`: Matcher scores for approving and rejecting SKUs received from sellers. \n\n- `Matchers`: All Matchers configured on the marketplace, and their respective details. \n\n- `SpecificationsMapping`: Mapping of product and SKU specifications, per seller. \n\n- `MatchFlux`: This field determines the type of approval configuration applied to SKUs received from a seller. \n\nThe possible values include: \n\n-`default`, where the Matcher reviews the SKU, and approves it based on its score. \n\n-`manual`, for manual approvals through the Received SKU UI, or Match API. \n\n-`autoApprove`, for every SKU received from a given seller to be approved automatically, regardless of their Matcher Score.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Suggestion | Suggestion Resource | **Main Access** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Unrestricted access to all components on the SKUS page received including page data viewing as well as ad approval actions. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Main Access |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "Getaccountconfig",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/responseGetAccountsApprovalSettings"
                                },
                                "example": {
                                    "Score": {
                                        "Approve": 80,
                                        "Reject": 30
                                    },
                                    "Matchers": [
                                        {
                                            "MatcherId": "vtex-matcher",
                                            "hook-base-address": "http://portal.vtexinternal.com/api/ssm/hooks",
                                            "IsActive": true,
                                            "UpdatesNotificationEndpoint": null,
                                            "Description": null
                                        }
                                    ],
                                    "Rules": {
                                        "Item": [],
                                        "Product": []
                                    },
                                    "SpecificationsMapping": [],
                                    "MatchFlux": "AutoApprove"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "SKU Approval Settings"
                ],
                "summary": "Save Account's Approval Settings",
                "description": "Marketplaces use this endpoint to create or update approval settings on their Received SKUs module. \n\nThe request includes all the details necessary to implement the chosen approval settings.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Suggestion | UI resources | **Save Suggestion Rules** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Allows marketplaces to create and change VTEx Matcher rules for the approval of SKUS received. This configuration is made through the API SKU Approval Settings. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Save Suggestion Rules |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "Saveaccountconfig",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaveaccountconfigRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/responseSaveAccountsApprovalSettings"
                                },
                                "example": {
                                    "Score": {
                                        "Approve": 80,
                                        "Reject": 30
                                    },
                                    "Matchers": [
                                        {
                                            "MatcherId": "vtex-matcher",
                                            "hook-base-address": "http://simple-suggestion-matcher.vtex.com.br",
                                            "IsActive": true,
                                            "UpdatesNotificationEndpoint": "notification.endpoint",
                                            "Description": "Note"
                                        }
                                    ],
                                    "Rules": {
                                        "Item": [
                                            1
                                        ],
                                        "Product": [
                                            "Shirt"
                                        ]
                                    },
                                    "SpecificationsMapping": [
                                        {
                                            "SellerId": "Store1",
                                            "Mapping": {
                                                "Yellow": "Light yellow"
                                            }
                                        }
                                    ],
                                    "MatchFlux": "AutoApprove"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/configuration/account/config": {
            "get": {
                "tags": [
                    "SKU Approval Settings"
                ],
                "summary": "Get Account's Matcher Settings",
                "description": "This endpoint will be used by the marketplace to query the matcher's current approval settings on their incoming SKUs module. If the account has no matcher configured, the response will be `404 Not Found`. \n\nFor account approval configuration information, with response including specification information, see [Get Account Approval Settings](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#get-/suggestions/configuration) endpoint. \n\nThe [VTEX matcher](https://help.vtex.com/pt/tutorial/entendendo-a-punctuacao-do-vtex-matcher--tutorials_424) is a tool used by marketplaces to evaluate SKUs corresponding to information from an advertisement of the seller, with those of items already present in the marketplace catalog.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Suggestion | Suggestion Resource | **Main Access** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Unrestricted access to all components on the SKUS page received including page data viewing as well as ad approval actions. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Main Access |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "Getmatchconfig",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/responseGetAccountsMatcherSettings"
                                },
                                "example": {
                                    "score": {
                                        "approve": 85,
                                        "pending": 31,
                                        "reject": 30
                                    },
                                    "matchers": [
                                        {
                                            "matcherId": "example-matcher",
                                            "hook-base-address": "http://portal.vtexinternal.com.br/api/u90/hooks",
                                            "isActive": true,
                                            "updatesNotificationEndpoint": null,
                                            "description": null
                                        }
                                    ],
                                    "rules": {
                                        "item": [],
                                        "product": []
                                    },
                                    "specificationsMapping": [],
                                    "matchFlux": "Default"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/configuration/seller/{sellerId}": {
            "get": {
                "tags": [
                    "SKU Approval Settings"
                ],
                "summary": "Get Seller's Approval Settings",
                "description": "This endpoint retrieves the current Received SKUs approval settings applied to a specific seller. Its response includes: \n\n- `sellerId`: A string that identifies the seller in the marketplace. \n\n- `accountId`: Marketplace’s account ID. \n\n- `accountName`: Marketplace’s account name. \n\n- `mapping`: Mapping of SKU and product Specifications. \n\n- `matchFlux`: This field determines the type of approval configuration applied to SKUs received  from a seller. \n\nThe possible values include:  \n\n-`default`, where the Matcher reviews the SKU, and approves it based on its score. \n\n-`manual`, for manual approvals through the Received SKU UI and Match API. \n\n-`autoApprove`, for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Suggestion | Suggestion Resource | **Main Access** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Unrestricted access to all components on the SKUS page received including page data viewing as well as ad approval actions. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Main Access |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "Getselleraccountconfig",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/sellerId"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/responseGetSellersApprovalSettings"
                                },
                                "example": {
                                    "sellerId": "sellerexample",
                                    "accountId": "d74dau71f-325a-4463-bd53-ae8b0453186ca",
                                    "accountName": "marketplaceexample",
                                    "mapping": {
                                        "defaultColor": "white /black",
                                        "searchColor": "color1, color2",
                                        "color1": "black",
                                        "color2": "white",
                                        "color": "black",
                                        "size": "EUR44"
                                    },
                                    "matchFlux": "Default"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "SKU Approval Settings"
                ],
                "summary": "Save Seller's Approval Settings",
                "description": "Marketplaces use this endpoint to create or update approval settings to a specific seller, on the Received SKUs module. \n\nThe request includes all the details necessary to implement the chosen approval settings.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Suggestion | UI resources | **Save Suggestion Rules** |\r\n| Suggestion | Suggestion Resource | **Main Access** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Allows marketplaces to create and change VTEx Matcher rules for the approval of SKUS received. This configuration is made through the API SKU Approval Settings. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Save Suggestion Rules |\r\n| Unrestricted access to all components on the SKUS page received including page data viewing as well as ad approval actions. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Main Access |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "Putselleraccountconfig",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/sellerId"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutselleraccountconfigRequest"
                            },
                            "example": {
                                "sellerId": "1a",
                                "mapping": null,
                                "matchFlux": "Default"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/configuration/autoapproval/toggle/seller/{sellerId}": {
            "put": {
                "tags": [
                    "SKU Approval Settings"
                ],
                "summary": "Activate autoApprove Setting for a Seller",
                "description": "This endpoint enables the auto approve setting to received SKUs from a specific seller. Be aware that once enabling the rule through this request, all received SKUs from that seller will be automatically approved on your store, regardless of the Matcher Score.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Suggestion | Suggestion Resource | **Main Access** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Unrestricted access to all components on the SKUS page received including page data viewing as well as ad approval actions. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Main Access |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "Saveautoapproveforaccountseller",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/sellerId"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaveautoapproveforaccountsellerRequest"
                            },
                            "example": {
                                "Enabled": true
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/saveautoapproveforaccountsellerResponse"
                                },
                                "example": {
                                    "Enabled": true
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions": {
            "get": {
                "tags": [
                    "Get Suggestions"
                ],
                "summary": "Get all SKU suggestions",
                "description": "This endpoint retrieves a list of all SKUs sent by the seller for the Marketplace's approval. Marketplace operators should use this endpoint whenever they want to check the full list of received SKUs and their  information. \n\nNote that all the information sent by the seller will be in the [content] object. All remaining information in this endpoint's response is given by the Matcher. \n\nMatcher rates received SKUs by correlating the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been: \n\n`Approved`: score equal to or greater than 80 points. \n\n`Pending`: from 31 to 79 points.\n\n`Denied`: from 0 to 30 points. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Suggestion | Suggestion Resource | **Main Access** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Unrestricted access to all components on the SKUS page received including page data viewing as well as ad approval actions. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Main Access |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "Getsuggestions",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/q"
                    },
                    {
                        "$ref": "#/components/parameters/type"
                    },
                    {
                        "$ref": "#/components/parameters/seller"
                    },
                    {
                        "$ref": "#/components/parameters/status"
                    },
                    {
                        "$ref": "#/components/parameters/hasmapping"
                    },
                    {
                        "$ref": "#/components/parameters/matcherId"
                    },
                    {
                        "$ref": "#/components/parameters/from"
                    },
                    {
                        "$ref": "#/components/parameters/to"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/{sellerId}/{sellerSkuId}": {
            "put": {
                "tags": [
                    "Manage Suggestions"
                ],
                "summary": "Send SKU Suggestion",
                "description": "This request is used by the seller when it wants to suggest that one of their SKUs is sold in the marketplace.\n\nBefore using this request, the seller should always use the [Change Notification](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-seller-sku-notification) request in order to check if the SKU already exists in the marketplace. If it doesn't, then this is the next call in the SKU integration flow.\n\nIn the Send Suggestion request, the seller must send information about the SKU, such as the product and SKU name, the seller ID, and the image URL. All parameters are explained below.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Channels | UI resources | **Send Marketplace Suggestions** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Allows Sellers to send ads to Marketplace which will be reviewed and approved by Marketplace through the SKUS page received or by the Match Received Skus API.| Send Marketplace Suggestions |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "SaveSuggestion",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/sellerId"
                    },
                    {
                        "$ref": "#/components/parameters/sellerSkuId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaveSuggestionRequest"
                            },
                            "example": {
                                "ProductId": "321",
                                "ProductName": "Product sample",
                                "NameComplete": "Complete product name",
                                "ProductDescription": "sample",
                                "BrandName": "Brand 1",
                                "SkuName": "Sku sample",
                                "SellerId": "string",
                                "Height": 1,
                                "Width": 1,
                                "Length": 1,
                                "Weight": 1,
                                "Updated": null,
                                "RefId": "REFID123",
                                "SellerStockKeepingUnitId": 567,
                                "CategoryFullPath": "Category 1",
                                "Images": [
                                    {
                                        "imageName": "Principal",
                                        "imageUrl": "https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg"
                                    }
                                ],
                                "ProductSpecifications": [
                                    {
                                        "fieldName": "Fabric",
                                        "fieldValues": [
                                            "Cotton",
                                            "Velvet"
                                        ]
                                    }
                                ],
                                "SkuSpecifications": [
                                    {
                                        "fieldName": "Color",
                                        "fieldValues": [
                                            "Red",
                                            "Blue"
                                        ]
                                    }
                                ],
                                "EAN": "EAN123",
                                "MeasurementUnit": "un",
                                "UnitMultiplier": 1,
                                "AvailableQuantity": 111,
                                "Pricing": {
                                    "Currency": "BRL",
                                    "SalePrice": 399,
                                    "CurrencySymbol": "R$"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": [
                    "Get Suggestions"
                ],
                "summary": "Get SKU Suggestion by ID",
                "description": "This endpoint retrieves the data of a specific SKU sent by the seller, to the marketplace. Marketplaces or external matchers can call this endpoint when they want to check the information about a single SKU. \n\nNote that all the information sent by the seller will be in the [content] object. All remaining information in this endpoint's response is given by the Matcher. \n\nMatcher rates received SKUs by correlating the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been: \n\n`Approved`: score equal to or greater than 80 points. \n\n`Pending`: from 31 to 79 points.\n\n`Denied`: from 0 to 30 points. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Suggestion | Suggestion Resource | **Main Access** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Unrestricted access to all components on the SKUS page received including page data viewing as well as ad approval actions. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Main Access |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "GetSuggestion",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/sellerId"
                    },
                    {
                        "$ref": "#/components/parameters/sellerSkuId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Manage Suggestions"
                ],
                "summary": "Delete SKU Suggestion",
                "description": "This endpoint deletes a chosen SKU suggestion. Only one SKU should be deleted per request. This request cannot be undone. A workaround to revert its action, is to send the suggestion again, through the Send Suggestion API.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Suggestion | Suggestion Resource | **Main Access** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Unrestricted access to all components on the SKUS page received including page data viewing as well as ad approval actions. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Main Access |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "DeleteSuggestion",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/sellerId"
                    },
                    {
                        "$ref": "#/components/parameters/sellerSkuId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/{sellerId}/{sellerskuid}/versions": {
            "get": {
                "tags": [
                    "Get Versions"
                ],
                "summary": "Get all Versions",
                "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. \n\nThis endpoint retrieves the data of *all* previous and latest versions of a specific SKU suggestion, sent by the seller. Whenever an SKU is updated, it is important to map previous versions, to compare and identify changes. \n\nThe response's object [latestversion] provides the information of the most recent version of that SKU suggestion.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Suggestion | Suggestion Resource | **Main Access** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Unrestricted access to all components on the SKUS page received including page data viewing as well as ad approval actions. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Main Access |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "GetVersions",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/sellerId"
                    },
                    {
                        "$ref": "#/components/parameters/sellerSkuId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/responseGetAllversion"
                                },
                                "example": [
                                    {
                                        "VersionId": "09142023011902452",
                                        "CreationDate": "09/14/2023 01:19:02",
                                        "IsLatest": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/{sellerId}/{sellerskuid}/versions/{version}": {
            "get": {
                "tags": [
                    "Get Versions"
                ],
                "summary": "Get Version by ID",
                "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. \n\nThis endpoint retrieves a specific *version* of a chosen SKU sent by the seller. Add the Seller's ID, Seller's SKU ID, and version ID in the path to detail your search.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Suggestion | Suggestion Resource | **Main Access** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Unrestricted access to all components on the SKUS page received including page data viewing as well as ad approval actions. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Main Access |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "GetSuggestionbyversion",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/sellerId"
                    },
                    {
                        "$ref": "#/components/parameters/sellerSkuId"
                    },
                    {
                        "$ref": "#/components/parameters/version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/{sellerId}/{sellerskuid}/versions/{version}/matches/{matchid}": {
            "put": {
                "tags": [
                    "Match Received SKUs"
                ],
                "summary": "Match Received SKUs individually",
                "description": "All SKUs sent from a seller to a marketplace must be reviewed and matched. Actions in the matching process are added in the request body through the [matchType] object. Match type actions include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `itemMatch`: associate the received SKU to an existing SKU. \n\n3. `productMatch`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU. \n\n5. `pending`: the received SKU requires attention. \n\n6. `incomplete`: the received SKU is lacking information to be matched. \n\n7. `insufficientScore`: the score given by the Matcher to this received SKU doesn't qualify it to be matched. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Suggestion | Suggestion Resource | **Main Access** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Unrestricted access to all components on the SKUS page received including page data viewing as well as ad approval actions. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Main Access |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "Match",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/sellerId"
                    },
                    {
                        "$ref": "#/components/parameters/sellerSkuId"
                    },
                    {
                        "$ref": "#/components/parameters/version"
                    },
                    {
                        "$ref": "#/components/parameters/matchId"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatchRequest"
                            },
                            "example": {
                                "matcherId": "{{matcherid}}",
                                "matchType": "itemMatch",
                                "score": "{{score}} (must be decimal)",
                                "skuRef": "{{skuid}}(should be specifed when match is a sku match)",
                                "productRef": "{{productRef}}(should be specified when match is a product match)",
                                "product": {
                                    "name": "Book A",
                                    "description": "Book description",
                                    "categoryId": 12,
                                    "brandId": 1234567,
                                    "matchType": "itemMatch",
                                    "specifications": null
                                },
                                "sku": {
                                    "name": "Sku exemplo",
                                    "eans": [
                                        "12345678901213"
                                    ],
                                    "refId": null,
                                    "height": 1,
                                    "width": 1,
                                    "length": 1,
                                    "weight": 1,
                                    "images": [
                                        {
                                            "imagem1.jpg": {
                                                "imagem1.jpg": "https://imageurl.example"
                                            }
                                        }
                                    ],
                                    "unitMultiplier": 1,
                                    "measurementUnit": "un",
                                    "specifications": {
                                        "Embalagem": "3 k   g"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/suggestions/matches/action/{actionName}": {
            "put": {
                "tags": [
                    "Match Received SKUs"
                ],
                "summary": "Match Multiple Received SKUs",
                "description": "This endpoint allows the user to bulk approve, deny, or associate received SKUs. In a single request, you can match up to 25 received SKUs from your sellers.\n\nThrough the `actionName` attribute you can select the operation you want to apply to the received SKU. \n\nActions include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `skuassociation`: associate the received SKU to an existing SKU. \n\n3. `productassociation`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU.\r\n\r\n## Permissions\r\n\r\nAny user or [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys) must have at least one of the appropriate [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3) to be able to successfully run this request. Otherwise they will receive a status code `403` error. These are the applicable resources for this endpoint:\r\n\r\n| **Product** | **Category** | **Resource** |\r\n| --------------- | ----------------- | ----------------- |\r\n| Suggestion | Suggestion Resource | **Main Access** |\r\n\r\nYou can [create a custom role](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#creating-a-role) with that resource or use one of the following [predefined roles](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy):\r\n\r\n| **Role** | **Resource** | \r\n| --------------- | ----------------- | \r\n| Unrestricted access to all components on the SKUS page received including page data viewing as well as ad approval actions. Learn more at [Skus Cataloging received](https://help.vtex.com/pt/turindo/sugerindo-e-a-provando-skus/). | Main Access |\r\n\r\n>❗ Assigning a [predefined role](https://help.vtex.com/en/tutorial/predefined-roles--jGDurZKJHvHJS13LnO7Dy) to users or application keys usually grants permission to multiple [License Manager resources](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3). If some of these permissions are not necessary, consider creating a custom role instead. For more information regarding security, see [Best practices for using application keys](https://help.vtex.com/en/tutorial/best-practices-application-keys--7b6nD1VMHa49aI5brlOvJm).\r\n\r\nTo learn more about machine authentication at VTEX, see [Authentication overview](https://developers.vtex.com/docs/guides/authentication).",
                "operationId": "MatchMultiple",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/accountName"
                    },
                    {
                        "$ref": "#/components/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/components/parameters/Accept"
                    },
                    {
                        "$ref": "#/components/parameters/actionName"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatchMultiple"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/responseMatchMultiple"
                                },
                                "example": [
                                    {
                                        "matchId": "06272023010821403",
                                        "matcherId": "vtex-matcher",
                                        "sellerId": "test858",
                                        "itemId": "81",
                                        "isSuccess": false
                                    },
                                    {
                                        "matchId": "12345678901234567",
                                        "matcherId": "example-matcher",
                                        "sellerId": "testseller123",
                                        "itemId": "42",
                                        "isSuccess": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "components": {
        "schemas": {
            "SaveautoapproveforaccountRequest": {
                "title": "SaveautoapproveforaccountRequest",
                "description": "Schema representing the request to configure automatic approval on or off for a marketplace account.",
                "required": [
                    "Enabled"
                ],
                "type": "object",
                "properties": {
                    "Enabled": {
                        "type": "boolean",
                        "description": "Insert `true` if you wish to activate the autoapprove rule for an entire marketplace account. Insert `false` if you wish to deactivate it. Be aware that once enabling the setting through this request, all received SKUs will be automatically approved on your store, regardless of the seller, or the Matcher Score.",
                        "example": true
                    }
                },
                "example": {
                    "Enabled": true
                }
            },
            "SaveaccountconfigRequest": {
                "title": "SaveaccountconfigRequest",
                "description": "Information required to configure or update the SKU approval matcher.",
                "required": [
                    "Score",
                    "Matchers",
                    "SpecificationsMapping",
                    "MatchFlux"
                ],
                "type": "object",
                "properties": {
                    "Score": {
                        "$ref": "#/components/schemas/Score"
                    },
                    "Matchers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Matcher"
                        },
                        "description": "Matchers for approving and rejecting SKUs received from sellers."
                    },
                    "SpecificationsMapping": {
                        "required": [
                            "SellerId",
                            "Mapping"
                        ],
                        "type": "array",
                        "description": "This attribute maps product and SKU specifications.",
                        "items": {
                            "description": "Specification mapping for a product or SKU.",
                            "type": "object",
                            "properties": {
                                "SellerId": {
                                    "type": "string",
                                    "description": "Seller Id.",
                                    "example": "seller1"
                                },
                                "Mapping": {
                                    "type": "object",
                                    "description": "Characteristics of the product to be mapped.",
                                    "properties": {
                                        "Choose voltage": {
                                            "type": "string",
                                            "description": "Product voltage.",
                                            "example": "120V"
                                        },
                                        "Choose size": {
                                            "type": "string",
                                            "description": "Product size.",
                                            "example": "Medium"
                                        },
                                        "Choose volume": {
                                            "type": "string",
                                            "description": "Product volume.",
                                            "example": "500ml"
                                        },
                                        "Choose type": {
                                            "type": "string",
                                            "description": "Product type.",
                                            "example": "Electronic"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "MatchFlux": {
                        "type": "string",
                        "description": "This field determines the type of approval configuration applied to SKUs received  from a seller. The possible values include: \n\n- `default` where the Matcher reviews the SKU, and approves it based on its score \n\n- `manual` for manual approvals through the Received SKU UI or Match API \n\n- `autoApprove` for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.",
                        "default": "autoApprove",
                        "example": "default"
                    }
                },
                "example": {
                    "Score": {
                        "Approve": 80,
                        "Reject": 30
                    },
                    "Matchers": [
                        {
                            "MatcherId": "vtex-matcher",
                            "hook-base-address": "http://simple-suggestion-matcher.vtex.com.br",
                            "IsActive": true,
                            "UpdatesNotificationEndpoint": null,
                            "Description": null
                        }
                    ],
                    "SpecificationsMapping": [],
                    "MatchFlux": "autoApprove"
                }
            },
            "Score": {
                "title": "Score",
                "description": "Matcher rates received SKUs by comparing the data sent by sellers to existing fields in the marketplace. The calculation of these scores determines whether the product has been: `Approved` or `Denied`.",
                "required": [
                    "Approve",
                    "Reject"
                ],
                "type": "object",
                "properties": {
                    "Approve": {
                        "type": "integer",
                        "description": "Insert in this field the desired minimum score to approve SKUs. If this field is set as 99, it means all approvals will be made manually.",
                        "example": 80
                    },
                    "Reject": {
                        "type": "integer",
                        "description": "Insert in this field the desired maximum score to reject SKUs.",
                        "example": 30
                    }
                }
            },
            "Matcher": {
                "title": "Matcher",
                "description": "Represents the configuration of a Matcher, responsible for reviewing and approving SKUs. The Matcher can be the VTEX Matcher or an external matcher developed by partners.",
                "required": [
                    "MatcherId",
                    "hook-base-address",
                    "IsActive",
                    "UpdatesNotificationEndpoint"
                ],
                "type": "object",
                "properties": {
                    "MatcherId": {
                        "type": "string",
                        "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                        "example": "vtex-matcher"
                    },
                    "hook-base-address": {
                        "type": "string",
                        "description": "The chosen Matcher's url. It is the endpoint that the Received SKUs module calls, to send new suggestions for the Matcher's review.",
                        "example": "http://simple-suggestion-matcher.vtex.com.br"
                    },
                    "IsActive": {
                        "type": "boolean",
                        "description": "Whether the matcher is active in the account (`true`), or not (`false`).",
                        "example": true
                    },
                    "UpdatesNotificationEndpoint": {
                        "type": "string",
                        "description": "The Received SKUs module uses this endpoint to send updates about a suggestion, to the chosen Matcher.",
                        "nullable": true,
                        "example": null
                    },
                    "Description": {
                        "type": "string",
                        "description": "Insert in this field any notes about the approval. This field is optional.",
                        "nullable": true,
                        "example": null
                    }
                }
            },
            "responseGetAccountsMatcherSettings": {
                "title": "GetAccountsMatcherSettings",
                "description": "Response from Get Account's Matcher Settings endpoint with information about current matcher score setting, rules, spec mapping, and matchFlux.",
                "type": "object",
                "properties": {
                    "score": {
                        "description": "[Matcher](https://help.vtex.com/pt/tutorial/entendendo-a-pontuacao-do-vtex-matcher--tutorials_424) rates received SKUs by comparing the data sent by sellers to existing fields in the marketplace. The calculation of these scores determines whether the product has been: `Approved`, `Pending` or `Denied`.",
                        "type": "object",
                        "properties": {
                            "approve": {
                                "type": "integer",
                                "description": "Minimum approval score set by the marketplace.",
                                "example": 80
                            },
                            "pending": {
                                "type": "integer",
                                "description": "Minimum value for the ad to be pending.",
                                "example": 31
                            },
                            "reject": {
                                "type": "integer",
                                "description": "Bounce score set by marketplace.",
                                "example": 30
                            }
                        }
                    },
                    "matchers": {
                        "description": "Array of objects that presents a list of matchers configured in the marketplace. If the marketplace has more than one matcher configured in the account, an array will be displayed for each matcher.\n\n By default, the VTEX Matcher is set up automatically in VTEX account.",
                        "type": "array",
                        "items": {
                            "description": "Matcher specifications.",
                            "type": "object",
                            "properties": {
                                "matcherId": {
                                    "type": "string",
                                    "description": "The Matcher Id."
                                },
                                "hook-base-address": {
                                    "type": "string",
                                    "description": "The base address of the Matcher hook."
                                },
                                "isActive": {
                                    "type": "boolean",
                                    "description": "Indicates if Matcher is active or not. `TRUE` = Matcher is active or `FALSE` = Matcher is inactive.",
                                    "example": true
                                }
                            }
                        }
                    },
                    "rules": {
                        "description": "Arrays object that contains the rules defined for product approval.",
                        "type": "object",
                        "properties": {
                            "item": {
                                "type": "array",
                                "description": "A list of rules for items."
                            },
                            "product": {
                                "type": "array",
                                "description": "A list of rules for products."
                            }
                        }
                    },
                    "specificationsMapping": {
                        "type": "array",
                        "description": "This field will show a list of which product specs and SKU are configured to be mapped."
                    },
                    "matchFlux": {
                        "type": "string",
                        "description": "This field shows what type of approval setting is being applied to SKUs received from a seller. \n\nPossible values include: \n\n-`default`: where Matcher reviews the SKU and approves it based on its score. \n\n-`manual`: for manual approvals via incoming SKU UI or mailing API. \n\n-`autoApprove`: so that every SKU received from a given seller is automatically approved, regardless of its Matcher Score."
                    }
                }
            },
            "SaveautoapproveforaccountsellerRequest": {
                "title": "SaveautoapproveforaccountsellerRequest",
                "description": "Request object for saving autoapprove settings for a specific seller account.",
                "required": [
                    "Enabled"
                ],
                "type": "object",
                "properties": {
                    "Enabled": {
                        "type": "boolean",
                        "description": "Insert `true` if you wish to activate the autoapprove rule for that specific seller account. Insert `false` if you wish to deactivate it. Be aware that once enabling the setting through this request, all SKUs received from this seller will be automatically approved on your store regardless of the Matcher Score.",
                        "example": true
                    }
                }
            },
            "saveautoapproveforaccountsellerResponse": {
                "title": "SaveautoapproveforaccountsellerResponse",
                "description": "Response object for saving autoapprove settings for a specific seller account.",
                "type": "object",
                "properties": {
                    "Enabled": {
                        "type": "boolean",
                        "description": "The response returns `true` when the autoApprove rule was activated for the seller whose id was inserted in the call and `false` when the rule was deactivated."
                    }
                }
            },
            "PutselleraccountconfigRequest": {
                "title": "PutselleraccountconfigRequest",
                "description": "Request object for updating configuration settings for a specific seller account.",
                "required": [
                    "sellerId",
                    "mapping",
                    "matchFlux"
                ],
                "type": "object",
                "properties": {
                    "sellerId": {
                        "type": "string",
                        "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                        "example": "seller123"
                    },
                    "mapping": {
                        "type": "object",
                        "description": "Mapping of SKU and product Specifications. This object should be sent in the following format for all fields you wish to map:\n\n{specificationName}:{specificationValue},\n\nExample:\n\nChoose voltage: Voltage,\n\nChoose size: Size.",
                        "nullable": true,
                        "example": {
                            "Choose voltage": "Voltage",
                            "Choose size": "Size",
                            "Choose volume": "Volume",
                            "Choose type": "Type"
                        }
                    },
                    "matchFlux": {
                        "type": "string",
                        "description": "This field determines the type of approval configuration applied to SKUs received  from a seller. The possible values include: \n\n- `default` where the Matcher reviews the SKU, and approves it based on its score \n\n- `manual` for manual approvals through the Received SKU UI or Match API \n\n- `autoApprove` for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.",
                        "example": "autoApprove"
                    }
                }
            },
            "SaveSuggestionRequest": {
                "title": "SaveSuggestionRequest",
                "description": "Request object for saving a product suggestion.",
                "required": [
                    "ProductName",
                    "ProductId",
                    "ProductDescription",
                    "BrandName",
                    "SkuName",
                    "SellerId",
                    "Height",
                    "Width",
                    "Length",
                    "Weight",
                    "Updated",
                    "RefId",
                    "CategoryFullPath",
                    "Images",
                    "EAN",
                    "AvailableQuantity",
                    "Pricing"
                ],
                "type": "object",
                "properties": {
                    "ProductName": {
                        "type": "string",
                        "description": "Name of the suggested product. This field has a limit of 150 characters.",
                        "example": "productexample"
                    },
                    "ProductId": {
                        "type": "string",
                        "description": "Product ID in seller's account.",
                        "example": "1234"
                    },
                    "ProductDescription": {
                        "type": "string",
                        "description": "Product Description containing the main information about the product (not the SKU).",
                        "example":"descriptionexample"
                    },
                    "BrandName": {
                        "type": "string",
                        "description": "Name of the brand to which this SKU belongs. It must match the brand created in the marketplace.",
                        "example":"brandexample"
                    },
                    "SkuName": {
                        "type": "string",
                        "description": "Name of the suggested SKU.",
                        "example":"tshirt-example"
                    },
                    "SellerId": {
                        "type": "string",
                        "description": "ID of the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                        "example": "1"
                    },
                    "Height": {
                        "type": "integer",
                        "description": "Height of the SKU.",
                        "example": 10
                    },
                    "Width": {
                        "type": "integer",
                        "description": "Width of the SKU.",
                        "example": 10
                    },
                    "Length": {
                        "type": "integer",
                        "description": "Length of the SKU.",
                        "example": 10
                    },
                    "Weight": {
                        "type": "integer",
                        "description": "Weight of the SKU in grams.",
                        "example": 100
                    },
                    "RefId": {
                        "type": "string",
                        "description": "SKU reference code. Mandotory if the EAN is not informed.",
                        "example": "REF10"
                    },
                    "EAN": {
                        "type": "string",
                        "description": "SKU reference code. Mandatory if the RefId is not informed.",
                        "example": "EAN10"
                    },
                    "SellerStockKeepingUnitId": {
                        "type": "integer",
                        "description": "ID of the SKU registered in the seller.",
                        "example": 123
                    },
                    "CategoryFullPath": {
                        "type": "string",
                        "description": "Full path to the SKU's category. It should be written as {department}/{category}. For example: if the department is **Appliances** and the category is **Oven**, the full path should be 'Appliances/Oven'.",
                        "example":"clothes/tshits"
                    },
                    "SkuSpecifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SkuSpecification"
                        },
                        "description": "Array containing the names and values of the SKU specifications."
                    },
                    "ProductSpecifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductSpecification"
                        },
                        "description": "Array containing the names and values of the product specifications."
                    },
                    "Images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Image"
                        },
                        "description": "Array containing the URLs and names the SKU images."
                    },
                    "MeasurementUnit": {
                        "type": "string",
                        "description": "Measurement unit that should be used for this SKU. If this information doesn't apply, you should use the default value `un`.",
                        "example":"un"
                    },
                    "UnitMultiplier": {
                        "type": "integer",
                        "description": "Unit multiplier for this SKU. If this information doesn't apply, you should use the default value `1`.",
                        "example": 1
                    },
                    "AvailableQuantity": {
                        "type": "integer",
                        "description": "Quantity of product available.",
                        "example": 100
                    },
                    "Pricing": {
                        "type": "object",
                        "properties": {
                            "Currency": {
                                "type": "string",
                                "description": "The currency in which the pricing information is provided.",
                                "example":"BRL"
                            },
                            "SalePrice": {
                                "type": "integer",
                                "description": "The sale price of the item, represented as an integer.",
                                "example": 399
                            },
                            "CurrencySymbol": {
                                "type": "string",
                                "description": "The symbol representing the currency used in the pricing.",
                                "example": "R$"
                            }
                        },
                        "description": "Pricing information for an item."
                    }
                },
                "example": {
                    "ProductId": "321",
                    "ProductName": "Product sample",
                    "NameComplete": "My complete product name?",
                    "ProductDescription": "sample",
                    "BrandName": "Brand 1",
                    "SkuName": "Sku sample",
                    "SellerId": "123",
                    "Height": 1,
                    "Width": 1,
                    "Length": 1,
                    "Weight": 1,
                    "Updated": null,
                    "RefId": "REFID123",
                    "SellerStockKeepingUnitId": 567,
                    "CategoryFullPath": "Category 1",
                    "Images": [
                        {
                            "imageName": "Principal",
                            "imageUrl": "https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg"
                        }
                    ],
                    "ProductSpecifications": [
                        {
                            "fieldName": "prodspec1",
                            "fieldValues": [
                                "value1",
                                "value2"
                            ]
                        }
                    ],
                    "SkuSpecifications": [
                        {
                            "fieldName": "skuspec1",
                            "fieldValues": [
                                "value1",
                                "value2"
                            ]
                        }
                    ],
                    "EAN": "EAN123",
                    "MeasurementUnit": "un",
                    "UnitMultiplier": 1,
                    "AvailableQuantity": 111,
                    "Pricing": {
                        "Currency": "BRL",
                        "SalePrice": 399,
                        "CurrencySymbol": "R$"
                    }
                }
            },
            "SkuSpecification": {
                "title": "skuSpecification",
                "description": "Array representing the specifications of a SKU, including the field name and possible field values.",
                "type": "object",
                "properties": {
                    "fieldName": {
                        "type": "string",
                        "description": "Name of the SKU specification field. Example: 'Color'.",
                        "example": "color"
                    },
                    "fieldValues": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Value of the SKU specification field.",
                            "example": "Red"
                        }
                    }
                },
                "example": {
                    "fieldName": "Color",
                    "fieldValues": [
                        "Red",
                        "Green"
                    ]
                }
            },
            "ProductSpecification": {
                "title": "Product Specification",
                "description": "Object representing a product specification, including the field name and possible field values.",
                "type": "object",
                "properties": {
                    "fieldName": {
                        "type": "string",
                        "description": "Name of the product specification field.",
                        "example": "Fabric type"
                    },
                    "fieldValues": {
                        "type": "array",
                        "description": "Array with values of the product specification field.",
                        "items": {
                            "type": "string",
                            "example": "Cotton",
                            "description": "Value of the product specification field."
                        }
                    }
                },
                "example": {
                    "fieldName": "Fabric Type",
                    "fieldValues": [
                        "Cotton",
                        "Silk"
                    ]
                }
            },
            "Image": {
                "title": "Image",
                "description": "Object representing an SKU image, including the image name and URL.",
                "required": [
                    "imageName",
                    "imageUrl"],
                "type": "object",
                "properties": {
                    "imageName": {
                        "type": "string",
                        "description": "Name of the SKU image.",
                        "example":"Principal"
                    },
                    "imageUrl": {
                        "type": "string",
                        "description": "URL of the SKU image. The image must be sent through the `https` protocol; otherwise, it will not be rendered in VTEX Admin.",
                        "example": "https://imageurl.example"
                    }
                },
                "example": {
                    "imageName": "Principal",
                    "imageUrl": "https://i.pinimg.com/originals/2d/96/4a/2d964a6bf37d9224d0615dc85fccdd62.jpg"
                }
            },
            "MatchRequest": {
                "description": "Request object for matching SKUs received from a seller.",
                "required": [
                    "matcherId",
                    "score",
                    "matchType"
                ],
                "type": "object",
                "properties": {
                    "matcherId": {
                        "type": "string",
                        "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                        "example": "vtex-matcher"
                    },
                    "matchType": {
                        "title": "Match Type",
                        "type": "string",
                        "description": "Define the action you want to apply to each SKU. Values include: \n\n1. `newproduct`: match the SKU as a new product. \n\n2. `itemMatch`: associate the received SKU to an existing SKU. \n\n3. `productMatch`: associate the received SKU to an existing product. \n\n4. `deny`: deny the received SKU. \n\n5. `pending`: the received SKU requires attention. \n\n6. `incomplete`: the received SKU is lacking information to be matched. \n\n7. `insufficientScore`: the score given by the Matcher to this received SKU doesn't qualify it to be matched. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                        "example": "itemMatch"
                    },
                    "score": {
                        "type": "string",
                        "description": "Matcher rates received SKUs by correlating the data sent by sellers, to existing fields in the marketplace. The calculation of these scores determines whether the product has been: \n\n`Approved`: score equal to or greater than 80 points. \n\n`Pending`: from 31 to 79 points.\n\n`Denied`: from 0 to 30 points. \n\nNote that  if the autoApprove setting is enabled, the SKUs will be approved, regardless of the Score.",
                        "example": "80"
                    },
                    "skuRef": {
                        "type": "string",
                        "nullable": true,
                        "description": "In `itemMatch` actions, fill in this field on your request to match the item to an existing SKU in the marketplace.",
                        "example": "null"
                    },
                    "productRef": {
                        "type": "string",
                        "description": "In `productMatch` actions, fill in this field on your request to match the item to an existing product in the marketplace.",
                        "example": "null",
                        "nullable": true
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "sku": {
                        "$ref": "#/components/schemas/Sku"
                    }
                },
                "example": {
                    "matcherId": "{{matcherid}}",
                    "score": "{{score}} (must be decimal)",
                    "matchType": "itemMatch",
                    "skuRef": "{{skuid}}(should be specifed when match is a sku match)",
                    "productRef": "{{productRef}}(should be specified when match is a product match)",
                    "product": {
                        "name": "Produto exemplo",
                        "description": "Descricao exemplo",
                        "categoryId": 12,
                        "brandId": 1234567,
                        "specifications": null
                    },
                    "sku": {
                        "name": "Sku exemplo",
                        "eans": [
                            "12345678901213"
                        ],
                        "refId": null,
                        "height": 1,
                        "width": 1,
                        "length": 1,
                        "weight": 1,
                        "images": [
                            {
                                "imagem1.jpg": "imageurl.example"
                            }
                        ],
                        "unitMultiplier": 1,
                        "measurementUnit": "un",
                        "specifications": {
                            "Embalagem": "3 kg"
                        }
                    }
                }
            },
            "Product": {
                "title": "Product",
                "description": "Object representing details of a product to be matched.",
                "required": [
                    "name",
                    "description",
                    "categoryId",
                    "brandId",
                    "specifications"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the product that will be matched.",
                        "example": "Book"
                    },
                    "description": {
                        "type": "string",
                        "description": "Product's description.",
                        "example": "Description of the product, how it will appear on the marketplace."
                    },
                    "categoryId": {
                        "type": "integer",
                        "description": "Marketplace's Category ID that the product belongs to, configured in the Catalog. It should be the category chosen for the received SKU to be matched with. The `categoryId` is already mapped through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). You can choose to keep the same suggested `categoryID`, or overwrite it with another value in this request. This field is nulled when the inserted value is 0.",
                        "example": 12
                    },
                    "brandId": {
                        "type": "integer",
                        "description": "Marketplace's Brand ID that the product belongs to, configured in the Catalog. It should be the brand chosen for the received SKU to be matched with. The brandId is already mapped through the Get Suggestions API. This field is nulled when the inserted value is 0.",
                        "example": 1234567
                    },
                    "specifications": {
                        "type": "string",
                        "description": "This field is optional. Add here any product specifications or details.",
                        "example": "null",
                        "nullable": true
                    }
                }
            },
            "Sku": {
                "title": "SKU",
                "description": "Object representing details of an SKU to be matched.",
                "required": [
                    "name",
                    "eans",
                    "refId",
                    "height",
                    "width",
                    "length",
                    "weight",
                    "images",
                    "unitMultiplier",
                    "measurementUnit",
                    "specifications"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name or title of the SKU.",
                        "example": "nameSKU"
                    },
                    "eans": {
                        "description": "Array of EAN codes associated with the SKU. It can be used as a unique identifier for the product.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "SKU reference code.",
                            "example":"12345678901213",
                            "nullable": true
                        },
                        "example": [
                            "12345678901213"
                        ]
                    },
                    "refId": {
                        "type": "string",
                        "description": "SKU reference code.",
                        "example": "1234",
                        "nullable": true
                    },
                    "height": {
                        "type": "integer",
                        "description": "Height of the SKU.",
                        "example": 10
                    },
                    "width": {
                        "type": "integer",
                        "description": "Width of the SKU.",
                        "example": 20
                    },
                    "length": {
                        "type": "integer",
                        "description": "Length of the SKU.",
                        "example": 10
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Weight of the SKU.",
                        "example": 100
                    },
                    "images": {
                        "$ref": "#/components/schemas/Images"
                    },
                    "unitMultiplier": {
                        "type": "integer",
                        "description": "Unit multiplier for this SKU. If this information doesn't apply, you should use the default value 1.",
                        "example": 1
                    },
                    "measurementUnit": {
                        "type": "string",
                        "description": "Measurement unit that should be used for this SKU. If this information doesn't apply, you should use the default value un.",
                        "example": "un",
                        "nullable": true
                    },
                    "specifications": {
                        "$ref": "#/components/schemas/Specifications"
                    }
                },
                "example": {
                    "name": "Sku exemplo",
                    "eans": [
                        "12345678901213"
                    ],
                    "refId": null,
                    "height": 1,
                    "width": 1,
                    "length": 1,
                    "weight": 1,
                    "images": [
                        {
                            "imagem1.jpg": "imageurl.example"
                        }
                    ],
                    "unitMultiplier": 1,
                    "measurementUnit": "un",
                    "specifications": {
                        "Embalagem": "3 kg"
                    }
                }
            },
            "Images": {
                "title": "Images",
                "description": "Array representing the images associated with the SKU.",
                "required": [
                    "imagem1.jpg"
                ],
                "type": "array",
                "properties": {
                    "imagem1.jpg": {
                        "type": "string",
                        "description": "Array containing the URLs of the SKU's images.  The image must be sent through `https` protocol, otherwise it will not be rendered in VTEX Admin.",
                        "example": "https://imageurl.example"
                    }
                },
                "example": [
                    {
                        "imagem1.jpg": "https://imageurl.example"
                    }
                ]
            },
            "Specifications": {
                "title": "Specifications",
                "description": "Object representing the specifications of a product or SKU.",
                "required": [
                    "Embalagem"
                ],
                "type": "object",
                "properties": {
                    "Embalagem": {
                        "type": "string",
                        "description": "Packaging specifications. Should include package's weight.",
                        "example":"3kg"
                    }
                },
                "example": {
                    "Embalagem": "3 kg"
                }
            },
            "MatchMultiple": {
                "title": "MatchMultiple",
                "description": "Array of objects representing multiple SKU matches.",
                "type": "array",
                "items": {
                    "type": "object",
                    "description": "Object representing an individual SKU match within the array.",
                    "required": [
                        "itemId",
                        "versionId",
                        "matchId",
                        "matcherId",
                        "categoryId",
                        "sellerId"
                    ],
                    "properties": {
                        "itemId": {
                            "type": "string",
                            "description": "This field can be used to link any string that identifies that SKU. Its most common use is the seller's SKU ID.",
                            "example": "1234567"
                        },
                        "versionId": {
                            "type": "string",
                            "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the `versionId` associated to the version you choose to search for. You can get this field's value through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). through the `latestVersionId` field.",
                            "example": "v.2"
                        },
                        "matchId": {
                            "type": "string",
                            "description": "Whenever an SKU suggestion is matched, it is associated to a unique ID. Fill in this field with the `matchId` you wish to filter by. The `matchId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                            "example": "vtex-matcher"
                        },
                        "matcherId": {
                            "type": "string",
                            "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                            "example": "vtex-matcher"
                        },
                        "categoryId": {
                            "type": "integer",
                            "nullable": true,
                            "description": "Marketplace's Category ID that the product belongs to, configured in the Catalog. It should be the category chosen for the received SKU to be matched with. The `categoryId` is already mapped through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). You can choose to keep the same suggested `categoryID`, or overwrite it with another value in this request. This field is nulled when the inserted value is 0.",
                            "example": 12
                        },
                        "brandId": {
                            "type": "integer",
                            "nullable": true,
                            "description": "Marketplace's Brand ID that the product belongs to, configured in the Catalog. It should be the brand chosen for the received SKU to be matched with. The `brandId` is already mapped through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). This field is nulled when the inserted value is 0, and is mandatory for the `newproduct` action.",
                            "example": 1234567
                        },
                        "skuRef": {
                            "type": "string",
                            "nullable": true,
                            "description": "Fill in this field on your request when the matched item is an SKU. This field is mandatory for the `skuassociation` action.",
                            "example": "123 sku ref"
                        },
                        "productRef": {
                            "type": "string",
                            "description": "Fill in this field on your request when the matched item is a product. This field is mandatory for the `productassociation` action.",
                            "example": "123 product ref",
                            "nullable": true
                        },
                        "sellerId": {
                            "type": "string",
                            "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                            "example": "seller123"
                        }
                    }
                }
            },
            "responseMatchMultiple": {
                "title": "responseMatchMultiple",
                "description": "Array of objects representing the response for multiple SKU matches.",
                "type": "array",
                "items": {
                    "type": "object",
                    "description": "Object representing the response for an individual SKU match within the array.",
                    "properties": {
                        "matchId": {
                            "type": "string",
                            "description": "Unique identifier associated with the SKU match.",
                            "example": "06272023010821403"
                        },
                        "matcherId": {
                            "type": "string",
                            "description": "Identifies the matching entity. It can be either VTEX's matcher or an external matcher developed by partners.",
                            "example": "vtex-matcher"
                        },
                        "sellerId": {
                            "type": "string",
                            "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.",
                            "example": "melissatestbug858"
                        },
                        "itemId": {
                            "type": "string",
                            "description": "This field can be used to link any string that identifies that SKU. Its most common use is the seller's SKU ID.",
                            "example": "81"
                        },
                        "isSuccess": {
                            "type": "boolean",
                            "description": "Indicates whether the SKU match operation was successful `true` or `false`.",
                            "example": false
                        }
                    }
                }
            },
            "responseGetSellersApprovalSettings": {
                "title": "GetSellersApprovalSettings",
                "description": "Response object containing settings related to sellers' approval configurations.",
                "type": "object",
                "properties": {
                    "sellerId": {
                        "type": "string",
                        "description": "A string that identifies the seller in the marketplace.",
                        "example": "sellerexample"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "Marketplace’s account ID.",
                        "example": "d74daf1f-355a-4463-bdc7-ae8b045311c"
                    },
                    "accountName": {
                        "type": "string",
                        "description": "Marketplace’s account name.",
                        "example": "marketplaceexample"
                    },
                    "mapping": {
                        "type": "object",
                        "default": {},
                        "description": "SKU Mapping Information and Product [Specifications](https://developers.vtex.com/docs/guides/catalog-overview#configuring-initial-settings-mandatory).\n\n The properties included within `mapping` can change according to the product type, the `color` specification and its variations described in this example are just one of the possibilities. The values received in this call's payload for those properties depend on the seller's catalog architecture, and are not default. \n\nSee some examples of specifications: \n\n- Voltage \n\n- Power \n\n- Size \n\n- Height \n\n- Width.",
                        "properties": {
                            "defaultColor": {
                                "type": "string",
                                "description": "The field will indicate the default color predefined by the seller in cases where specific product colors are not defined. This field is neither mandatory nor default, it will depend on the architecture of the seller's catalog. ",
                                "example": "white /black"
                            },
                            "searchColor": {
                                "type": "string",
                                "description": "Field that provides the available colors to filter searches. This field is neither mandatory nor default, it will depend on the architecture of the seller's catalog.",
                                "example": "color1, color2"
                            },
                            "color1": {
                                "type": "string",
                                "description": "`color1` available for search filter. This field is neither mandatory nor default, it will depend on the architecture of the seller's catalog.",
                                "example": "black"
                            },
                            "color2": {
                                "type": "string",
                                "description": "`color2` available for search filter. This field is neither mandatory nor default, it will depend on the architecture of the seller's catalog.",
                                "example": "white"
                            },
                            "color": {
                                "type": "string",
                                "description": "Indicates the predominant or main color of the product. This field is neither mandatory nor default, it will depend on the architecture of the seller's catalog.",
                                "example": "black"
                            },
                            "size": {
                                "type": "string",
                                "description": "Indicates the size of the product.This field is neither mandatory nor default, it will depend on the architecture of the seller's catalog.",
                                "example": "EUR44"
                            }
                        }
                    },
                    "matchFlux": {
                        "type": "string",
                        "description": "This field determines the type of [approval configuration applied to SKUs received from a seller](https://developers.vtex.com/docs/api-reference/marketplace-apis-suggestions#put-/suggestions/configuration/seller/-sellerId-). \n\nThe possible values include:  \n\n-`default`, where the Matcher reviews the SKU, and approves it based on its score. \n\n-`manual`, for manual approvals through the Received SKU UI and Match API. \n\n-`autoApprove`, for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.",
                        "example": "default"
                    }
                }
            },
            "responseautoApproveStatusAccountSettings": {
                "description": "Response object indicating whether the auto-approve setting is active for a given seller.",
                "type": "object",
                "properties": {
                    "Enabled": {
                        "type": "boolean",
                        "description": "If the auto-approve setting is active for a given seller (`true`) or not (`false`)."
                    }
                }
            },
            "responseActivateautoApprove": {
                "description": "Response object indicating whether the auto-approve setting is successfully activated or deactivated for a given seller.",
                "type": "object",
                "properties": {
                    "Enabled": {
                        "type": "boolean",
                        "description": "If the auto-approve setting is active (`true`) or not (`false`)."
                    }
                }
            },
            "responseGetAccountsApprovalSettings": {
                "description": "Response containing information about matcher scores, matchers, rules, specifications mapping, and match flux configuration for approving SKUs received from sellers.",
                "type": "object",
                "properties": {
                    "Score": {
                        "type": "object",
                        "description": "Matcher scores for approving and rejecting SKUs received from sellers."
                    },
                    "Matchers": {
                        "type": "array",
                        "description": "All Matchers configured on the marketplace, and their respective details."
                    },
                    "Rules": {
                        "type": "object",
                        "description": "Items and products."
                    },
                    "SpecificationsMapping": {
                        "type": "array",
                        "description": "Mapping of product and SKU specifications, per seller."
                    },
                    "MatchFlux": {
                        "type": "string",
                        "description": "This field determines the type of approval configuration applied to SKUs received from a seller."
                    }
                }
            },
            "responseSaveAccountsApprovalSettings": {
                "description": "This response provides information about the saved approval settings for a marketplace account.",
                "type": "object",
                "properties": {
                    "Score": {
                        "type": "object",
                        "description": "[Matcher's rates](https://help.vtex.com/en/tutorial/understanding-vtex-matcher-scoring) to approve or reject [received SKUs](https://help.vtex.com/en/tutorial/cataloging-received-skus--tutorials_396) sent by sellers.",
                        "properties": {
                            "Approve": {
                                "type": "integer",
                                "description": "Score to approve SKUs sent by sellers.",
                                "example": 80
                            },
                            "Reject": {
                                "type": "integer",
                                "description": "Score to reject SKUs sent by sellers.",
                                "example": 30
                            }
                        },
                        "example": {
                            "Approve": 80,
                            "Reject": 30
                        }
                    },
                    "Matchers": {
                        "type": "array",
                        "description": "[Matchers](https://help.vtex.com/en/tutorial/understanding-vtex-matcher-scoring) configurations for approving and rejecting [received SKUs](https://help.vtex.com/en/tutorial/cataloging-received-skus--tutorials_396) sent by sellers.",
                        "properties": {
                            "MatcherId": {
                                "type": "string",
                                "description": "Identifies the matching entity. It can be either [VTEX's matcher](https://help.vtex.com/en/tutorial/understanding-vtex-matcher-scoring), or an external matcher."
                            },
                            "hook-base-address": {
                                "type": "string",
                                "description": "The given Matcher's URL."
                            },
                            "IsActive": {
                                "type": "boolean",
                                "description": "Whether the matcher is active in the account (`true`), or not (`false`)."
                            },
                            "UpdatesNotificationEndpoint": {
                                "type": "string",
                                "description": "The [received SKUs](https://help.vtex.com/en/tutorial/cataloging-received-skus--tutorials_396) module calls this endpoint for matcher's suggestions updates."
                            },
                            "Description": {
                                "type": "string",
                                "description": "The note inserted on the request body."
                            }
                        }
                    },
                    "Rules": {
                        "type": "object",
                        "description": "Items and products that belong to sellers.",
                        "properties": {
                            "Item": {
                                "type": "array",
                                "description": "SKUs' ID.",
                                "items": {
                                    "type": "integer",
                                    "description": "SKU ID."
                                }
                            },
                            "Product": {
                                "type": "array",
                                "description": "List of product names.",
                                "items": {
                                    "type": "string",
                                    "description": "Product name."
                                }
                            }
                        }
                    },
                    "SpecificationsMapping": {
                        "type": "array",
                        "description": "This attribute maps product and SKU's specifications between the marketplace and the seller.",
                        "items": {
                            "description": "An object representing the mapping of product and SKU specifications.",
                            "type": "object",
                            "properties": {
                                "SellerId": {
                                    "type": "string",
                                    "description": "The Seller ID.",
                                    "example": "sellerexample"
                                },
                                "Mapping": {
                                    "type": "object",
                                    "description": "The attributes and values mapped between the marketplace and the seller.",
                                    "properties": {
                                        "Size": {
                                            "type": "string",
                                            "description": "The size of the product.",
                                            "example": "Large-L"
                                        }
                                    }
                                }
                            },
                            "MatchFlux": {
                                "type": "string",
                                "description": "Type of approval configuration that apply to received SKUs sent by sellers. The possible values are: \n\n`default`: the matcher approves the SKU. \n\n`manual`: manual SKU's approvals. \n\n`AutoApprove`: automatic SKU's approvals."
                            }
                        }
                    }
                }
            },
            "responseGetAllversion": {
                "type": "array",
                "description": "An array of objects representing versions.",
                "items": {
                    "type": "object",
                    "description": "An individual version object.",
                    "properties": {
                        "VersionId": {
                            "type": "string",
                            "description": "The unique identifier for the version.",
                            "example": "09142023011902452"
                        },
                        "CreationDate": {
                            "type": "string",
                            "description": "The date and time when the version was created.",
                            "example": "09/14/2023 01:19:02"
                        },
                        "IsLatest": {
                            "type": "boolean",
                            "description": "Indicates whether this version is the latest.",
                            "example": true
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "appKey": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppKey"
            },
            "appToken": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppToken"
            },
            "VtexIdclientAutCookie": {
                "type": "apiKey",
                "in": "header",
                "name": "VtexIdclientAutCookie",
                "description": "[User token](https://developers.vtex.com/docs/guides/api-authentication-using-user-tokens), valid for 24 hours."
            }
        },
        "parameters": {
            "actionName": {
                "name": "actionName",
                "in": "path",
                "description": "This field refers to the operation you choose to apply to received SKUs. Values include: newproduct, skuassociation, productassociation or deny.",
                "required": true,
                "style": "simple",
                "schema": {
                    "type": "string",
                    "example": "newprodcut"
                }
            },
            "q": {
                "name": "q",
                "in": "query",
                "description": "This field allows you to customize your search. You can fill in this query param if you want to narrow down your search using the available [filters on Received SKU modules](https://help.vtex.com/en/tutorial/sugerindo-e-aprovando-skus--tutorials_396?&utm_source=autocomplete#filtros).",
                "required": false,
                "style": "form",
                "explode": true,
                "schema": {
                    "type": "string",
                    "example": "Category"
                }
            },
            "type": {
                "name": "type",
                "in": "query",
                "description": "This field allows users to filter SKU suggestions, by searching only the new suggestions that were just sent, and suggestions that have already been sent, but were updated. Possible values for this field include `new` and `update`.",
                "required": false,
                "style": "form",
                "explode": true,
                "schema": {
                    "type": "string",
                    "example": "new"
                }
            },
            "seller": {
                "name": "seller",
                "in": "query",
                "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller so it can call this endpoint.",
                "required": false,
                "style": "form",
                "explode": true,
                "schema": {
                    "type": "string",
                    "example": "sellerexample"
                }
            },
            "status": {
                "name": "status",
                "in": "query",
                "description": "Narrow down you search, filtering by status. Values allowed on this field include: `accepted`, `pending` and `denied.`",
                "required": false,
                "style": "form",
                "explode": true,
                "schema": {
                    "type": "string",
                    "example": "accepted"
                }
            },
            "hasmapping": {
                "name": "hasmapping",
                "in": "query",
                "description": "This field allows you to filter SKUs that have mapping or not. Insert `true` to filter SKUs that have mapping, or `false` to retrieve SKUs that aren't mapped.",
                "required": false,
                "style": "form",
                "explode": true,
                "schema": {
                    "type": "string",
                    "example": "true"
                }
            },
            "matcherId": {
                "name": "matcherid",
                "in": "query",
                "description": "Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                "required": false,
                "style": "form",
                "explode": true,
                "schema": {
                    "type": "string",
                    "example": "vtex-matcher"
                }
            },
            "to": {
                "name": "_to",
                "in": "query",
                "description": "Define your pagination range, by adding the pagination ending value. Values should be bigger than 0, with a maximum of 50 records per page.",
                "required": false,
                "style": "form",
                "explode": true,
                "schema": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 50
                }
            },
            "from": {
                "name": "_from",
                "in": "query",
                "description": "Define your pagination range, by adding the pagination starting value. Values should be bigger than 0, with a maximum of 50 records per page.",
                "required": false,
                "style": "form",
                "explode": true,
                "schema": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                }
            },
            "sellerSkuId": {
                "name": "sellerSkuId",
                "in": "path",
                "description": "A string that identifies the SKU in the seller. This is the ID that the marketplace will use for future references to this SKU, such as price and inventory notifications.",
                "required": true,
                "style": "simple",
                "schema": {
                    "type": "string",
                    "example": "195"
                }
            },
            "matchId": {
                "name": "matchid",
                "in": "path",
                "description": "Whenever an SKU suggestion is matched, it is associated to a unique ID. Fill in this field with the matchId you wish to filter by. The `matchId`'s value can be obtained through the *[Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.",
                "required": true,
                "style": "simple",
                "schema": {
                    "type": "string",
                    "example": "43e"
                }
            },
            "version": {
                "name": "version",
                "in": "path",
                "description": "Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. This field is the `versionId` associated to the version you choose to search for. You can get this field's value through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion). through the `latestVersionId` field.",
                "required": true,
                "style": "simple",
                "schema": {
                    "type": "string",
                    "example": "09072021142808277"
                }
            },
            "sellerId": {
                "name": "sellerId",
                "in": "query",
                "description": "A string that identifies the seller in the marketplace. This ID must be created by the marketplace.",
                "required": true,
                "style": "form",
                "schema": {
                    "type": "string",
                    "example": "seller123"
                }
            },
            "accountName": {
                "name": "accountName",
                "in": "path",
                "required": true,
                "description": "Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.",
                "schema": {
                    "type": "string",
                    "example": "apiexamples"
                }
            },
            "Accept": {
                "name": "Accept",
                "in": "header",
                "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                "required": true,
                "style": "simple",
                "schema": {
                    "type": "string",
                    "default": "application/json"
                }
            },
            "Content-Type": {
                "name": "Content-Type",
                "in": "header",
                "description": "Describes the type of the content being sent.",
                "required": true,
                "style": "simple",
                "schema": {
                    "type": "string",
                    "default": "application/json"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Get Suggestions",
            "description": "Search and filter all suggestions using specific criteria."
        },
        {
            "name": "Manage Suggestions",
            "description": "Send or delete SKU suggestions from the seller to marketplace."
        },
        {
            "name": "Get Versions",
            "description": "Search and filter all versions of suggestions, using specific criteria."
        },
        {
            "name": "SKU Approval Settings"
        },
        {
            "name": "Match Received SKUs",
            "description": "Match SKU suggestions received in the marketplace."
        }
    ]
}