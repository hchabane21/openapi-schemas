extends: ["spectral:oas"]

rules:
  oas3-examples-value-or-externalValue: off
  oas3-unused-component: off
  operation-operationId: off
  e-mail-in-description:
    description: Should use email instead of e-mail in descriptions
    severity: warn
    given: "$..*[?(@property === 'description')]"	
    then:
      function: pattern
      functionOptions:
        notMatch: "\\be-mail\\b"

  should-include-operation-summary:
    description: Operation summary should be included
    severity: warn
    given: "$.paths.*[?( @property === 'get' || @property === 'put' || @property === 'post' || @property === 'delete' || @property === 'options' || @property === 'head' || @property === 'patch' || @property === 'trace' )]"
    then:
      - field: "summary"
        function: truthy        

  should-include-response-examples:
    description: At least one example should be included for each API response
    severity: warn
    given: "$.paths..responses.*.content.*"
    then:
      - field: "example"
        function: truthy

  should-include-response-schema:
    description: At least one example should be included for each API response
    severity: warn
    given: "$.paths..responses.*.content.*"
    then:
      - field: "schema"
        function: truthy

  must-end-descriptions-with-period:
    description: All descriptions must end with a period (`.`).
    severity: error
    given: "$..*[?(@property === 'description')]"
    then:
      function: pattern
      functionOptions:
        match: "^.*[.]$"
        
  should-write-in-sentence-case:
    description: All summaries and descriptions must use sentence case (start with a capital letter).
    severity: warn
    given: "$..*[?( @property === 'summary' || @property === 'description' )]"
    then:
      function: pattern
      functionOptions:
        match: "^[A-Z].*$"

  should-contain-$ref-response-request:
    description: "Use $ref to avoid repeating information about the request and response bodies."
    severity: warn
    given: "$.paths..(responses || requestBody).*.content.*.schema.*"
    then:
      function: "$ref"
      functionOptions:
        match: truthy
        
  should-contain-$ref-parameters:
    description: "Use $ref to avoid repeating information about the patameters."
    severity: warn
    given: "$.paths..parameters.*"
    then:
      function: "$ref"
      functionOptions:
        match: truthy

  no-empty-descriptions:
    description: No empty descriptions allowed.
    severity: error
    given: "$..*[?(@property === 'description')]"
    then:
      function: pattern
      functionOptions:
        notMatch: "^(?!\\s*$).+"
        
  avoid-empty-titles:
    description: There can be no empty titles. Removing this title field from the property solves this issue.
    severity: error
    given: "$..[?(@.title='')]~"
    then:
      function: pattern
      functionOptions:
        notMatch: "example"

  parameters-description:
    description: All parameters must be a description field.
    given: "$.paths.*.*.parameters[*]"
    then:
      field: "description"
      function: truthy

  request-properties-description:
    description: All request body properties must be a description field.
    given: "$.paths.*.*.requestBody.properties.*"
    then:
      field: "description"
      function: truthy
      
  response-properties-description:
    description: All response body properties must be a description field.
    given: "$.paths.*.*.responses.*.properties.*"
    then:
      field: "description"
      function: truthy

