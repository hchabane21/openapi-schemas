{
    "openapi": "3.0.0",
    "info": {
        "title": "Subscriptions API (v3)",
        "description": "\r\nA **Subscription** is a list of items (SKUs) tied to certain recurring purchase settings:\r\n\r\n- User profile\r\n- Address\r\n- Payment method\r\n- Frequency\r\n- Cycle\r\n\r\nOnce you have [configured subscriptions](https://help.vtex.com/tutorial/how-to-configure-subscriptions%20--1FA9dfE7vJqxBna9Nft5Sj) in your store, the Subscriptions API allows you to create, manage and monitor your customers' subscriptions.\r\n\r\n![image](https://user-images.githubusercontent.com/77292838/213024675-9407863b-0c55-4282-9442-306352716abe.png)\r\n\r\nTo read more about the Subscriptions feature, check our article [How Subscription works](https://help.vtex.com/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453).",
        "contact": {},
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://{accountName}.{environment}.com.br",
            "description": "VTEX server URL.",
            "variables": {
                "accountName": {
                    "description": "Name of the VTEX account. Used as part of the URL.",
                    "default": "apiexamples"
                },
                 "environment": {
                    "description": "Environment to use. Used as part of the URL.",
                    "enum": [
                        "vtexcommercestable"
                    ],
                    "default": "vtexcommercestable"
                }
            }
        }
    ],
    "paths": {
        "/api/rns/pub/cycles/{cycleId}": {
            "get": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Get cycle details",
                "description": "Retrieve a specific cycle by its ID.",
                "parameters": [
                    {
                        "name": "cycleId",
                        "in": "path",
                        "description": "ID from the desired cycle.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionCycleResponse"
                                },
                                "example": {
                                    "id": "A71E0E88D029445D23B978253F9364E6-20243107",
                                    "subscriptionId": "A71E0E88D029445D23B978253F9364E6",
                                    "workflowId": "73a385ff-b3dc-48c0-ab25-0f1cecc4be8a",
                                    "status": "SUCCESS",
                                    "customerEmail": "customer@email.com",
                                    "customerId": "94b0a774-09c7-43ee-91e2-e8fa6guad0ju",
                                    "date": "2024-07-30T09:04:59.7325176Z",
                                    "lastUpdate": "2024-07-31T09:06:05.6879323Z",
                                    "cycleCount": 1,
                                    "isInRetry": false,
                                    "message": null,
                                    "friendlyMessage": null,
                                    "plan": {
                                        "id": "vtex.subscription.tshirt-collection",
                                        "frequency": {
                                            "periodicity": "WEEKLY",
                                            "interval": 3
                                        },
                                        "validity": {
                                            "begin": "2024-04-11T11:04:24.0454821Z",
                                            "end": null
                                        },
                                        "purchaseDay": "Sunday"
                                    },
                                    "orderInfo": {
                                        "orderId": "V-8753228-01",
                                        "orderGroup": "V-8753228",
                                        "paymentUrl": null,
                                        "value": 21600
                                    },
                                    "context": {
                                        "items": [
                                            {
                                                "subscriptionItem": "69C872657263439D899265717E733A84",
                                                "skuId": "1154",
                                                "quantity": 1,
                                                "status": "ACTIVE",
                                                "isSkipped": false,
                                                "cycleCount": 1
                                            }
                                        ],
                                        "paymentSystem": "47",
                                        "paymentSystemName": "Cash",
                                        "paymentSystemGroup": "cash",
                                        "paymentAccountId": null,
                                        "addressId": "Address",
                                        "addressType": "residential",
                                        "catalogAttachment": "subscription.tshirt-collection"
                                    },
                                    "simulationItems": [
                                        {
                                            "id": "1145",
                                            "quantity": 1,
                                            "unitPrice": 21600,
                                            "status": "OK",
                                            "price": null,
                                            "sellingPrice": 21600,
                                            "manualPrice": null
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/cycles": {
            "get": {
                "tags": [
                    "Cycles"
                ],
                "summary": "List cycles",
                "description": "List cycles filtering by some arguments.",
                "parameters": [
                    {
                        "name": "beginDate",
                        "in": "query",
                        "description": "Lower limit for the date of creation of the cycle",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "endDate",
                        "description": "Upper limit for the date of creation of the cycle",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "subscriptionId",
                        "description": "Id from the subscription that generated the cycle",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "customerEmail",
                        "in": "query",
                        "description": "Customer that owns the subscription. Defaults to the current logged user",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Current cycle status",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page used for pagination",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Page size used for pagination",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 15
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "List of subscriptions of the VTEX account, limited to 15 results.",
                                    "items": {
                                        "$ref": "#/components/schemas/SubscriptionCycleResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "A71E0E88D029445D23B978253F9364E6-20243107",
                                        "subscriptionId": "A71E0E88D029445D23B978253F9364E6",
                                        "workflowId": "73a385ff-b3dc-48c0-ab25-0f1cecc4be8a",
                                        "status": "SUCCESS",
                                        "customerEmail": "customer@email.com",
                                        "customerId": "94b0a774-09c7-43ee-91e2-e8fa6guad0ju",
                                        "date": "2024-07-30T09:04:59.7325176Z",
                                        "lastUpdate": "2024-07-31T09:06:05.6879323Z",
                                        "cycleCount": 1,
                                        "isInRetry": false,
                                        "message": null,
                                        "friendlyMessage": null,
                                        "plan": {
                                            "id": "vtex.subscription.tshirt-collection",
                                            "frequency": {
                                                "periodicity": "WEEKLY",
                                                "interval": 3
                                            },
                                            "validity": {
                                                "begin": "2024-04-11T11:04:24.0454821Z",
                                                "end": null
                                            },
                                            "purchaseDay": "Sunday"
                                        },
                                        "orderInfo": {
                                            "orderId": "V-8753228-01",
                                            "orderGroup": "V-8753228",
                                            "paymentUrl": null,
                                            "value": 21600
                                        },
                                        "context": {
                                            "items": [
                                                {
                                                    "subscriptionItem": "69C872657263439D899265717E733A84",
                                                    "skuId": "1154",
                                                    "quantity": 1,
                                                    "status": "ACTIVE",
                                                    "isSkipped": false,
                                                    "cycleCount": 1
                                                }
                                            ],
                                            "paymentSystem": "47",
                                            "paymentSystemName": "Cash",
                                            "paymentSystemGroup": "cash",
                                            "paymentAccountId": null,
                                            "addressId": "Address",
                                            "addressType": "residential",
                                            "catalogAttachment": "subscription.tshirt-collection"
                                        },
                                        "simulationItems": [
                                            {
                                                "id": "1145",
                                                "quantity": 1,
                                                "unitPrice": 21600,
                                                "status": "OK",
                                                "price": null,
                                                "sellingPrice": 21600,
                                                "manualPrice": null
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/cycles/{cycleId}/retry": {
            "post": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Retry cycle",
                "description": "Every subscription order has an execution count called cycle, which determines the position of an order counting from when the shopper subscribed. This endpoint reruns a cycle that is currently in error state.",
                "parameters": [
                    {
                        "name": "cycleId",
                        "in": "path",
                        "description": "ID from the subscription cycle that will be retried.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/rns/pvt/plans": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "List plans",
                "description": "List plans filtering by some arguments.",
                "parameters": [
                    {
                        "name": "periodicity",
                        "in": "query",
                        "description": "Filter [subscription plans](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) by available periodicity.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "description": "Filter [subscription plans](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) by available interval.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page used for pagination.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Desired number of [subscription plans](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) in the response.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 15
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StorePlan"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pvt/plans/{id}": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "Get plan details",
                "description": "This endpoint retrieves a specific plan by its ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID from the [subscription plan](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR).",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "catfood.subscription"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested plan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorePlan"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pvt/reports": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "List report templates",
                "description": "List all report templates available.",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested report templates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubscriptionReport"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pvt/reports/{reportName}/documents/{documentId}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get report document details",
                "description": "Retrieve a specific report document by its Id.",
                "parameters": [
                    {
                        "name": "reportName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the report",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "required": true,
                        "description": "Id from the desired report document",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested report document",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pvt/reports/{reportName}/documents": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Generate report",
                "description": "This endpoint creates a new report in the format of a CSV file and sends it via email. You can generate one of the following reports: \n\n - subscriptionsWithStatus \n\n - subscriptionsScheduledBetweenDate \n\n - subscriptionsUpdatedBetweenDate \n\n - subscriptionsCreatedBetweenDate \n\n - executionsBetweenDate",
                "parameters": [
                    {
                        "name": "reportName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the type of report in wish to generate. The following values are accepted: \n\n - `subscriptionsWithStatus` \n\n - `subscriptionsScheduledBetweenDate` \n\n - `subscriptionsUpdatedBetweenDate` \n\n - `subscriptionsCreatedBetweenDate` \n\n - `executionsBetweenDate`",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The report is sent to the email in this field.",
                        "schema": {
                            "type": "string",
                            "nullable": false,
                            "default": "receiver@email.com"
                        }
                    },
                    {
                        "name": "beginDate",
                        "in": "query",
                        "description": "Start date of the report with the format `yyyy-mm-dd`. This field is required for any type of report.",
                        "schema": {
                            "type": "string",
                            "default": "2022-09-01"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date of the report with the format `yyyy-mm-dd`. This field is required for any type of report.",
                        "schema": {
                            "type": "string",
                            "default": "2022-10-01"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/subscriptions/{id}": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get subscription details",
                "description": "Retrieve a specific subscription by its ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID from the target subscription.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested subscription",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionGroupResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Update subscription",
                "description": "Update a specific subscription.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID from the given subscription.",
                        "schema": {
                            "type": "string",
                            "example": "4002961",
                            "nullable": false
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionUpdateRequestV3"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subscription successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionGroupResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/subscriptions": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "List subscriptions",
                "description": "List subscriptions filtering by some arguments.",
                "parameters": [
                    {
                        "name": "customerEmail",
                        "in": "query",
                        "description": "Customer that owns the subscription. Defaults to the current logged user.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Current subscription status",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "addressId",
                        "in": "query",
                        "description": "Id from the address used as shipping address",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "paymentId",
                        "in": "query",
                        "description": "Id from the payment used as payment method",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "planId",
                        "in": "query",
                        "description": "Id from the plan that the subscription belongs to",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "nextPurchaseDate",
                        "in": "query",
                        "description": "Date for the next cycle",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "originalOrderId",
                        "in": "query",
                        "description": "Id from the order that generated the subscription",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page used for pagination",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Page size used for pagination",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 15
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested subscriptions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubscriptionGroupResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Create subscription",
                "description": "Create a new subscription.",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subscription created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionGroupResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/subscriptions/{id}/items/{itemId}": {
            "delete": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Remove items from a subscription.",
                "description": "Removes a specific item from a given subscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id from the target subscription",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "Id from the subscription item that will be removed",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Edit items on a subscription.",
                "description": "Edit a given item on a specific subscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Id from the target subscription",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "description": "Id from the target item",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateItemInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subscription updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionGroupResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/subscriptions/{id}/items": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Add item to subscription",
                "description": "Add a new item to a given subscription.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID from the target subscription",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionThinItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subscription successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionGroupResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/subscriptions/{id}/simulate": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Calculate the current prices for a specific subscription",
                "description": "Simulates an order made by the specific subscription on checkout and retrieves the current price for items and shipping.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Id from the target subscription",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Simulation result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimulateResponseVO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/subscriptions/simulate": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Calculate the current prices for the provided subscription template",
                "description": "Simulates an order made by subscriptions on checkout and retrieves the current price for items and shipping.",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Simulation result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimulateResponseVO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/subscriptions/{subscriptionId}/conversation-message": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get conversation messages",
                "description": "Retrieve all conversation messages sent to a customer regarding a given subscription.",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "ID of the subscription.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "123456789abc"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "Message ID."
                                            },
                                            "from": {
                                                "type": "object",
                                                "description": "Information regarding the message sender.",
                                                "properties": {
                                                    "conversationRelatedTo": {
                                                        "type": "string",
                                                        "description": "ID of the subscription related to the message."
                                                    },
                                                    "conversationSubject": {
                                                        "type": "string",
                                                        "description": "Subject of conversation."
                                                    },
                                                    "emailAlias": {
                                                        "type": "string",
                                                        "description": "Email alias."
                                                    },
                                                    "aliasMaskType": {
                                                        "type": "string",
                                                        "description": "Alias mask type."
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "description": "Email address."
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name."
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "description": "Role."
                                                    }
                                                }
                                            },
                                            "to": {
                                                "type": "array",
                                                "description": "Information regarding the message receivers.",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "conversationRelatedTo": {
                                                            "type": "string",
                                                            "description": "ID of the subscription related to the message."
                                                        },
                                                        "conversationSubject": {
                                                            "type": "string",
                                                            "description": "Subject of conversation."
                                                        },
                                                        "emailAlias": {
                                                            "type": "string",
                                                            "description": "Email alias."
                                                        },
                                                        "aliasMaskType": {
                                                            "type": "string",
                                                            "description": "Alias mask type."
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "description": "Email address."
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Name."
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "description": "Role."
                                                        }
                                                    }
                                                }
                                            },
                                            "subject": {
                                                "type": "string",
                                                "description": "Message subject."
                                            },
                                            "firstWords": {
                                                "type": "string",
                                                "description": "First words of the message text."
                                            },
                                            "body": {
                                                "type": "string",
                                                "description": "HTML content of the message's body."
                                            },
                                            "hasAttachment": {
                                                "type": "boolean",
                                                "description": "Indicates whether the message has at least one attachment."
                                            },
                                            "attachmentNames": {
                                                "type": "array",
                                                "description": "Attachment names.",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "date": {
                                                "type": "string",
                                                "description": "Date of message."
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "from": {
                                            "conversationRelatedTo": "string",
                                            "conversationSubject": "string",
                                            "emailAlias": "string",
                                            "aliasMaskType": "string",
                                            "email": "string",
                                            "name": "string",
                                            "role": "string"
                                        },
                                        "to": [
                                            {
                                                "conversationRelatedTo": "string",
                                                "conversationSubject": "string",
                                                "emailAlias": "string",
                                                "aliasMaskType": "string",
                                                "email": "string",
                                                "name": "string",
                                                "role": "string"
                                            }
                                        ],
                                        "subject": "string",
                                        "firstWords": "string",
                                        "body": "string",
                                        "hasAttachment": true,
                                        "attachmentNames": [
                                            "string"
                                        ],
                                        "date": "2021-08-31T22:50:53.564Z"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get subscription settings",
                "description": "List the details of the settings of a given subscription.",
                "operationId": "GetSettings",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/settings"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Settings"
                ],
                "summary": "Edit subscriptions settings",
                "description": "Edits Subscriptions settings in your store.",
                "operationId": "EditSettings",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/settings"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/settings"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "appKey": [],
            "appToken": []
        },
        {
            "VtexIdclientAutCookie": []
        }
    ],
    "components": {
        "securitySchemes": {
            "appKey": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppKey",
                "description": "Unique identifier of the [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys)."
            },
            "appToken": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppToken",
                "description": "Secret token of the [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys)."
            },
            "VtexIdclientAutCookie": {
                "type": "apiKey",
                "in": "header",
                "name": "VtexIdclientAutCookie",
                "description": "[User token](https://developers.vtex.com/docs/guides/api-authentication-using-user-tokens), valid for 24 hours."
            }
        },
        "schemas": {
            "SimulationItemResult": {
                "type": "object",
                "description": "Simulation information about an item.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "SKU ID.",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Quantity of units for the given SKU."
                    },
                    "unitPrice": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Price per [kit](https://help.vtex.com/tutorial/what-is-a-kit--5ov5s3eHM4AqAAgqWwoc28) unit, when applicable.",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Subscription cycle status in the simulation."
                    },
                    "price": {
                        "type": "integer",
                        "description": "Price in cents.",
                        "nullable": true
                    },
                    "sellingPrice": {
                        "type": "integer",
                        "description": "Selling price in cents."
                    },
                    "manualPrice": {
                        "type": "integer",
                        "description": "[Manual price](https://help.vtex.com/en/tutorial/change-the-price-of-an-item-in-the-shopping-cart--7Cd37aCAmtL1qmoZJJvjNf) in cents.",
                        "nullable": true
                    }
                }
            },
            "SubscriptionCycleResponse": {
                "type": "object",
                "description": "Object with information about the subscription cycle.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Operation ID, a combination of the `subscriptionId` value plus the request date in the format `YYYYMMDD`."
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "Subscription ID."
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "Code that identifies the subscription in the [order flow](https://help.vtex.com/en/tutorial/order-flow-and-status--tutorials_196)."
                    },
                    "status": {
                        "type": "string",
                        "description": "Subscription cycle execution status. The possible values are:\r\n- `TRIGGERED`: Execution has been triggered. \r\n- `IN_PROCESS`: Execution is being processed by the system.\r\n- `FAILURE`: An internal error occurred during the subscription execution.\r\n- `SUCCESS`: Successful cycle processing.\r\n- `EXPIRED`: The subscription was not renewed, and the period for which it was valid has ended.\r\n- `ORDER_ERROR`: Cycle was not executed due to an error in order placement.\r\n- `PAYMENT_ERROR`: Cycle was not executed due to an error in the payment.\r\n- `SKIPED`: A subscription Cycle execution was skipped, and the subscription will be executed in the next cycle.\r\n- `SUCCESS_WITH_NO_ORDER`: Cycle was executed successfully, and the linked order has no items.\r\n- `SUCCESS_WITH_PARTIAL_ORDER`: Cycle was executed successfully, and has a linked partial order.\r\n- `RE_TRIGGERED`: Execution retry was triggered manually.\r\n- `SCHEDULE_UPDATED`: Date of the next subscription cycle execution has been updated.",
                        "enum": [
                            "TRIGGERED",
                            "IN_PROCESS",
                            "FAILURE",
                            "SUCCESS",
                            "EXPIRED",
                            "ORDER_ERROR",
                            "PAYMENT_ERROR",
                            "SKIPED",
                            "SUCCESS_WITH_NO_ORDER",
                            "SUCCESS_WITH_PARTIAL_ORDER",
                            "RE_TRIGGERED",
                            "SCHEDULE_UPDATED"
                        ]
                    },
                    "customerEmail": {
                        "type": "string",
                        "description": "Customer email."
                    },
                    "customerId": {
                        "type": "string",
                        "description": "Customer ID."
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Current date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`."
                    },
                    "lastUpdate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Subscription cycle last update date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`."
                    },
                    "cycleCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The cycle determines the position of an order counting from when the shopper subscribed. The original order that creates the subscription corresponds to cycle count `0`, the first subscription order corresponds to `1`, the second corresponds to `2`, and so on."
                    },
                    "isInRetry": {
                        "type": "boolean",
                        "description": "Defines if the cycle execution is in retry (`true`), or not (`false`)."
                    },
                    "message": {
                        "type": "string",
                        "description": "Cycle execution message.",
                        "nullable": true
                    },
                    "friendlyMessage": {
                        "type": "string",
                        "description": "Cycle execution friendly message.",
                        "nullable": true
                    },
                    "plan": {
                        "type": "object",
                        "description": "Subscription [plan](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) object.",
                        "required": [
                            "frequency",
                            "id",
                            "purchaseDay",
                            "validity"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Subscription plan ID.",
                                "nullable": true
                            },
                            "frequency": {
                                "type": "object",
                                "description": "Subscription plan frequency.",
                                "required": [
                                    "interval",
                                    "periodicity"
                                ],
                                "properties": {
                                    "periodicity": {
                                        "type": "string",
                                        "description": "Repurchase frequency requested by the customer, defines the subscriptions recurrence period.",
                                        "nullable": true,
                                        "enum": [
                                            "DAILY",
                                            "WEEKLY",
                                            "MONTHLY",
                                            "YEARLY"
                                        ]
                                    },
                                    "interval": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Time interval configured between subscription orders, which depends on the periodicity. For a `DAILY` periodicity, the value will be days, for `MONTHLY` it will be months, and so on."
                                    }
                                }
                            },
                            "validity": {
                                "type": "object",
                                "description": "Information about the period during which the subscription will be valid.",
                                "required": [
                                    "begin"
                                ],
                                "properties": {
                                    "begin": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Subscription beginning date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`."
                                    },
                                    "end": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Subscription ending date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.",
                                        "nullable": true
                                    }
                                }
                            },
                            "purchaseDay": {
                                "type": "string",
                                "description": "Time reference in which subscription orders will be created. It will depend on the cycle periodicity, for `WEEKLY` subscriptions, for example, the purchase day could be `Sunday`. For `MONTHLY`, would be `7`, as in the 7th day of the month."
                            }
                        }
                    },
                    "orderInfo": {
                        "type": "object",
                        "description": "Subscription order information.",
                        "properties": {
                            "orderId": {
                                "type": "string",
                                "description": "Order ID."
                            },
                            "orderGroup": {
                                "type": "string",
                                "description": "Order group ID."
                            },
                            "paymentURL": {
                                "type": "string",
                                "description": "Order payment URL.",
                                "nullable": true
                            },
                            "value": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Order value in cents."
                            }
                        }
                    },
                    "context": {
                        "type": "object",
                        "description": "Subscription cycle context.",
                        "properties": {
                            "items": {
                                "type": "array",
                                "description": "Information about subscription cycle items.",
                                "nullable": true,
                                "items": {
                                    "type": "object",
                                    "description": "Subscription item information.",
                                    "properties": {
                                        "subscriptionItemId": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "Subscription item ID."
                                        },
                                        "skuId": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "SKU ID."
                                        },
                                        "quantity": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Quantity of item units.",
                                            "nullable": true
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "Subscription status.",
                                            "nullable": true,
                                            "enum": [
                                                "ACTIVE",
                                                "PAUSED",
                                                "CANCELED",
                                                "EXPIRED",
                                                "MISSING"
                                            ]
                                        },
                                        "isSkipped": {
                                            "type": "boolean",
                                            "description": "Defines if the customer asked to skip the item in the next subscription order(`true`), or not (`false`).",
                                            "nullable": true
                                        },
                                        "cycleCount": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The cycle determines the position of an order counting from when the shopper subscribed. The original order that creates the subscription corresponds to cycle count `0`, the first subscription order corresponds to `1`, the second corresponds to `2`, and so on.",
                                            "nullable": true
                                        }
                                    }
                                }
                            },
                            "paymentSystem": {
                                "type": "string",
                                "description": "Payment system ID.",
                                "nullable": true
                            },
                            "paymentSystemName": {
                                "type": "string",
                                "description": "Payment system name.",
                                "nullable": true
                            },
                            "paymentSystemGroup": {
                                "type": "string",
                                "description": "Payment system group.",
                                "nullable": true
                            },
                            "paymentAccountId": {
                                "type": "string",
                                "description": "Information about the customer profile and their documents, such as a credit card number. You can also retrieve that information using the [Get client profile by email](https://developers.vtex.com/docs/api-reference/checkout-api#get-/api/checkout/pub/profiles) endpoint.",
                                "nullable": true
                            },
                            "addressId": {
                                "type": "string",
                                "description": "Shipping address ID.",
                                "nullable": true
                            },
                            "addressType": {
                                "type": "string",
                                "description": "Shipping address type.",
                                "nullable": true
                            },
                            "catalogAttachment": {
                                "type": "string",
                                "description": "[Attachment](https://help.vtex.com/en/tutorial/what-is-an-attachment--aGICk0RVbqKg6GYmQcWUm) content, when applicable.",
                                "nullable": true
                            }
                        }
                    },
                    "simulationItems": {
                        "type": "array",
                        "description": "Subscription simulation items.",
                        "items": {
                            "$ref": "#/components/schemas/SimulationItemResult"
                        },
                        "nullable": true
                    }
                }
            },
            "StorePlan": {
                "type": "object",
                "description": "Subscription plan object.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Subscription ID."
                    },
                    "frequencies": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "periodicityAsString": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "periodicity": {
                                    "enum": [
                                        0,
                                        1,
                                        2,
                                        3,
                                        4
                                    ],
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "interval": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "nullable": true
                    }
                }
            },
            "SubscriptionReportParam": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SubscriptionReport": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "nullable": true
                    },
                    "key": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "requesterEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "entity": {
                        "type": "string",
                        "nullable": true
                    },
                    "schema": {
                        "type": "string",
                        "nullable": true
                    },
                    "query": {
                        "type": "string",
                        "nullable": true
                    },
                    "params": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionReportParam"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ReportResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "finished": {
                        "type": "boolean"
                    },
                    "recordsProcessed": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "recordsSum": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastUpdateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "completedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "errorCount": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "percentageProcessed": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "enqueueDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "canceled": {
                        "type": "boolean"
                    },
                    "outputType": {
                        "type": "string",
                        "nullable": true
                    },
                    "zipped": {
                        "type": "boolean"
                    },
                    "linkToDownload": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastErrorMessage": {
                        "type": "string",
                        "nullable": true
                    },
                    "statusMessage": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "PlanResponse": {
                "title": "Plan",
                "required": [
                    "frequency",
                    "id",
                    "purchaseDay",
                    "validity"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "frequency": {
                        "required": [
                            "interval",
                            "periodicity"
                        ],
                        "type": "object",
                        "properties": {
                            "periodicity": {
                                "type": "string",
                                "nullable": true
                            },
                            "interval": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        "additionalProperties": false
                    },
                    "validity": {
                        "type": "object",
                        "required": [
                            "begin"
                        ],
                        "properties": {
                            "begin": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "end": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            }
                        }
                    },
                    "purchaseDay": {
                        "type": "string",
                        "description": "Time reference in which subscription orders will be created. It will depend on the cycle periodicity, for `WEEKLY` subscriptions, for example, the purchase day could be `Sunday`. For `MONTHLY`, would be `7`, as in the 7th day of the month."
                    }
                }
            },
            "ShippingAddressResponse": {
                "title": "Address",
                "required": [
                    "addressId",
                    "addressType"
                ],
                "type": "object",
                "properties": {
                    "addressId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressType": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PaymentMethodResponse": {
                "title": "PaymentMethod",
                "required": [
                    "paymentSystem"
                ],
                "type": "object",
                "properties": {
                    "paymentAccountId": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymentSystem": {
                        "type": "string",
                        "nullable": true
                    },
                    "installments": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PurchaseSettingsResponse": {
                "title": "PurchaseSettings",
                "required": [
                    "currencyCode",
                    "paymentMethod"
                ],
                "type": "object",
                "properties": {
                    "paymentMethod": {
                        "$ref": "#/components/schemas/PaymentMethodResponse"
                    },
                    "currencyCode": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SubscriptionItemResponse": {
                "title": "SubscriptionItem",
                "required": [
                    "id",
                    "isSkipped",
                    "quantity",
                    "skuId",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "skuId": {
                        "type": "string",
                        "nullable": true,
                        "title": "skuId",
                        "description": "SKU ID.",
                        "example": "12"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32",
                        "title": "quantity",
                        "description": "Amount of units in the cart.",
                        "example": 5
                    },
                    "isSkipped": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "manualPrice": {
                        "type": "integer",
                        "format": "int32",
                        "title": "manualPrice",
                        "description": "Manual price.",
                        "default": null,
                        "nullable": true,
                        "example": 40
                    },
                    "originalOrderId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SubscriptionGroupResponse": {
                "title": "Subscription",
                "required": [
                    "createdAt",
                    "customerEmail",
                    "customerId",
                    "cycleCount",
                    "id",
                    "isSkipped",
                    "items",
                    "lastUpdate",
                    "nextPurchaseDate",
                    "plan",
                    "purchaseSettings",
                    "shippingAddress",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "customerId": {
                        "type": "string",
                        "nullable": true
                    },
                    "customerEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "isSkipped": {
                        "type": "boolean"
                    },
                    "nextPurchaseDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastPurchaseDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "plan": {
                        "$ref": "#/components/schemas/PlanResponse"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/ShippingAddressResponse"
                    },
                    "purchaseSettings": {
                        "$ref": "#/components/schemas/PurchaseSettingsResponse"
                    },
                    "cycleCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionItemResponse"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FrequencyRequest": {
                "required": [
                    "interval",
                    "periodicity"
                ],
                "type": "object",
                "description": "Information about subscriptions' recurrence.",
                "properties": {
                    "periodicity": {
                        "type": "string",
                        "nullable": true,
                        "description": "Defines the subscriptions recurrence period. The possible values are: \r\n- `DAILY` \r\n- `WEEKLY` \r\n- `MONTHLY` \r\n- `YEARLY`",
                        "example": "MONTHLY"
                    },
                    "interval": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time interval configured between subscription orders, which depends on the periodicity. For a `DAILY` periodicity, the value will be days, for `MONTHLY` it will be months, and so on.",
                        "example": 3
                    }
                },
                "additionalProperties": false
            },
            "ValidityRequest": {
                "type": "object",
                "description": "Information about the period during which the subscription will be valid.",
                "properties": {
                    "begin": {
                        "type": "string",
                        "nullable": true,
                        "description": "Subscription's beginning date with the format `yyyy-mm-ddThh:mm:ss`.",
                        "example": "2022-06-10T00:00:00"
                    },
                    "end": {
                        "type": "string",
                        "nullable": true,
                        "description": "Subscription's ending date with the format `yyyy-mm-ddThh:mm:ss`.",
                        "example": "2023-06-10T00:00:00"
                    }
                },
                "additionalProperties": false
            },
            "PlanThinRequest": {
                "title": "PlanRequest",
                "description": "Information about the plan.",
                "required": [
                    "frequency",
                    "id",
                    "purchaseDay"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true,
                        "description": "ID of the plan.",
                        "example": "store.subscription"
                    },
                    "frequency": {
                        "$ref": "#/components/schemas/FrequencyRequest"
                    },
                    "validity": {
                        "$ref": "#/components/schemas/ValidityRequest"
                    },
                    "purchaseDay": {
                        "type": "string",
                        "description": "Day in which recurrent orders will be created.",
                        "nullable": true,
                        "example": "15"
                    }
                },
                "additionalProperties": false
            },
            "shippingAddress": {
                "title": "shippingAddress",
                "required": [
                    "addressId",
                    "addressType"
                ],
                "type": "object",
                "properties": {
                    "addressId": {
                        "type": "string",
                        "nullable": true,
                        "description": "Shipping address ID.",
                        "example": "8109266555005"
                    },
                    "addressType": {
                        "type": "string",
                        "nullable": true,
                        "description": "Type of the address. Possible values are `residential` or `pickup`.",
                        "example": "residential"
                    }
                },
                "additionalProperties": false
            },
            "PaymentMethodThinRequest": {
                "title": "PaymentMethodRequest",
                "description": "Object containing information about the payment method.",
                "required": [
                    "paymentSystem"
                ],
                "type": "object",
                "properties": {
                    "paymentAccountId": {
                        "type": "string",
                        "nullable": true,
                        "description": "Data about shoppers' profiles and documents. For example, their credit card number. To obtain that information, use the endpoint [Get client profile by email](https://developers.vtex.com/docs/api-reference/checkout-api#get-/api/checkout/pub/profiles).",
                        "example": "340357032569595"
                    },
                    "paymentSystem": {
                        "type": "string",
                        "description": "Payment system's ID.",
                        "nullable": true,
                        "example": "4"
                    },
                    "installments": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of payment installments.",
                        "nullable": true,
                        "example": 3
                    }
                },
                "additionalProperties": false
            },
            "PurchaseSettingsThinRequest": {
                "title": "PurchaseSettingsRequest",
                "description": "Object containing purchase settings information.",
                "required": [
                    "paymentMethod",
                    "salesChannel"
                ],
                "type": "object",
                "properties": {
                    "paymentMethod": {
                        "$ref": "#/components/schemas/PaymentMethodThinRequest"
                    },
                    "salesChannel": {
                        "type": "string",
                        "description": "Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV)) applied to the subscription being created. You can associate only one sales channel to each subscription. The default value is the main sales channel, which corresponds to `1`.",
                        "default": "1"
                    }
                },
                "additionalProperties": false
            },
            "SubscriptionUpdateRequestV3": {
                "title": "SubscriptionUpdateRequest",
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "description": "Name of the subscription.",
                        "example": "catFood"
                    },
                    "status": {
                        "type": "string",
                        "nullable": true,
                        "description": "Status to which you wish to update the subscription. The accepted values are: \r\n- `ACTIVE` \r\n- `PAUSED` \r\n- `CANCELED` \r\n- `EXPIRED` \r\n- `MISSING`",
                        "example": "ACTIVE"
                    },
                    "isSkipped": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "When set as `true`, it means the shopper asked to skip the next subscription order, and when set as `false`, no subscription order is going to be skipped.",
                        "example": false
                    },
                    "plan": {
                        "$ref": "#/components/schemas/PlanThinRequest"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/shippingAddress"
                    },
                    "purchaseSettings": {
                        "$ref": "#/components/schemas/PurchaseSettingsThinRequest"
                    }
                },
                "additionalProperties": false
            },
            "SubscriptionThinItemRequest": {
                "type": "object",
                "properties": {
                    "skuId": {
                        "type": "string",
                        "nullable": true,
                        "title": "skuId",
                        "description": "SKU ID.",
                        "example": "12"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32",
                        "title": "quantity",
                        "description": "Amount of units in the cart.",
                        "example": 5
                    },
                    "manualPrice": {
                        "type": "integer",
                        "format": "int32",
                        "title": "manualPrice",
                        "description": "Manual price.",
                        "default": null,
                        "nullable": true,
                        "example": 40
                    }
                },
                "additionalProperties": false
            },
            "SubscriptionGroupRequest": {
                "title": "SubscriptionRequest",
                "required": [
                    "customerEmail",
                    "items",
                    "plan",
                    "purchaseSettings",
                    "shippingAddress"
                ],
                "type": "object",
                "properties": {
                    "customerEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "nextPurchaseDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "catalogAttachment": {
                        "type": "string",
                        "nullable": true
                    },
                    "plan": {
                        "$ref": "#/components/schemas/PlanThinRequest"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/shippingAddress"
                    },
                    "purchaseSettings": {
                        "$ref": "#/components/schemas/PurchaseSettingsThinRequest"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionThinItemRequest"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpdateItemInput": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "isSkipped": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32",
                        "title": "quantity",
                        "description": "Amount of units in the cart.",
                        "example": 5
                    },
                    "manualPrice": {
                        "type": "integer",
                        "format": "int32",
                        "title": "manualPrice",
                        "description": "Manual price.",
                        "default": null,
                        "nullable": true,
                        "example": 40
                    }
                },
                "additionalProperties": false
            },
            "ItemAttachment": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "content": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PriceTag": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "valueAsInt": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rawValue": {
                        "type": "number",
                        "format": "double"
                    },
                    "isPercentual": {
                        "type": "boolean"
                    },
                    "identifier": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "OrderItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "seller": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32",
                        "title": "quantity",
                        "description": "Amount of units in the cart.",
                        "example": 5
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "sellingPrice": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "unitMultiplier": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ItemAttachment"
                        },
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "isGift": {
                        "type": "boolean"
                    },
                    "priceTags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceTag"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "LogisticsInfoDeliveryWindow": {
                "type": "object",
                "properties": {
                    "startDateUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDateUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "additionalProperties": false
            },
            "LogisticsInfoSLA": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "pickupPointId": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryChannel": {
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "shippingEstimate": {
                        "type": "string",
                        "nullable": true
                    },
                    "lockTtl": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogisticsInfoDeliveryWindow"
                        },
                        "nullable": true
                    },
                    "availableDeliveryWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogisticsInfoDeliveryWindow"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "LogisticsInfo": {
                "type": "object",
                "properties": {
                    "itemIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32",
                        "title": "quantity",
                        "description": "Amount of units in the cart.",
                        "example": 5
                    },
                    "selectedSla": {
                        "type": "string",
                        "nullable": true
                    },
                    "selectedDeliveryChannel": {
                        "type": "string",
                        "nullable": true
                    },
                    "lockTtl": {
                        "type": "string",
                        "nullable": true
                    },
                    "shippingEstimate": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressId": {
                        "type": "string",
                        "nullable": true
                    },
                    "pickupId": {
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "deliveryWindow": {
                        "$ref": "#/components/schemas/LogisticsInfoDeliveryWindow"
                    },
                    "slAs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogisticsInfoSLA"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PaymentField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Payment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymentSystem": {
                        "type": "string",
                        "nullable": true
                    },
                    "group": {
                        "type": "string",
                        "nullable": true
                    },
                    "bin": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountId": {
                        "type": "string",
                        "nullable": true
                    },
                    "parentAccountId": {
                        "type": "string",
                        "nullable": true
                    },
                    "referenceValue": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "value": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "installments": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "cardNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentField"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Transaction": {
                "type": "object",
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    },
                    "payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Payment"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PaymentData": {
                "type": "object",
                "properties": {
                    "payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Payment"
                        },
                        "nullable": true
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SimulateMessageResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "text": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PurchaseContextAvailableGiftResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "seller": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32",
                        "title": "quantity",
                        "description": "Amount of units in the cart.",
                        "example": 5
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "sellingPrice": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "unitMultiplier": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ItemAttachment"
                        },
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "isGift": {
                        "type": "boolean"
                    },
                    "priceTags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceTag"
                        },
                        "nullable": true
                    },
                    "isSelected": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "PurchaseContextSelectableGiftsResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "availableQuantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "availableGifts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PurchaseContextAvailableGiftResponse"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "TotalizationResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "valueAsInt": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "additionalProperties": false
            },
            "SimulateResponse": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        },
                        "nullable": true
                    },
                    "logisticsInfo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogisticsInfo"
                        },
                        "nullable": true
                    },
                    "paymentData": {
                        "$ref": "#/components/schemas/PaymentData"
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "postalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimulateMessageResponse"
                        },
                        "nullable": true
                    },
                    "selectableGiftsResponse": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PurchaseContextSelectableGiftsResponse"
                        },
                        "nullable": true
                    },
                    "totals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TotalizationResponse"
                        },
                        "nullable": true
                    },
                    "simulationItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimulationItemResult"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShippingEstimate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "estimate": {
                        "type": "string",
                        "nullable": true
                    },
                    "estimateDeliveryDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "nextPurchaseDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "allItemsMatched": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Totalization": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "SimulateResponseVO": {
                "type": "object",
                "properties": {
                    "simulateResponse": {
                        "$ref": "#/components/schemas/SimulateResponse"
                    },
                    "shippingEstimate": {
                        "$ref": "#/components/schemas/ShippingEstimate"
                    },
                    "simulationItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimulationItemResult"
                        },
                        "nullable": true
                    },
                    "totals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Totalization"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "settings": {
                "description": "Subscriptions settings.",
                "type": "object",
                "required": [
                    "slaOption",
                    "defaultSla",
                    "isUsingV3",
                    "onMigrationProcess",
                    "executionHourInUtc",
                    "workflowVersion",
                    "deliveryChannels",
                    "randomIdGeneration",
                    "isMultipleInstallmentsEnabledOnCreation",
                    "isMultipleInstallmentsEnabledOnUpdate",
                    "orderCustomDataAppId",
                    "postponeExpiration",
                    "manualPriceAllowed",
                    "useItemPriceFromOriginalOrder"
                ],
                "properties": {
                    "slaOption": {
                        "description": "Delivery method.",
                        "type": "string",
                        "example": "NONE"
                    },
                    "defaultSla": {
                        "description": "Default delivery method.",
                        "type": "string",
                        "default": null,
                        "nullable": true,
                        "example": null
                    },
                    "isUsingV3": {
                        "description": "Indicates whether or not Subscriptions V3 is enabled.",
                        "type": "boolean",
                        "default": false,
                        "example": true
                    },
                    "onMigrationProcess": {
                        "description": "Indicates whether or not the account is in the migration process to Subscriptions V3.",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "executionHourInUtc": {
                        "description": "Indicates the time future subscription orders will be generated.",
                        "type": "integer",
                        "default": 0,
                        "example": 9
                    },
                    "workflowVersion": {
                        "description": "Workflow version.",
                        "type": "string",
                        "example": "1.1"
                    },
                    "deliveryChannels": {
                        "description": "Array containing delivery channels.",
                        "type": "array",
                        "items": {
                            "description": "Type of delivery channel. The values that are possible are: `pickupInPoint` for pickup point and `delivery` for regular delivery.",
                            "type": "string",
                            "example": "delivery"
                        }
                    },
                    "randomIdGeneration": {
                        "description": "Defines whether or not the subscription order IDs will be randomly generated.",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "isMultipleInstallmentsEnabledOnCreation": {
                        "description": "Defines whether or not multiple installments are enabled when a subscription is created.",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "isMultipleInstallmentsEnabledOnUpdate": {
                        "description": "Defines whether or not multiple installments are enabled when a subscription is updated.",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "orderCustomDataAppId": {
                        "description": "When filled, this field passes along the `customData` infomration in the order to the future recurrent subscription orders.",
                        "type": "string",
                        "default": null,
                        "example": null
                    },
                    "postponeExpiration": {
                        "description": "Defines whether or not the expiration of subscriptions can be postponed.",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "manualPriceAllowed": {
                        "description": "When set to `true`, this property enables manual price configuration in subscription items. This is valid for all existing subscriptions, provided that there is a manual price configured and that `isUsingV3` is `true`.",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "useItemPriceFromOriginalOrder": {
                        "title": "useItemPriceFromOriginalOrder",
                        "description": "When set to `true`, this property enables using the manual price for each item from the original subscription order. This is only valid for new subscriptions, created from the moment this configuration is enabled. For this to work, it is mandatory that the `manualPriceAllowed` property is set to `true` and that `isUsingV3` is `true`.",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    }
                },
                "example": [
                    {
                        "slaOption": "NONE",
                        "defaultSla": null,
                        "isUsingV3": true,
                        "onMigrationProcess": false,
                        "executionHourInUtc": 9,
                        "workflowVersion": "1.1",
                        "deliveryChannels": [
                            "delivery"
                        ],
                        "randomIdGeneration": false,
                        "isMultipleInstallmentsEnabledOnCreation": false,
                        "isMultipleInstallmentsEnabledOnUpdate": false,
                        "orderCustomDataAppId": null,
                        "postponeExpiration": false,
                        "manualPriceAllowed": false,
                        "useItemPriceFromOriginalOrder": false
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Cycles"
        },
        {
            "name": "Plans"
        },
        {
            "name": "Reports"
        },
        {
            "name": "Subscriptions"
        },
        {
            "name": "Settings"
        }
    ]
}