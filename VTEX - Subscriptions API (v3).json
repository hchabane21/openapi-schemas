{
    "openapi": "3.0.0",
    "info": {
        "title": "Subscriptions API (v3)",
        "description": "\r\nA **Subscription** is a list of items (SKUs) tied to certain recurring purchase settings:\r\n\r\n- User profile\r\n- Address\r\n- Payment method\r\n- Frequency\r\n- Cycle\r\n\r\nOnce you have [configured subscriptions](https://help.vtex.com/tutorial/how-to-configure-subscriptions%20--1FA9dfE7vJqxBna9Nft5Sj) in your store, the Subscriptions API allows you to create, manage and monitor your customers' subscriptions.\r\n\r\n![image](https://user-images.githubusercontent.com/77292838/213024675-9407863b-0c55-4282-9442-306352716abe.png)\r\n\r\nTo read more about the Subscriptions feature, check our article [How Subscription works](https://help.vtex.com/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453).",
        "contact": {},
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://{accountName}.{environment}.com.br",
            "description": "VTEX server URL.",
            "variables": {
                "accountName": {
                    "description": "Name of the VTEX account. Used as part of the URL.",
                    "default": "apiexamples"
                },
                 "environment": {
                    "description": "Environment to use. Used as part of the URL.",
                    "enum": [
                        "vtexcommercestable"
                    ],
                    "default": "vtexcommercestable"
                }
            }
        }
    ],
    "paths": {
        "/api/rns/pub/cycles/{cycleId}": {
            "get": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Get cycle details",
                "description": "Retrieve a specific cycle by its ID.",
                "parameters": [
                    {
                        "name": "cycleId",
                        "in": "path",
                        "description": "ID from the desired cycle.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "2b9de8a5-b29b-4e18-8400-400dc0a2330d"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionCycleResponse"
                                },
                                "example": {
                                    "id": "2b9de8a5-b29b-4e18-8400-400dc0a2330d-20240730",
                                    "subscriptionId": "2b9de8a5-b29b-4e18-8400-400dc0a2330d",
                                    "workflowId": "73a385ff-b3dc-48c0-ab25-0f1cecc4be8a",
                                    "status": "SUCCESS",
                                    "customerEmail": "customer@email.com",
                                    "customerId": "94b0a774-09c7-43ee-91e2-e8fa6guad0ju",
                                    "date": "2024-07-30T09:04:59.7325176Z",
                                    "lastUpdate": "2024-07-31T09:06:05.6879323Z",
                                    "cycleCount": 3,
                                    "isInRetry": false,
                                    "message": null,
                                    "friendlyMessage": null,
                                    "plan": {
                                        "id": "store.subscription.tshirt-collection",
                                        "frequency": {
                                            "periodicity": "WEEKLY",
                                            "interval": 3
                                        },
                                        "validity": {
                                            "begin": "2024-04-11T11:04:24.0454821Z",
                                            "end": null
                                        },
                                        "purchaseDay": "Sunday"
                                    },
                                    "orderInfo": {
                                        "orderId": "V-8753228-01",
                                        "orderGroup": "V-8753228",
                                        "paymentUrl": null,
                                        "value": 21600
                                    },
                                    "context": {
                                        "items": [
                                            {
                                                "subscriptionItem": "69C872657263439D899265717E733A84",
                                                "skuId": "1154",
                                                "quantity": 1,
                                                "status": "ACTIVE",
                                                "isSkipped": false,
                                                "cycleCount": 1
                                            }
                                        ],
                                        "paymentSystem": "47",
                                        "paymentSystemName": "Cash",
                                        "paymentSystemGroup": "cash",
                                        "paymentAccountId": null,
                                        "addressId": "Address",
                                        "addressType": "residential",
                                        "catalogAttachment": "subscription.tshirt-collection"
                                    },
                                    "simulationItems": [
                                        {
                                            "id": "1145",
                                            "quantity": 1,
                                            "unitPrice": 21600,
                                            "status": "OK",
                                            "price": null,
                                            "sellingPrice": 21600,
                                            "manualPrice": null
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/cycles": {
            "get": {
                "tags": [
                    "Cycles"
                ],
                "summary": "List cycles",
                "description": "List cycles filtering by some arguments.",
                "parameters": [
                    {
                        "name": "beginDate",
                        "in": "query",
                        "description": "Lower limit for the date of creation of the cycle",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "endDate",
                        "description": "Upper limit for the date of creation of the cycle",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "subscriptionId",
                        "description": "Id from the subscription that generated the cycle",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "customerEmail",
                        "in": "query",
                        "description": "Customer that owns the subscription. Defaults to the current logged user",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Current cycle status",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page used for pagination",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Page size used for pagination",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 15
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "List of subscriptions of the VTEX account, limited to 15 results.",
                                    "items": {
                                        "$ref": "#/components/schemas/SubscriptionCycleResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "2b9de8a5-b29b-4e18-8400-400dc0a2330d-20240730",
                                        "subscriptionId": "2b9de8a5-b29b-4e18-8400-400dc0a2330d",
                                        "workflowId": "73a385ff-b3dc-48c0-ab25-0f1cecc4be8a",
                                        "status": "SUCCESS",
                                        "customerEmail": "customer@email.com",
                                        "customerId": "94b0a774-09c7-43ee-91e2-e8fa6guad0ju",
                                        "date": "2024-07-30T09:04:59.7325176Z",
                                        "lastUpdate": "2024-07-31T09:06:05.6879323Z",
                                        "cycleCount": 3,
                                        "isInRetry": false,
                                        "message": null,
                                        "friendlyMessage": null,
                                        "plan": {
                                            "id": "store.subscription.tshirt-collection",
                                            "frequency": {
                                                "periodicity": "WEEKLY",
                                                "interval": 3
                                            },
                                            "validity": {
                                                "begin": "2024-04-11T11:04:24.0454821Z",
                                                "end": null
                                            },
                                            "purchaseDay": "Sunday"
                                        },
                                        "orderInfo": {
                                            "orderId": "V-8753228-01",
                                            "orderGroup": "V-8753228",
                                            "paymentUrl": null,
                                            "value": 21600
                                        },
                                        "context": {
                                            "items": [
                                                {
                                                    "subscriptionItem": "69C872657263439D899265717E733A84",
                                                    "skuId": "1154",
                                                    "quantity": 1,
                                                    "status": "ACTIVE",
                                                    "isSkipped": false,
                                                    "cycleCount": 1
                                                }
                                            ],
                                            "paymentSystem": "47",
                                            "paymentSystemName": "Cash",
                                            "paymentSystemGroup": "cash",
                                            "paymentAccountId": null,
                                            "addressId": "Address",
                                            "addressType": "residential",
                                            "catalogAttachment": "subscription.tshirt-collection"
                                        },
                                        "simulationItems": [
                                            {
                                                "id": "1145",
                                                "quantity": 1,
                                                "unitPrice": 21600,
                                                "status": "OK",
                                                "price": null,
                                                "sellingPrice": 21600,
                                                "manualPrice": null
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/cycles/{cycleId}/retry": {
            "post": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Retry cycle",
                "description": "Every subscription order has an execution count called cycle, which determines the position of an order counting from when the shopper subscribed. This endpoint reruns a cycle that is currently in error state.",
                "parameters": [
                    {
                        "name": "cycleId",
                        "in": "path",
                        "description": "ID from the subscription cycle that will be retried.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/rns/pvt/plans": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "List plans",
                "description": "List plans filtering by some arguments.",
                "parameters": [
                    {
                        "name": "periodicity",
                        "in": "query",
                        "description": "Filter [subscription plans](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) by available periodicity.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "description": "Filter [subscription plans](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) by available interval.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page used for pagination.",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Desired number of [subscription plans](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) in the response.",
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StorePlan"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "catfood.subscription",
                                        "frequencies": [
                                            {
                                                "periodicity": "DAILY",
                                                "interval": 1
                                            }
                                        ],
                                        "isActive": true,
                                        "importInProgress": false,
                                        "attachmentId": 40,
                                        "isValid": true,
                                        "validationMessages": [],
                                        "validity": null,
                                        "purchaseDays": [
                                            "7"
                                        ]
                                    },
                                    {
                                        "id": "subscription.tshirt",
                                        "frequencies": [
                                            {
                                                "periodicity": "MONTHLY",
                                                "interval": 1
                                            }
                                        ],
                                        "isActive": true,
                                        "importInProgress": false,
                                        "attachmentId": 39,
                                        "isValid": true,
                                        "validationMessages": [],
                                        "validity": null,
                                        "purchaseDays": [
                                            "3"
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pvt/plans/{id}": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "Get plan details",
                "description": "This endpoint retrieves a specific plan by its ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID from the [subscription plan](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR).",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "catfood.subscription"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorePlan"
                                },
                                "example": {
                                    "id": "catfood.subscription",
                                    "frequencies": [
                                        {
                                            "periodicity": "DAILY",
                                            "interval": 1
                                        }
                                    ],
                                    "isActive": true,
                                    "importInProgress": false,
                                    "attachmentId": 40,
                                    "isValid": true,
                                    "validationMessages": [],
                                    "validity": null,
                                    "purchaseDays": [
                                        "1",
                                        "2",
                                        "3",
                                        "4",
                                        "5",
                                        "6",
                                        "0"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pvt/reports": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "List report templates",
                "description": "List all report templates available.\r\n\r\n>ℹ️ After choosing the desired template, use the [Generate report](https://developers.vtex.com/docs/api-reference/subscriptions-api-v3#post-/api/rns/pvt/reports/-reportName-/documents) endpoint to create the report for your store.",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "Report template details.",
                                        "properties": {
                                            "account": {
                                                "type": "string",
                                                "description": "VTEX store account name."
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Template type, more information in the `description` field.",
                                                "enum": [
                                                    "subscriptionsWithStatus",
                                                    "subscriptionsScheduledBetweenDate",
                                                    "subscriptionsUpdatedBetweenDate",
                                                    "subscriptionsCreatedBetweenDate",
                                                    "executionsBetweenDate"
                                                ]
                                            },
                                            "description": {
                                                "type": "string",
                                                "description": "Template description, which varies according to the template type:\r\n- `subscriptionsWithStatus`: Get subscriptions based on status.\r\n- `subscriptionsScheduledBetweenDate`: Get active subscriptions scheduled between dates.\r\n- `subscriptionsUpdatedBetweenDate`: Get subscriptions updated between dates.\r\n- `subscriptionsCreatedBetweenDates`: Get subscriptions created between date.\r\n- `executionsBetweenDate`: Get executions between dates."
                                            },
                                            "reason": {
                                                "type": "string",
                                                "description": "Reason why the template was created.",
                                                "nullable": true
                                            },
                                            "behalfOf": {
                                                "type": "string",
                                                "description": "On behalf of which user the template was created.",
                                                "nullable": true
                                            },
                                            "params": {
                                                "type": "array",
                                                "description": "Information about the template params.",
                                                "items": {
                                                    "type": "object",
                                                    "description": "Param details.",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "description": "Template param type, which can be `string` for the `subscriptionsWithStatus` template type, or `date` for the other cases.",
                                                            "enum": [
                                                                "string",
                                                                "date"
                                                            ]
                                                        },
                                                        "format": {
                                                            "type": "string",
                                                            "description": "Template param format, such as `yyyy-MM-dd` for `beginDate` or `endDate`. Not applicable to the `subscriptionsWithStatus` type."
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Template param name, which can relate to the template status (`status`) or dates (`beginDate`, `endDate`).",
                                                            "enum": [
                                                                "status",
                                                                "beginDate",
                                                                "endDate"
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "account": "fashionstore",
                                        "name": "subscriptionsWithStatus",
                                        "description": "Get subscriptions based on status",
                                        "reason": null,
                                        "behalfOf": null,
                                        "params": [
                                            {
                                                "type": "string",
                                                "name": "status"
                                            }
                                        ]
                                    },
                                    {
                                        "account": "fashionstore",
                                        "name": "subscriptionsScheduledBetweenDate",
                                        "description": "Get active subscriptions scheduled between date",
                                        "reason": null,
                                        "behalfOf": null,
                                        "params": [
                                            {
                                                "type": "date",
                                                "format": "yyyy-MM-dd",
                                                "name": "beginDate"
                                            },
                                            {
                                                "type": "date",
                                                "format": "yyyy-MM-dd",
                                                "name": "endDate"
                                            }
                                        ]
                                    },
                                    {
                                        "account": "fashionstore",
                                        "name": "subscriptionsUpdatedBetweenDate",
                                        "description": "Get subscriptions updated between date",
                                        "reason": null,
                                        "behalfOf": null,
                                        "params": [
                                            {
                                                "type": "date",
                                                "format": "yyyy-MM-dd",
                                                "name": "beginDate"
                                            },
                                            {
                                                "type": "date",
                                                "format": "yyyy-MM-dd",
                                                "name": "endDate"
                                            }
                                        ]
                                    },
                                    {
                                        "account": "fashionstore",
                                        "name": "subscriptionsCreatedBetweenDate",
                                        "description": "Get subscriptions created between date",
                                        "reason": null,
                                        "behalfOf": null,
                                        "params": [
                                            {
                                                "type": "date",
                                                "format": "yyyy-MM-dd",
                                                "name": "beginDate"
                                            },
                                            {
                                                "type": "date",
                                                "format": "yyyy-MM-dd",
                                                "name": "endDate"
                                            }
                                        ]
                                    },
                                    {
                                        "account": "fashionstore",
                                        "name": "executionsBetweenDate",
                                        "description": "Get executions between date",
                                        "reason": null,
                                        "behalfOf": null,
                                        "params": [
                                            {
                                                "type": "date",
                                                "format": "yyyy-MM-dd",
                                                "name": "beginDate"
                                            },
                                            {
                                                "type": "date",
                                                "format": "yyyy-MM-dd",
                                                "name": "endDate"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pvt/reports/{reportName}/documents/{documentId}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get report document details",
                "description": "Retrieve information about a report document, searching by document ID. In the status code `200 OK` response, you get a link to download the report.\r\n\r\n>❗ Before using this endpoint, you must create a report with the [Generate report](https://developers.vtex.com/docs/api-reference/subscriptions-api-v3#post-/api/rns/pvt/reports/-reportName-/documents) endpoint and get the document ID.",
                "parameters": [
                    {
                        "name": "reportName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the report type, which must be previously created for your store using the [Generate report](https://developers.vtex.com/docs/api-reference/subscriptions-api-v3#post-/api/rns/pvt/reports/-reportName-/documents) endpoint. The possible values are:\r\n- `subscriptionsWithStatus`\r\n- `subscriptionsScheduledBetweenDate`\r\n- `subscriptionsUpdatedBetweenDate`\r\n- `subscriptionsCreatedBetweenDate`\r\n- `executionsBetweenDate`",
                        "schema": {
                            "type": "string",
                            "example": "subscriptionsWithStatus"
                        }
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "required": true,
                        "description": "Report document ID. You get this value after you create a report template for your store using the [Generate report](https://developers.vtex.com/docs/api-reference/subscriptions-api-v3#post-/api/rns/pvt/reports/-reportName-/documents) endpoint.",
                        "schema": {
                            "type": "string",
                            "example": "2804f3ab-5a51-11ef-b37f-f89ffae09a60"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportResponse"
                                },
                                "example": {
                                    "id": "7849df9f-00d4-11ef-8452-1254acca1d85",
                                    "finished": true,
                                    "recordsProcessed": 63,
                                    "recordsSum": 63,
                                    "startDate": "2024-03-22T18:16:50.7487312Z",
                                    "lastUpdateTime": "2024-04-22T18:16:50.7487312Z",
                                    "completedDate": "2024-04-22T18:16:50.7487312Z",
                                    "errorCount": null,
                                    "percentageProcessed": 100,
                                    "enqueueDate": "2024-04-22T18:16:50.7487312Z",
                                    "email": "receiver@email.com",
                                    "canceled": false,
                                    "outputType": "CSV",
                                    "zipped": false,
                                    "linkToDownload": "https://s3.amazonaws.com/OMSReport/v3/_finished/accountname/7849df9f-00d4-11ef-8452-1254acca1d85//files/47363271-b655-11ed-83ab-12dbed7de2a7.csv?AWSAccessKeyId=ASIAQYXXCHIYPSJDRNHB&Expires=1724945014&x-amz-security-token=IQoJb3JpZ2luX2VjEMj%2Feq6V1w8z3NGlnfhvSp70Q80qvQUIwP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgwwNTMxMzE0OTE4ODgiDCM0JATV%2FwXQvXyovCqRBW%2F14aC5J3plQR%2BzKbpddyDnoAstfgJo1MfR0yel3uRzixrSRFE033V4%2B8cN7ez5Lr0ymGifnB14ONZ35RtM4PgQvuV0fs8If6cw8%3D%3D&Signature=7yZbA%2BGaYdPUkdxFXqy9W8GGHuo%3D",
                                    "lastErrorMessage": null,
                                    "statusMessage": "Report 7849df9f-00d4-11ef-8452-1254acca1d85 was completed at 15:23 and sent to receiver@email.com."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pvt/reports/{reportName}/documents": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Generate report",
                "description": "Create a report in the format of a `csv` file and send it via email to a given user.\r\n\r\n>ℹ️ In the response body of the current endpoint, you get the document ID required for the [Get report document details](https://developers.vtex.com/docs/api-reference/subscriptions-api-v3#get-/api/rns/pvt/reports/-reportName-/documents/-documentId-) endpoint.\r\n\r\nYou can generate the following types of report:\r\n\r\n- `subscriptionsWithStatus`: Get subscriptions based on subscription cycle execution status.\r\n  - **Query param required:** `status`.\r\n\r\n- `subscriptionsScheduledBetweenDate`: Get active subscriptions scheduled between dates.\r\n  - **Query params required:** `beginDate` and `endDate`.\r\n\r\n- `subscriptionsUpdatedBetweenDate`: Get subscriptions updated between dates.\r\n  - **Query params required:** `beginDate` and `endDate`.\r\n\r\n- `subscriptionsCreatedBetweenDate`: Get subscriptions created between dates.\r\n  - **Query params required:** `beginDate` and `endDate`.\r\n\r\n- `executionsBetweenDate`: Get executions between dates.\r\n  - **Query params required:** `beginDate` and `endDate`.\r\n\r\n>ℹ️ You can also use the [List report templates](https://developers.vtex.com/docs/api-reference/subscriptions-api-v3#get-/api/rns/pvt/reports) endpoint to discover the types of reports you can generate.",
                "parameters": [
                    {
                        "name": "reportName",
                        "in": "path",
                        "required": true,
                        "description": "Name of the type of report you wish to generate. The following values are accepted:\r\n- `subscriptionsWithStatus`\r\n- `subscriptionsScheduledBetweenDate`\r\n- `subscriptionsUpdatedBetweenDate`\r\n- `subscriptionsCreatedBetweenDate`\r\n- `executionsBetweenDate`",
                        "schema": {
                            "type": "string",
                            "example": "subscriptionsWithStatus"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "description": "The report will be sent to the email in this field. When no email is provided, the report is sent to the email of the user making the request.",
                        "schema": {
                            "type": "string",
                            "example": "receiver@email.com"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "description": "Subscription cycle execution status. This field is required only for the `subscriptionsWithStatus` report type, and the possible values are:\r\n- `TRIGGERED`: Execution has been triggered.\r\n- `IN_PROCESS`: Execution is being processed by the system.\r\n- `FAILURE`: An internal error occurred during the subscription execution.\r\n- `SUCCESS`: Successful cycle processing.\r\n- `EXPIRED`: The subscription was not renewed, and the period for which it was valid has ended.\r\n- `ORDER_ERROR`: Cycle was not executed due to an error in order placement.\r\n- `PAYMENT_ERROR`: Cycle was not executed due to an error in the payment.\r\n- `SKIPED`: A subscription cycle execution was skipped, and the subscription will be executed in the next cycle.\r\n- `SUCCESS_WITH_NO_ORDER`: Cycle was executed successfully, and the linked order has no items.\r\n- `SUCCESS_WITH_PARTIAL_ORDER`: Cycle was executed successfully, and has a linked partial order.\r\n- `RE_TRIGGERED`: Execution retry was triggered manually.\r\n- `SCHEDULE_UPDATED`: The next subscription cycle execution date has been updated.",
                        "schema": {
                            "type": "string",
                            "example": "SUCCESS"
                        }
                    },
                    {
                        "name": "beginDate",
                        "in": "query",
                        "required": false,
                        "description": "Beginning date in the format `YYYY-MM-DD`. This field is required for all report types, except for the `subscriptionsWithStatus` type.",
                        "schema": {
                            "type": "string",
                            "example": "2024-07-01"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "required": false,
                        "description": "Ending date in the format `YYYY-MM-DD`. This field is required for all report types, except for the `subscriptionsWithStatus` type.",
                        "schema": {
                            "type": "string",
                            "example": "2024-08-01"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportResponse"
                                },
                                "example": {
                                    "id": "7849df9f-00d4-11ef-8452-1254acca1d85",
                                    "finished": false,
                                    "recordsProcessed": 0,
                                    "recordsSum": null,
                                    "startDate": null,
                                    "lastUpdateTime": null,
                                    "completedDate": null,
                                    "errorCount": null,
                                    "percentageProcessed": 0,
                                    "enqueueDate": "2024-04-22T18:16:50.7487312Z",
                                    "email": "receiver@email.com",
                                    "canceled": false,
                                    "outputType": "CSV",
                                    "zipped": false,
                                    "linkToDownload": null,
                                    "lastErrorMessage": null,
                                    "statusMessage": "Report 7849df9f-00d4-11ef-8452-1254acca1d85 is being processed (0.00% completed). The file will be sent to receiver@email.com."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/subscriptions/{id}": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get subscription details by ID",
                "description": "Retrieves information about a subscription, searching by subscription ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "[Subscription](https://help.vtex.com/en/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453) ID.",
                        "schema": {
                            "type": "string",
                            "example": "F35A8B497EA9E5A6D8F3778CBBA4C9E3"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionGroupResponse"
                                },
                                "example": {
                                    "id": "F35A8B497EA9E5A6D8F3778CBBA4C9E3",
                                    "customerId": "5aff33ec-5302-4580-a4ed-be9aa32ba3db",
                                    "customerEmail": "customer@email.com",
                                    "title": null,
                                    "status": "ACTIVE",
                                    "isSkipped": false,
                                    "nextPurchaseDate": "2024-08-21T12:00:00Z",
                                    "lastPurchaseDate": "2024-08-19T00:00:00Z",
                                    "plan": {
                                        "id": "vtex.subscription.ana-plan",
                                        "frequency": {
                                            "periodicity": "DAILY",
                                            "interval": 2
                                        },
                                        "validity": {
                                            "begin": "2024-08-01T00:00:00Z",
                                            "end": null
                                        },
                                        "purchaseDay": "Not_Applicable"
                                    },
                                    "shippingAddress": {
                                        "addressId": "5028945524109",
                                        "addressType": "residential"
                                    },
                                    "purchaseSettings": {
                                        "paymentMethod": {
                                            "paymentAccountId": "B2BBDD0F2E4B47FC9E48D2DA99C318EF",
                                            "paymentSystem": "2",
                                            "installments": 1,
                                            "paymentSystemName": "creditCard",
                                            "paymentSystemGroup": "creditCard"
                                        },
                                        "currencyCode": "BRL",
                                        "selectedSla": "Normal",
                                        "salesChannel": "1",
                                        "seller": "1"
                                    },
                                    "cycleCount": 9,
                                    "createdAt": "2024-08-01T12:31:55.7308301Z",
                                    "lastUpdate": "2024-08-19T12:16:51.0237801Z",
                                    "items": [
                                        {
                                            "id": "0213AB4188FE4007A865AD33D972FA37",
                                            "skuId": "9",
                                            "quantity": 1,
                                            "isSkipped": false,
                                            "status": "ACTIVE",
                                            "originalOrderId": "1451256157912-01",
                                            "cycleCount": 9,
                                            "priceAtSubscriptionDate": 736.0,
                                            "manualPrice": 736.0,
                                            "attachments": [
                                                {
                                                    "name": "printMessage",
                                                    "content": {
                                                        "printMessage": "Hello"
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    "lastCycleId": "F35A8B497EA9E5A6D8F3778CBBA4C9E3-20240819",
                                    "customData": null
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Update subscription by ID",
                "description": "Updates a subscription, searching by subscription ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "[Subscription](https://help.vtex.com/en/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453) ID.",
                        "schema": {
                            "type": "string",
                            "example": "1E7886FC8E45FF38C527897D749584F4"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionUpdateRequestV3"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionGroupResponse"
                                },
                                "example": {
                                    "id": "8B91E3077495AB982117AD0BA4A5829D",
                                    "customerId": "c00a9529-806b-4ef3-a5f7-ed7846a66d3d",
                                    "customerEmail": "customer@email.com",
                                    "title": null,
                                    "status": "PAUSED",
                                    "isSkipped": false,
                                    "nextPurchaseDate": "2024-09-21T15:53:27.0665798Z",
                                    "lastPurchaseDate": "2024-08-21T15:53:27.0665798Z",
                                    "plan": {
                                        "id": "store.subscription.basic",
                                        "frequency": {
                                            "periodicity": "DAILY",
                                            "interval": 1
                                        },
                                        "validity": {
                                            "begin": "2024-09-21T15:53:27.0665798Z",
                                            "end": null
                                        },
                                        "purchaseDay": "Not_Applicable"
                                    },
                                    "shippingAddress": {
                                        "addressId": "5028945524109",
                                        "addressType": "residential"
                                    },
                                    "purchaseSettings": {
                                        "paymentMethod": {
                                            "paymentAccountId": "B2BBDD0F2E4B47FC9E48D2DA99C318EF",
                                            "paymentSystem": "6",
                                            "installments": 1,
                                            "paymentSystemName": "Boleto Bancário",
                                            "paymentSystemGroup": "bankInvoice"
                                        },
                                        "currencyCode": "BRL",
                                        "selectedSla": "Normal",
                                        "salesChannel": "1",
                                        "seller": "1"
                                    },
                                    "cycleCount": 0,
                                    "createdAt": "2024-08-21T15:53:27.0665798Z",
                                    "lastUpdate": "0001-01-01T00:00:00",
                                    "items": [
                                        {
                                            "id": "0F821B992DD848028E3A82C40DBCD834",
                                            "skuId": "9",
                                            "quantity": 1,
                                            "isSkipped": false,
                                            "status": "ACTIVE",
                                            "cycleCount": 0,
                                            "manualPrice": 736.0,
                                            "attachments": null
                                        }
                                    ],
                                    "lastCycleId": null,
                                    "customData": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/subscriptions": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "List subscriptions",
                "description": "List subscriptions filtering by some arguments.",
                "parameters": [
                    {
                        "name": "customerEmail",
                        "in": "query",
                        "description": "Customer that owns the subscription. Defaults to the current logged user.",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Current subscription status",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "addressId",
                        "in": "query",
                        "description": "Id from the address used as shipping address",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "paymentId",
                        "in": "query",
                        "description": "Id from the payment used as payment method",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "planId",
                        "in": "query",
                        "description": "Id from the plan that the subscription belongs to",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "nextPurchaseDate",
                        "in": "query",
                        "description": "Date for the next cycle",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "originalOrderId",
                        "in": "query",
                        "description": "Id from the order that generated the subscription",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page used for pagination",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Page size used for pagination",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 15
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested subscriptions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubscriptionGroupResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Create subscription",
                "description": "Creates a new subscription.",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionGroupResponse"
                                },
                                "example": {
                                    "id": "8B91E3077495AB982117AD0BA4A5829D",
                                    "customerId": "c00a9529-806b-4ef3-a5f7-ed7846a66d3d",
                                    "customerEmail": "customer@email.com",
                                    "title": null,
                                    "status": "PAUSED",
                                    "isSkipped": false,
                                    "nextPurchaseDate": "2024-09-21T15:53:27.0665798Z",
                                    "lastPurchaseDate": "2024-08-21T15:53:27.0665798Z",
                                    "plan": {
                                        "id": "store.subscription.basic",
                                        "frequency": {
                                            "periodicity": "DAILY",
                                            "interval": 1
                                        },
                                        "validity": {
                                            "begin": "2024-09-21T15:53:27.0665798Z",
                                            "end": null
                                        },
                                        "purchaseDay": "Not_Applicable"
                                    },
                                    "shippingAddress": {
                                        "addressId": "5028945524109",
                                        "addressType": "residential"
                                    },
                                    "purchaseSettings": {
                                        "paymentMethod": {
                                            "paymentAccountId": "B2BBDD0F2E4B47FC9E48D2DA99C318EF",
                                            "paymentSystem": "6",
                                            "installments": 1,
                                            "paymentSystemName": "Boleto Bancário",
                                            "paymentSystemGroup": "bankInvoice"
                                        },
                                        "currencyCode": "BRL",
                                        "selectedSla": "Normal",
                                        "salesChannel": "1",
                                        "seller": "1"
                                    },
                                    "cycleCount": 0,
                                    "createdAt": "2024-08-21T15:53:27.0665798Z",
                                    "lastUpdate": "0001-01-01T00:00:00",
                                    "items": [
                                        {
                                            "id": "0F821B992DD848028E3A82C40DBCD834",
                                            "skuId": "9",
                                            "quantity": 1,
                                            "isSkipped": false,
                                            "status": "ACTIVE",
                                            "cycleCount": 0,
                                            "manualPrice": 736.0,
                                            "attachments": null
                                        }
                                    ],
                                    "lastCycleId": null,
                                    "customData": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/subscriptions/{id}/items/{itemId}": {
            "delete": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Remove item from subscription",
                "description": "Removes a specific item from a given subscription.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id from the target subscription",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "Id from the subscription item that will be removed",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Edit item on subscription",
                "description": "Edit a given item on a specific subscription.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Id from the target subscription",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "description": "Id from the target item",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateItemInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subscription updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionGroupResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/subscriptions/{id}/items": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Add item to subscription",
                "description": "Add a new item to a given subscription.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID from the target subscription",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionThinItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subscription successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionGroupResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/subscriptions/{id}/simulate": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Calculate the current prices for a specific subscription",
                "description": "Simulates an order made by the specific subscription on checkout and retrieves the current price for items and shipping.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Id from the target subscription",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Simulation result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimulateResponseVO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/subscriptions/simulate": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Calculate the current prices for the provided subscription template",
                "description": "Simulates an order made by subscriptions on checkout and retrieves the current price for items and shipping.",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionGroupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Simulation result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimulateResponseVO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/pub/subscriptions/{subscriptionId}/conversation-message": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get conversation messages",
                "description": "Retrieve all conversation messages sent to a customer regarding a given subscription.",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "ID of the subscription.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "123456789abc"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "Message ID."
                                            },
                                            "from": {
                                                "type": "object",
                                                "description": "Information regarding the message sender.",
                                                "properties": {
                                                    "conversationRelatedTo": {
                                                        "type": "string",
                                                        "description": "ID of the subscription related to the message."
                                                    },
                                                    "conversationSubject": {
                                                        "type": "string",
                                                        "description": "Subject of conversation."
                                                    },
                                                    "emailAlias": {
                                                        "type": "string",
                                                        "description": "Email alias."
                                                    },
                                                    "aliasMaskType": {
                                                        "type": "string",
                                                        "description": "Alias mask type."
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "description": "Email address."
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name."
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "description": "Role."
                                                    }
                                                }
                                            },
                                            "to": {
                                                "type": "array",
                                                "description": "Information regarding the message receivers.",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "conversationRelatedTo": {
                                                            "type": "string",
                                                            "description": "ID of the subscription related to the message."
                                                        },
                                                        "conversationSubject": {
                                                            "type": "string",
                                                            "description": "Subject of conversation."
                                                        },
                                                        "emailAlias": {
                                                            "type": "string",
                                                            "description": "Email alias."
                                                        },
                                                        "aliasMaskType": {
                                                            "type": "string",
                                                            "description": "Alias mask type."
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "description": "Email address."
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "description": "Name."
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "description": "Role."
                                                        }
                                                    }
                                                }
                                            },
                                            "subject": {
                                                "type": "string",
                                                "description": "Message subject."
                                            },
                                            "firstWords": {
                                                "type": "string",
                                                "description": "First words of the message text."
                                            },
                                            "body": {
                                                "type": "string",
                                                "description": "HTML content of the message's body."
                                            },
                                            "hasAttachment": {
                                                "type": "boolean",
                                                "description": "Indicates whether the message has at least one attachment."
                                            },
                                            "attachmentNames": {
                                                "type": "array",
                                                "description": "Attachment names.",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "date": {
                                                "type": "string",
                                                "description": "Date of message."
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "from": {
                                            "conversationRelatedTo": "string",
                                            "conversationSubject": "string",
                                            "emailAlias": "string",
                                            "aliasMaskType": "string",
                                            "email": "string",
                                            "name": "string",
                                            "role": "string"
                                        },
                                        "to": [
                                            {
                                                "conversationRelatedTo": "string",
                                                "conversationSubject": "string",
                                                "emailAlias": "string",
                                                "aliasMaskType": "string",
                                                "email": "string",
                                                "name": "string",
                                                "role": "string"
                                            }
                                        ],
                                        "subject": "string",
                                        "firstWords": "string",
                                        "body": "string",
                                        "hasAttachment": true,
                                        "attachmentNames": [
                                            "string"
                                        ],
                                        "date": "2021-08-31T22:50:53.564Z"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api/rns/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get subscription settings",
                "description": "List the details of the settings of a given subscription.",
                "operationId": "GetSettings",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/settings"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Settings"
                ],
                "summary": "Edit subscriptions settings",
                "description": "Edits Subscriptions settings in your store.",
                "operationId": "EditSettings",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "Type of the content being sent.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "default": "application/json"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/settings"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/settings"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "appKey": [],
            "appToken": []
        },
        {
            "VtexIdclientAutCookie": []
        }
    ],
    "components": {
        "securitySchemes": {
            "appKey": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppKey",
                "description": "Unique identifier of the [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys)."
            },
            "appToken": {
                "type": "apiKey",
                "in": "header",
                "name": "X-VTEX-API-AppToken",
                "description": "Secret token of the [application key](https://developers.vtex.com/docs/guides/api-authentication-using-application-keys)."
            },
            "VtexIdclientAutCookie": {
                "type": "apiKey",
                "in": "header",
                "name": "VtexIdclientAutCookie",
                "description": "[User token](https://developers.vtex.com/docs/guides/api-authentication-using-user-tokens), valid for 24 hours."
            }
        },
        "schemas": {
            "SimulationItemResult": {
                "type": "object",
                "description": "Simulation information about an item.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "SKU ID.",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Quantity of units for the given SKU."
                    },
                    "unitPrice": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Price per [kit](https://help.vtex.com/tutorial/what-is-a-kit--5ov5s3eHM4AqAAgqWwoc28) unit, when applicable.",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Subscription cycle status in the simulation."
                    },
                    "price": {
                        "type": "integer",
                        "description": "Price in cents.",
                        "nullable": true
                    },
                    "sellingPrice": {
                        "type": "integer",
                        "description": "Selling price in cents."
                    },
                    "manualPrice": {
                        "type": "integer",
                        "description": "[Manual price](https://help.vtex.com/en/tutorial/change-the-price-of-an-item-in-the-shopping-cart--7Cd37aCAmtL1qmoZJJvjNf) in cents.",
                        "nullable": true
                    }
                }
            },
            "SubscriptionCycleResponse": {
                "type": "object",
                "description": "Object with information about the subscription cycle.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Cycle ID. When the `cycleCount` value is `1`, the `id` value will be the same as the `subscriptionId` value."
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "[Subscription](https://help.vtex.com/en/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453) ID."
                    },
                    "workflowId": {
                        "type": "string",
                        "description": "Code that identifies the subscription in the [order flow](https://help.vtex.com/en/tutorial/order-flow-and-status--tutorials_196)."
                    },
                    "status": {
                        "type": "string",
                        "description": "Subscription cycle execution status. The possible values are:\r\n- `TRIGGERED`: Execution has been triggered. \r\n- `IN_PROCESS`: Execution is being processed by the system.\r\n- `FAILURE`: An internal error occurred during the subscription execution.\r\n- `SUCCESS`: Successful cycle processing.\r\n- `EXPIRED`: The subscription was not renewed, and the period for which it was valid has ended.\r\n- `ORDER_ERROR`: Cycle was not executed due to an error in order placement.\r\n- `PAYMENT_ERROR`: Cycle was not executed due to an error in the payment.\r\n- `SKIPED`: A subscription cycle execution was skipped, and the subscription will be executed in the next cycle.\r\n- `SUCCESS_WITH_NO_ORDER`: Cycle was executed successfully, and the linked order has no items.\r\n- `SUCCESS_WITH_PARTIAL_ORDER`: Cycle was executed successfully, and has a linked partial order.\r\n- `RE_TRIGGERED`: Execution retry was triggered manually.\r\n- `SCHEDULE_UPDATED`: The next subscription cycle execution date has been updated.",
                        "enum": [
                            "TRIGGERED",
                            "IN_PROCESS",
                            "FAILURE",
                            "SUCCESS",
                            "EXPIRED",
                            "ORDER_ERROR",
                            "PAYMENT_ERROR",
                            "SKIPED",
                            "SUCCESS_WITH_NO_ORDER",
                            "SUCCESS_WITH_PARTIAL_ORDER",
                            "RE_TRIGGERED",
                            "SCHEDULE_UPDATED"
                        ]
                    },
                    "customerEmail": {
                        "type": "string",
                        "description": "Customer email."
                    },
                    "customerId": {
                        "type": "string",
                        "description": "Customer ID."
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Current date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`."
                    },
                    "lastUpdate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Subscription cycle last update date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`."
                    },
                    "cycleCount": {
                        "type": "integer",
                        "description": "The cycle determines the position of an order counting from when the shopper subscribed. The original order that creates the subscription corresponds to cycle count `0`, the first subscription order corresponds to `1`, the second corresponds to `2`, and so on."
                    },
                    "isInRetry": {
                        "type": "boolean",
                        "description": "Defines if the cycle execution is in retry (`true`), or not (`false`)."
                    },
                    "message": {
                        "type": "string",
                        "description": "Cycle execution message.",
                        "nullable": true
                    },
                    "friendlyMessage": {
                        "type": "string",
                        "description": "Cycle execution friendly message.",
                        "nullable": true
                    },
                    "plan": {
                        "$ref": "#/components/schemas/PlanResponse"
                    },
                    "orderInfo": {
                        "type": "object",
                        "description": "Subscription order information.",
                        "properties": {
                            "orderId": {
                                "type": "string",
                                "description": "Order ID."
                            },
                            "orderGroup": {
                                "type": "string",
                                "description": "Order group ID."
                            },
                            "paymentURL": {
                                "type": "string",
                                "description": "Order payment URL.",
                                "nullable": true
                            },
                            "value": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Order value in cents."
                            }
                        }
                    },
                    "context": {
                        "type": "object",
                        "description": "Subscription cycle context.",
                        "properties": {
                            "items": {
                                "type": "array",
                                "description": "Information about subscription cycle items.",
                                "nullable": true,
                                "items": {
                                    "type": "object",
                                    "description": "Subscription item information.",
                                    "properties": {
                                        "subscriptionItemId": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "Subscription item ID."
                                        },
                                        "skuId": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "SKU ID."
                                        },
                                        "quantity": {
                                            "type": "integer",
                                            "description": "Quantity of item units.",
                                            "nullable": true
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "Subscription status.",
                                            "nullable": true,
                                            "enum": [
                                                "ACTIVE",
                                                "PAUSED",
                                                "CANCELED",
                                                "EXPIRED",
                                                "MISSING"
                                            ]
                                        },
                                        "isSkipped": {
                                            "type": "boolean",
                                            "description": "Defines if the customer asked to skip the item in the next subscription order (`true`), or not (`false`).",
                                            "nullable": true
                                        },
                                        "cycleCount": {
                                            "type": "integer",
                                            "description": "The cycle determines the position of an order counting from when the shopper subscribed. The original order that creates the subscription corresponds to cycle count `0`, the first subscription order corresponds to `1`, the second corresponds to `2`, and so on.",
                                            "nullable": true
                                        }
                                    }
                                }
                            },
                            "paymentSystem": {
                                "type": "string",
                                "description": "Payment system ID.",
                                "nullable": true
                            },
                            "paymentSystemName": {
                                "type": "string",
                                "description": "Payment system name.",
                                "nullable": true
                            },
                            "paymentSystemGroup": {
                                "type": "string",
                                "description": "Payment system group.",
                                "nullable": true
                            },
                            "paymentAccountId": {
                                "type": "string",
                                "description": "Information about the customer profile and their documents, such as a credit card number. You can also retrieve that information using the [Get client profile by email](https://developers.vtex.com/docs/api-reference/checkout-api#get-/api/checkout/pub/profiles) endpoint.",
                                "nullable": true
                            },
                            "addressId": {
                                "type": "string",
                                "description": "Shipping address ID.",
                                "nullable": true
                            },
                            "addressType": {
                                "type": "string",
                                "description": "Shipping address type.",
                                "nullable": true
                            },
                            "catalogAttachment": {
                                "type": "string",
                                "description": "[Attachment](https://help.vtex.com/en/tutorial/what-is-an-attachment--aGICk0RVbqKg6GYmQcWUm) content, when applicable.",
                                "nullable": true
                            }
                        }
                    },
                    "simulationItems": {
                        "type": "array",
                        "description": "Subscription simulation items.",
                        "items": {
                            "$ref": "#/components/schemas/SimulationItemResult"
                        },
                        "nullable": true
                    }
                }
            },
            "StorePlan": {
                "type": "object",
                "description": "Subscription [plan](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) object.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Subscription plan ID."
                    },
                    "frequencies": {
                        "type": "array",
                        "description": "Array of the plan frequencies.",
                        "items": {
                            "type": "object",
                            "description": "Information about the plan periodicity and interval.",
                            "properties": {
                                "periodicity": {
                                    "type": "string",
                                    "description": "Repurchase frequency requested by the customer, defines the subscriptions recurrence period.",
                                    "nullable": true,
                                    "enum": [
                                        "DAILY",
                                        "WEEKLY",
                                        "MONTHLY",
                                        "YEARLY"
                                    ]
                                },
                                "interval": {
                                    "type": "integer",
                                    "description": "Time interval configured between subscription orders, which depends on the periodicity. For a `DAILY` periodicity, the value will be days, for `MONTHLY` it will be months, and so on."
                                }
                            }
                        }
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Defines if the plan is active (`true`) or not (`false`)."
                    },
                    "importInProgress": {
                        "type": "boolean",
                        "description": "Defines if a SKU importing process is in progress (`true`) or not (`false`)."
                    },
                    "attachmentId": {
                        "type": "integer",
                        "description": "Plan attachment ID."
                    },
                    "isValid": {
                        "type": "boolean",
                        "description": "Defines if the plan is valid (`true`) or not (`false`)."
                    },
                    "validationMessages": {
                        "type": "array",
                        "description": "List of validation messages.",
                        "nullable": true,
                        "items": {
                            "type": "string",
                            "description": "Validation message."
                        }
                    },
                    "validity": {
                        "type": "object",
                        "description": "Information about the period during which the subscription plan will be valid.",
                        "nullable": true,
                        "properties": {
                            "begin": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Subscription plan beginning date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`."
                            },
                            "end": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Subscription plan ending date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.",
                                "nullable": true
                            }
                        }
                    },
                    "purchaseDays": {
                        "type": "array",
                        "description": "Time reference in which subscription orders will be created.",
                        "items": {
                            "type": "string",
                            "description": "It will depend on the cycle periodicity, for `WEEKLY` subscriptions, for example, the purchase day could be `Sunday`. For `MONTHLY`, would be `7`, as in the 7th day of the month."
                        }
                    }
                }
            },
            "ReportResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Report document ID."
                    },
                    "finished": {
                        "type": "boolean",
                        "description": "Defines if the report is finished (`true`) or not (`false`)."
                    },
                    "recordsProcessed": {
                        "type": "integer",
                        "description": "Number of records processed at the moment."
                    },
                    "recordsSum": {
                        "type": "integer",
                        "description": "Total number of records to be processed.",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Report starting date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values).",
                        "nullable": true
                    },
                    "lastUpdateTime": {
                        "type": "string",
                        "description": "Report last update date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values).",
                        "nullable": true
                    },
                    "completedDate": {
                        "type": "string",
                        "description": "Report completion date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values).",
                        "nullable": true
                    },
                    "errorCount": {
                        "type": "integer",
                        "description": "Error counting numbers, when applicable.",
                        "nullable": true
                    },
                    "percentageProcessed": {
                        "type": "number",
                        "description": "Report processing percentage."
                    },
                    "enqueueDate": {
                        "type": "string",
                        "description": "Request enqueue date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values).",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "description": "Email of the user that receives the report."
                    },
                    "canceled": {
                        "type": "boolean",
                        "description": "Defines if the report is canceled (`true`) or not (`false`)."
                    },
                    "outputType": {
                        "type": "string",
                        "description": "Report file extension.",
                        "nullable": true
                    },
                    "zipped": {
                        "type": "boolean",
                        "description": "Defines if the report file is zipped (`true`) or not (`false`)."
                    },
                    "linkToDownload": {
                        "type": "string",
                        "description": "Link do download the report.",
                        "nullable": true
                    },
                    "lastErrorMessage": {
                        "type": "string",
                        "description": "Error last message, when applicable.",
                        "nullable": true
                    },
                    "statusMessage": {
                        "type": "string",
                        "description": "Report status message."
                    }
                }
            },
            "PlanResponse": {
                "type": "object",
                "description": "Subscription [plan](https://help.vtex.com/en/tutorial/subscription-plans-beta--5kczKRqHEsrs1tYtRcY8wR) object.",
                "required": [
                    "frequency",
                    "id",
                    "purchaseDay",
                    "validity"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Subscription plan ID.",
                        "nullable": true
                    },
                    "frequency": {
                        "type": "object",
                        "description": "Subscription plan frequency.",
                        "required": [
                            "interval",
                            "periodicity"
                        ],
                        "properties": {
                            "periodicity": {
                                "type": "string",
                                "description": "Plan repurchase frequency, defines the subscriptions recurrence period.",
                                "nullable": true,
                                "enum": [
                                    "DAILY",
                                    "WEEKLY",
                                    "MONTHLY",
                                    "YEARLY"
                                ]
                            },
                            "interval": {
                                "type": "integer",
                                "description": "Time interval configured between subscription orders, which depends on the periodicity. For a `DAILY` periodicity, the value will be days, for `MONTHLY` it will be months, and so on."
                            }
                        }
                    },
                    "validity": {
                        "type": "object",
                        "description": "Information about the period during which the subscription plan will be valid.",
                        "required": [
                            "begin"
                        ],
                        "properties": {
                            "begin": {
                                "type": "string",
                                "description": "Subscription plan beginning date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`."
                            },
                            "end": {
                                "type": "string",
                                "description": "Subscription plan ending date and time in [UTC time format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.",
                                "nullable": true
                            }
                        }
                    },
                    "purchaseDay": {
                        "type": "string",
                        "description": "Time reference in which subscription orders will be created. It will depend on the cycle periodicity, for `WEEKLY` subscriptions, for example, the purchase day could be `Sunday`. For `MONTHLY`, would be `7`, as in the 7th day of the month."
                    }
                }
            },
            "SubscriptionGroupResponse": {
                "type": "object",
                "description": "Information about a given subscription.",
                "required": [
                    "createdAt",
                    "customerEmail",
                    "customerId",
                    "cycleCount",
                    "id",
                    "isSkipped",
                    "items",
                    "lastUpdate",
                    "nextPurchaseDate",
                    "plan",
                    "purchaseSettings",
                    "shippingAddress",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "[Subscription](https://help.vtex.com/en/tutorial/how-subscriptions-work--frequentlyAskedQuestions_4453) ID."
                    },
                    "customerId": {
                        "type": "string",
                        "description": "Customer ID."
                    },
                    "customerEmail": {
                        "type": "string",
                        "description": "Customer email."
                    },
                    "title": {
                        "type": "string",
                        "description": "Subscription title.",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Subscription status.",
                        "enum": [
                            "ACTIVE",
                            "PAUSED",
                            "CANCELED",
                            "EXPIRED",
                            "MISSING"
                        ]
                    },
                    "isSkipped": {
                        "type": "boolean",
                        "description": "Defines if the customer asked to skip the next subscription order (`true`), or not (`false`)."
                    },
                    "nextPurchaseDate": {
                        "type": "string",
                        "description": "Next purchase date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`."
                    },
                    "lastPurchaseDate": {
                        "type": "string",
                        "description": "Last purchase date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.",
                        "nullable": true
                    },
                    "plan": {
                        "$ref": "#/components/schemas/PlanResponse"
                    },
                    "shippingAddress": {
                        "type": "object",
                        "description": "Information about the subscription shipping address.",
                        "required": [
                            "addressId",
                            "addressType"
                        ],
                        "properties": {
                            "addressId": {
                                "type": "string",
                                "description": "Shipping address ID or [pickup point](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R) ID, according to the shipping address type."
                            },
                            "addressType": {
                                "type": "string",
                                "description": "Type of the address. The possible values are `residential`, when the customer gives an address for delivery, or `pickup`, when the customer picks the order at a pickup point.",
                                "enum": [
                                    "residential",
                                    "pickup"
                                ]
                            }
                        }
                    },
                    "purchaseSettings": {
                        "type": "object",
                        "description": "Object with purchase information.",
                        "required": [
                            "currencyCode",
                            "paymentMethod"
                        ],
                        "properties": {
                            "paymentMethod": {
                                "type": "object",
                                "description": "[Payment method](https://help.vtex.com/en/tutorial/difference-between-payment-methods-and-payment-conditions--3azJenhGFyUy2gsocms42Q) information.",
                                "required": [
                                    "paymentSystem"
                                ],
                                "properties": {
                                    "paymentAccountId": {
                                        "type": "string",
                                        "description": "Payment account ID.",
                                        "nullable": true
                                    },
                                    "paymentSystem": {
                                        "type": "string",
                                        "description": "Payment system ID."
                                    },
                                    "installments": {
                                        "type": "integer",
                                        "description": "Number of installments."
                                    },
                                    "paymentSystemName": {
                                        "type": "string",
                                        "description": "Payment system name."
                                    },
                                    "paymentSystemGroup": {
                                        "type": "string",
                                        "description": "Payment system group."
                                    }
                                }
                            },
                            "currencyCode": {
                                "type": "string",
                                "description": "Currency code in [ISO 4217](https://www.iban.com/currency-codes) format."
                            },
                            "selectedSla": {
                                "type": "string",
                                "description": "Selected Service Level Agreement (SLA)."
                            },
                            "salesChannel": {
                                "type": "string",
                                "description": "Sales channel ([trade policy](https://help.vtex.com/en/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV)) associated with the purchase."
                            },
                            "seller": {
                                "type": "string",
                                "description": "Seller name. When the store acts both as marketplace and seller, this field corresponds to `1`, because every VTEX store is its own seller 1."
                            }
                        }
                    },
                    "cycleCount": {
                        "type": "integer",
                        "description": "The cycle determines the position of an order counting from when the customer subscribed. The original order that creates the subscription corresponds to cycle count `0`, the first subscription order corresponds to `1`, the second corresponds to `2`, and so on."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Subscription creation date and time in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`."
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Date and time of the last subscription update in [ISO 8601 time zone offset format](https://learn.microsoft.com/en-us/rest/api/storageservices/formatting-datetime-values), as in `YYYY-MM-DDThh:mm:ssZ`.",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "description": "Information about subscription items.",
                        "items": {
                            "type": "object",
                            "description": "Information about a given subscription item.",
                            "required": [
                                "id",
                                "isSkipped",
                                "quantity",
                                "skuId",
                                "status"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "Subscription item ID."
                                },
                                "skuId": {
                                    "type": "string",
                                    "description": "SKU ID."
                                },
                                "quantity": {
                                    "type": "integer",
                                    "description": "Quantity of units."
                                },
                                "isSkipped": {
                                    "type": "boolean",
                                    "description": "Defines if the customer asked to skip the item in the next subscription order (`true`), or not (`false`)."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Subscription status.",
                                    "enum": [
                                        "ACTIVE",
                                        "PAUSED",
                                        "CANCELED",
                                        "EXPIRED",
                                        "MISSING"
                                    ]
                                },
                                "originalOrderId": {
                                    "type": "string",
                                    "description": "Subscription original order ID."
                                },
                                "cycleCount": {
                                    "type": "integer",
                                    "description": "The cycle determines the position of an order counting from when the customer subscribed. The original order that creates the subscription corresponds to cycle count `0`, the first subscription order corresponds to `1`, the second corresponds to `2`, and so on."
                                },
                                "priceAtSubscriptionDate": {
                                    "type": "number",
                                    "description": "Price at subscription date."
                                },
                                "manualPrice": {
                                    "type": "number",
                                    "description": "[Manual price](https://help.vtex.com/en/tutorial/change-the-price-of-an-item-in-the-shopping-cart--7Cd37aCAmtL1qmoZJJvjNf)."
                                },
                                "attachments": {
                                    "type": "array",
                                    "description": "Information about [subscription attachments](https://help.vtex.com/en/tutorial/how-to-create-a-subscription-attachment--2bUuKyPflA8cOGLv8OvaKK).",
                                    "nullable": true,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Attachment name.",
                                                "nullable": true
                                            },
                                            "content": {
                                                "type": "object",
                                                "description": "Custom field for attachment content.",
                                                "nullable": true,
                                                "additionalProperties": {
                                                    "type": "string",
                                                    "description": "Custom field information."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "lastCycleId": {
                        "type": "string",
                        "description": "Last subscription cycle ID.",
                        "nullable": true
                    },
                    "customData": {
                        "type": "object",
                        "description": "Customizable fields created by the store for the shopping cart. This field is useful for storing data not included in other fields, for example, a message for a gift or a name to be printed in a shirt.",
                        "nullable": true,
                        "properties": {
                            "customApps": {
                                "type": "array",
                                "description": "Customizable apps created by the store.",
                                "nullable": true,
                                "items": {
                                    "type": "string",
                                    "description": "Customizable apps details.",
                                    "nullable": true
                                }
                            }
                        }
                    }
                }
            },
            "PlanRequest": {
                "title": "PlanRequest",
                "description": "Information about the plan.",
                "required": [
                    "frequency",
                    "id",
                    "purchaseDay"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true,
                        "description": "ID of the plan.",
                        "example": "store.subscription"
                    },
                    "frequency": {
                        "required": [
                            "interval",
                            "periodicity"
                        ],
                        "type": "object",
                        "description": "Information about subscriptions' recurrence.",
                        "properties": {
                            "periodicity": {
                                "type": "string",
                                "nullable": true,
                                "description": "Defines the subscriptions recurrence period. The possible values are: \r\n- `DAILY` \r\n- `WEEKLY` \r\n- `MONTHLY` \r\n- `YEARLY`",
                                "example": "MONTHLY"
                            },
                            "interval": {
                                "type": "integer",
                                "description": "Time interval configured between subscription orders, which depends on the periodicity. For a `DAILY` periodicity, the value will be days, for `MONTHLY` it will be months, and so on.",
                                "example": 3
                            }
                        }
                    },
                    "validity": {
                        "type": "object",
                        "description": "Information about the period during which the subscription will be valid.",
                        "properties": {
                            "begin": {
                                "type": "string",
                                "nullable": true,
                                "description": "Subscription's beginning date with the format `yyyy-mm-ddThh:mm:ss`.",
                                "example": "2022-06-10T00:00:00"
                            },
                            "end": {
                                "type": "string",
                                "nullable": true,
                                "description": "Subscription's ending date with the format `yyyy-mm-ddThh:mm:ss`.",
                                "example": "2023-06-10T00:00:00"
                            }
                        }
                    },
                    "purchaseDay": {
                        "type": "string",
                        "description": "Day in which recurrent orders will be created.",
                        "nullable": true,
                        "example": "15"
                    }
                },
                "additionalProperties": false
            },
            "shippingAddress": {
                "title": "shippingAddress",
                "required": [
                    "addressId",
                    "addressType"
                ],
                "type": "object",
                "properties": {
                    "addressId": {
                        "type": "string",
                        "nullable": true,
                        "description": "Shipping address ID.",
                        "example": "8109266555005"
                    },
                    "addressType": {
                        "type": "string",
                        "nullable": true,
                        "description": "Type of the address. Possible values are `residential` or `pickup`.",
                        "example": "residential"
                    }
                },
                "additionalProperties": false
            },
            "PaymentMethodThinRequest": {
                "title": "PaymentMethodRequest",
                "description": "Object containing information about the payment method.",
                "required": [
                    "paymentSystem"
                ],
                "type": "object",
                "properties": {
                    "paymentAccountId": {
                        "type": "string",
                        "nullable": true,
                        "description": "Data about shoppers' profiles and documents. For example, their credit card number. To obtain that information, use the endpoint [Get client profile by email](https://developers.vtex.com/docs/api-reference/checkout-api#get-/api/checkout/pub/profiles).",
                        "example": "340357032569595"
                    },
                    "paymentSystem": {
                        "type": "string",
                        "description": "Payment system's ID.",
                        "nullable": true,
                        "example": "4"
                    },
                    "installments": {
                        "type": "integer",
                        "description": "Number of payment installments.",
                        "nullable": true,
                        "example": 3
                    }
                },
                "additionalProperties": false
            },
            "PurchaseSettingsThinRequest": {
                "title": "PurchaseSettingsRequest",
                "description": "Object containing purchase settings information.",
                "required": [
                    "paymentMethod",
                    "salesChannel"
                ],
                "type": "object",
                "properties": {
                    "paymentMethod": {
                        "$ref": "#/components/schemas/PaymentMethodThinRequest"
                    },
                    "salesChannel": {
                        "type": "string",
                        "description": "Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV)) applied to the subscription being created. You can associate only one sales channel to each subscription. The default value is the main sales channel, which corresponds to `1`.",
                        "default": "1"
                    }
                },
                "additionalProperties": false
            },
            "SubscriptionUpdateRequestV3": {
                "title": "SubscriptionUpdateRequest",
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "description": "Name of the subscription.",
                        "example": "catFood"
                    },
                    "status": {
                        "type": "string",
                        "nullable": true,
                        "description": "Status to which you wish to update the subscription. The accepted values are: \r\n- `ACTIVE` \r\n- `PAUSED` \r\n- `CANCELED` \r\n- `EXPIRED` \r\n- `MISSING`",
                        "example": "ACTIVE"
                    },
                    "isSkipped": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "When set as `true`, it means the shopper asked to skip the next subscription order, and when set as `false`, no subscription order is going to be skipped.",
                        "example": false
                    },
                    "plan": {
                        "$ref": "#/components/schemas/PlanRequest"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/shippingAddress"
                    },
                    "purchaseSettings": {
                        "$ref": "#/components/schemas/PurchaseSettingsThinRequest"
                    }
                },
                "additionalProperties": false
            },
            "SubscriptionThinItemRequest": {
                "type": "object",
                "properties": {
                    "skuId": {
                        "type": "string",
                        "nullable": true,
                        "description": "SKU ID.",
                        "example": "12"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Amount of units in the cart.",
                        "example": 5
                    },
                    "manualPrice": {
                        "type": "integer",
                        "description": "Manual price.",
                        "nullable": true,
                        "example": 40
                    }
                },
                "additionalProperties": false
            },
            "SubscriptionGroupRequest": {
                "title": "SubscriptionRequest",
                "required": [
                    "customerEmail",
                    "items",
                    "plan",
                    "purchaseSettings",
                    "shippingAddress"
                ],
                "type": "object",
                "properties": {
                    "customerEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "nextPurchaseDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "catalogAttachment": {
                        "type": "string",
                        "nullable": true
                    },
                    "plan": {
                        "$ref": "#/components/schemas/PlanRequest"
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/shippingAddress"
                    },
                    "purchaseSettings": {
                        "$ref": "#/components/schemas/PurchaseSettingsThinRequest"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionThinItemRequest"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpdateItemInput": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "isSkipped": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32",
                        "title": "quantity",
                        "description": "Amount of units in the cart.",
                        "example": 5
                    },
                    "manualPrice": {
                        "type": "integer",
                        "format": "int32",
                        "title": "manualPrice",
                        "description": "Manual price.",
                        "default": null,
                        "nullable": true,
                        "example": 40
                    }
                },
                "additionalProperties": false
            },
            "ItemAttachment": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "content": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PriceTag": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "valueAsInt": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rawValue": {
                        "type": "number",
                        "format": "double"
                    },
                    "isPercentual": {
                        "type": "boolean"
                    },
                    "identifier": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "OrderItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "seller": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32",
                        "title": "quantity",
                        "description": "Amount of units in the cart.",
                        "example": 5
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "sellingPrice": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "unitMultiplier": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ItemAttachment"
                        },
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "isGift": {
                        "type": "boolean"
                    },
                    "priceTags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceTag"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "LogisticsInfoDeliveryWindow": {
                "type": "object",
                "properties": {
                    "startDateUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDateUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "additionalProperties": false
            },
            "LogisticsInfoSLA": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "pickupPointId": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryChannel": {
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "shippingEstimate": {
                        "type": "string",
                        "nullable": true
                    },
                    "lockTtl": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogisticsInfoDeliveryWindow"
                        },
                        "nullable": true
                    },
                    "availableDeliveryWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogisticsInfoDeliveryWindow"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "LogisticsInfo": {
                "type": "object",
                "properties": {
                    "itemIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32",
                        "title": "quantity",
                        "description": "Amount of units in the cart.",
                        "example": 5
                    },
                    "selectedSla": {
                        "type": "string",
                        "nullable": true
                    },
                    "selectedDeliveryChannel": {
                        "type": "string",
                        "nullable": true
                    },
                    "lockTtl": {
                        "type": "string",
                        "nullable": true
                    },
                    "shippingEstimate": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressId": {
                        "type": "string",
                        "nullable": true
                    },
                    "pickupId": {
                        "type": "string",
                        "nullable": true
                    },
                    "price": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "deliveryWindow": {
                        "$ref": "#/components/schemas/LogisticsInfoDeliveryWindow"
                    },
                    "slAs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogisticsInfoSLA"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PaymentField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Payment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymentSystem": {
                        "type": "string",
                        "nullable": true
                    },
                    "group": {
                        "type": "string",
                        "nullable": true
                    },
                    "bin": {
                        "type": "string",
                        "nullable": true
                    },
                    "accountId": {
                        "type": "string",
                        "nullable": true
                    },
                    "parentAccountId": {
                        "type": "string",
                        "nullable": true
                    },
                    "referenceValue": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "value": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "installments": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "cardNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentField"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Transaction": {
                "type": "object",
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    },
                    "payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Payment"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PaymentData": {
                "type": "object",
                "properties": {
                    "payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Payment"
                        },
                        "nullable": true
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SimulateMessageResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "text": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PurchaseContextAvailableGiftResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "seller": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32",
                        "title": "quantity",
                        "description": "Amount of units in the cart.",
                        "example": 5
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "sellingPrice": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "unitMultiplier": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ItemAttachment"
                        },
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "isGift": {
                        "type": "boolean"
                    },
                    "priceTags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceTag"
                        },
                        "nullable": true
                    },
                    "isSelected": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "PurchaseContextSelectableGiftsResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "availableQuantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "availableGifts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PurchaseContextAvailableGiftResponse"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "TotalizationResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "valueAsInt": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "additionalProperties": false
            },
            "SimulateResponse": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        },
                        "nullable": true
                    },
                    "logisticsInfo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogisticsInfo"
                        },
                        "nullable": true
                    },
                    "paymentData": {
                        "$ref": "#/components/schemas/PaymentData"
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "postalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimulateMessageResponse"
                        },
                        "nullable": true
                    },
                    "selectableGiftsResponse": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PurchaseContextSelectableGiftsResponse"
                        },
                        "nullable": true
                    },
                    "totals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TotalizationResponse"
                        },
                        "nullable": true
                    },
                    "simulationItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimulationItemResult"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShippingEstimate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "estimate": {
                        "type": "string",
                        "nullable": true
                    },
                    "estimateDeliveryDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "nextPurchaseDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "allItemsMatched": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Totalization": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "SimulateResponseVO": {
                "type": "object",
                "properties": {
                    "simulateResponse": {
                        "$ref": "#/components/schemas/SimulateResponse"
                    },
                    "shippingEstimate": {
                        "$ref": "#/components/schemas/ShippingEstimate"
                    },
                    "simulationItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimulationItemResult"
                        },
                        "nullable": true
                    },
                    "totals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Totalization"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "settings": {
                "description": "Subscriptions settings.",
                "type": "object",
                "required": [
                    "slaOption",
                    "defaultSla",
                    "isUsingV3",
                    "onMigrationProcess",
                    "executionHourInUtc",
                    "workflowVersion",
                    "deliveryChannels",
                    "randomIdGeneration",
                    "isMultipleInstallmentsEnabledOnCreation",
                    "isMultipleInstallmentsEnabledOnUpdate",
                    "orderCustomDataAppId",
                    "postponeExpiration",
                    "manualPriceAllowed",
                    "useItemPriceFromOriginalOrder"
                ],
                "properties": {
                    "slaOption": {
                        "description": "Delivery method.",
                        "type": "string",
                        "example": "NONE"
                    },
                    "defaultSla": {
                        "description": "Default delivery method.",
                        "type": "string",
                        "default": null,
                        "nullable": true,
                        "example": null
                    },
                    "isUsingV3": {
                        "description": "Indicates whether or not Subscriptions V3 is enabled.",
                        "type": "boolean",
                        "default": false,
                        "example": true
                    },
                    "onMigrationProcess": {
                        "description": "Indicates whether or not the account is in the migration process to Subscriptions V3.",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "executionHourInUtc": {
                        "description": "Indicates the time future subscription orders will be generated.",
                        "type": "integer",
                        "default": 0,
                        "example": 9
                    },
                    "workflowVersion": {
                        "description": "Workflow version.",
                        "type": "string",
                        "example": "1.1"
                    },
                    "deliveryChannels": {
                        "description": "Array containing delivery channels.",
                        "type": "array",
                        "items": {
                            "description": "Type of delivery channel. The values that are possible are: `pickupInPoint` for pickup point and `delivery` for regular delivery.",
                            "type": "string",
                            "example": "delivery"
                        }
                    },
                    "randomIdGeneration": {
                        "description": "Defines whether or not the subscription order IDs will be randomly generated.",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "isMultipleInstallmentsEnabledOnCreation": {
                        "description": "Defines whether or not multiple installments are enabled when a subscription is created.",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "isMultipleInstallmentsEnabledOnUpdate": {
                        "description": "Defines whether or not multiple installments are enabled when a subscription is updated.",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "orderCustomDataAppId": {
                        "description": "When filled, this field passes along the `customData` infomration in the order to the future recurrent subscription orders.",
                        "type": "string",
                        "default": null,
                        "example": null
                    },
                    "postponeExpiration": {
                        "description": "Defines whether or not the expiration of subscriptions can be postponed.",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "manualPriceAllowed": {
                        "description": "When set to `true`, this property enables manual price configuration in subscription items. This is valid for all existing subscriptions, provided that there is a manual price configured and that `isUsingV3` is `true`.",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "useItemPriceFromOriginalOrder": {
                        "title": "useItemPriceFromOriginalOrder",
                        "description": "When set to `true`, this property enables using the manual price for each item from the original subscription order. This is only valid for new subscriptions, created from the moment this configuration is enabled. For this to work, it is mandatory that the `manualPriceAllowed` property is set to `true` and that `isUsingV3` is `true`.",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    }
                },
                "example": [
                    {
                        "slaOption": "NONE",
                        "defaultSla": null,
                        "isUsingV3": true,
                        "onMigrationProcess": false,
                        "executionHourInUtc": 9,
                        "workflowVersion": "1.1",
                        "deliveryChannels": [
                            "delivery"
                        ],
                        "randomIdGeneration": false,
                        "isMultipleInstallmentsEnabledOnCreation": false,
                        "isMultipleInstallmentsEnabledOnUpdate": false,
                        "orderCustomDataAppId": null,
                        "postponeExpiration": false,
                        "manualPriceAllowed": false,
                        "useItemPriceFromOriginalOrder": false
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Cycles"
        },
        {
            "name": "Plans"
        },
        {
            "name": "Reports"
        },
        {
            "name": "Subscriptions"
        },
        {
            "name": "Settings"
        }
    ]
}